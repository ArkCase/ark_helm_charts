#!/bin/bash
SCRIPT="$(readlink -f "${BASH_SOURCE:-${0}}")"
BASEDIR="$(dirname "${SCRIPT}")"

#
# This script helps to manage dependencies when one or more charts are updated.
# 
# It automatically triggers downstream builds as required on dependent charts.
#

HELM_REPO_URL="https://arkcase.github.io/ark_helm_charts/"

say() {
	echo -e "${@}"
}

set -euo pipefail

cd "${BASEDIR}"

while true ; do
	NEXT_ITERATION=()
	for CHART_NAME in "${@}" ; do
		CHART="src/${CHART_NAME}"

		say "Packaging ${CHART_NAME}"
		OUT="$(helm package -d "${BASEDIR}/repo" "${CHART}")"

		SRC="$(echo -n "${OUT}" | sed -e 's;^.*and saved it to: ;;g')"
		NEW_DEPS=()
		while read f ; do
			CHARTSDIR="$(dirname "${f}")"
			MAINDIR="$(dirname "${CHARTSDIR}")"
			DEPENDENCY="$(basename "${MAINDIR}")"
			say "\tApplying ${CHART_NAME} to ${DEPENDENCY}"
			(
				rm -fv "${f}"
				cp -vf "${SRC}" "${CHARTSDIR}"
			) |& sed -e 's;^;\t\t;g'
			NEW_DEPS+=("${DEPENDENCY}")
		done < <(find src -type f -name "${CHART_NAME}-*.tgz" | sort)
		say "\tFound ${#NEW_DEPS[@]} dependencies for ${CHART_NAME}:"
		for D in "${NEW_DEPS[@]}" ; do
			say "\t\t${D}"
		done | sort
		NEXT_ITERATION+=("${NEW_DEPS[@]}")
	done

	readarray -t NI < <( for n in "${NEXT_ITERATION[@]}" ; do echo "${n}" ; done | sort -u )
	set -- "${NI[@]}"
    [ "${#}" -lt 1 ] && break
done
( cd "repo" && helm repo index --url "${HELM_REPO_URL}" . )
