#!/bin/bash

set -euo pipefail

[ -v DEBUG ] || DEBUG="false"
case "${DEBUG,,}" in
	true | t | 1 | on | y | yes | enabled | enable | active ) DEBUG="true" ;;
	* ) DEBUG="false" ;;
esac

timestamp() {
	/usr/bin/date -Ins -u
}

say() {
	echo -e "$(timestamp): ${@}"
}

err() {
	say "ERROR: ${@}" 1>&2
}

fail() {
	say "${@}"
	exit ${EXIT_CODE:-1}
}

cleanup() {
	[ -v RUN_MARKER ] || RUN_MARKER=""
	[ -z "${RUN_MARKER}" ] || rm -rf "${RUN_MARKER}" &>/dev/null
}

usage() {
	say "usage: ${BASH_SOURCE:-${0}} lock-marker initializer-process"
}

[ ${#} -ne 2 ] && usage

[ -v BASE_DIR ] || BASE_DIR="/app"
[ -v LOGS_DIR ] || LOGS_DIR="${BASE_DIR}/logs"
[ -d "${LOGS_DIR}" ] || mkdir -p "${LOGS_DIR}"
if [ -d "${LOGS_DIR}" ] ; then
    LOG_FILE="${LOGS_DIR}/lock-initializer.log"
    exec > >(/usr/bin/tee -a "${LOG_FILE}")
    exec 2>&1
    say "Logs redirected to [${LOG_FILE}]"
fi

[ -v PENTAHO_VERSION ] || fail "The PENTAHO_VERSION variable isn't set, please update your Pentaho container image"

export INIT_MARKER="${1}"
[[ "${INIT_MARKER}" =~ ^[^[:space:]]{32,}$ ]] || fail "The lock-marker parameter must not be empty, may not contain any spaces, and must be at least 32 characters long"
read MARKER_SUM REST < <(echo -n "${INIT_MARKER}" | sha256sum)

export INIT_PROCESS="${2}"
[ -n "${INIT_PROCESS}" ] || fail "The initializer-process parameter may not be the empty string"

export INIT_VERSION="${PENTAHO_VERSION}"

say "Version info: ${INIT_VERSION}"
say "Process info: ${INIT_PROCESS}"
say "Marker info:  ${#INIT_MARKER}:[${MARKER_SUM}]"

export CURATOR_WRAPPER_JAR="/usr/local/bin/curator-wrapper.jar"
export CURATOR_WRAPPER_CONF="/usr/local/etc/curator-wrapper.yaml"

(
	set -x
	exec java -jar "${CURATOR_WRAPPER_JAR}" -c "${CURATOR_WRAPPER_CONF}"
)
exit ${?}
