{{- $cluster := (include "arkcase.cluster.info" $ | fromYaml) -}}
{{- $fullName := (include "arkcase.fullname" $) -}}
{{- $roleBaseName := "pod-modifier" -}}
{{- $roleName := (printf "%s-%s" $fullName $roleBaseName) -}}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $fullName | quote }}
  namespace: {{ $.Release.Namespace | quote }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ $roleName | quote }}
  namespace: {{ $.Release.Namespace | quote }}
rules:
  - apiGroups: [ "" ]
    resources: [ "pods" ]
    verbs: [ "get", "list", "patch", "update", "watch" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ printf "%s:%s" $fullName $roleBaseName | quote }}
  namespace: {{ $.Release.Namespace | quote }}
subjects:
  - kind: ServiceAccount
    name: {{ $fullName | quote }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ $roleName | quote }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullName | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
    {{- with ($.Values.labels).common }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with ($.Values.annotations).common }}
  annotations: {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels: {{- include "arkcase.labels.matchLabels" $ | nindent 6 }}
  serviceName: {{ include "arkcase.service.headless" $ | quote }}
  updateStrategy:
    type: {{ $.Values.updateStrategy }}
    {{- if (eq "Recreate" $.Values.updateStrategy) }}
    rollingUpdate: null
    {{- else if $.Values.rollingUpdatePartition }}
    rollingUpdate:
      partition: {{ $.Values.rollingUpdatePartition }}
    {{- end }}
  template:
    metadata:
      name: {{ $fullName | quote }}
      namespace: {{ $.Release.Namespace | quote }}
      labels: {{- include "arkcase.labels" $ | nindent 8 }}
        {{- with ($.Values.labels).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- with ($.Values.annotations).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- include "arkcase.image.pullSecrets" $ | nindent 6 }}
      {{- with $.Values.hostAliases }}
      hostAliases: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.schedulerName }}
      schedulerName: {{ $.Values.schedulerName | quote }}
      {{- end }}
      serviceAccountName: {{ $fullName | quote }}
      {{- with ($.Values.securityContext).template }}
      securityContext: {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: shell-operator
          {{- include "arkcase.image" $ | nindent 10 }}
          {{- with ($.Values.securityContext).nettest }}
          securityContext: {{- toYaml . | nindent 12 }}
          {{- end }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            - name: LOG_TYPE
              value: "color"
          resources: {{- include "arkcase.resources" $ | nindent 12 }}
          volumeMounts:
            - name: &configMap "configmap"
              mountPath: "/hooks/00-ready-marker.sh"
              subPath: &hookReadyMarkerSh "ready-marker.sh"
              readOnly: true
      volumes:
        - name: *configMap
          configMap:
            name: {{ $fullName | quote }}
            optional: false
            defaultMode: 0440
            items:
              - key: *hookReadyMarkerSh
                path: *hookReadyMarkerSh
                mode: 0555
        - name: "messaging"
          secret:
            secretName: "messaging"
      {{- with $.Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
