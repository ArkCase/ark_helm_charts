{{- $baseUrl := (include "arkcase.tools.conf" (dict "ctx" $ "value" "baseUrl") | toString) -}}
{{- if $baseUrl -}}
  {{- $baseUrl = ((include "arkcase.tools.parseUrl" $baseUrl) | fromYaml) -}}
  {{- $ingress := ($.Values.global.ingress | default dict) -}}
  {{- $ingress = (kindIs "map" $ingress) | ternary $ingress dict -}}
  {{- $enabled := or (not (hasKey $ingress "enabled")) (eq "true" ($ingress.enabled | toString | lower)) -}}
  {{- $https := (eq "https" ($baseUrl.scheme | lower)) -}}
  {{- $hostname := $baseUrl.hostname -}}
  {{- $path := $baseUrl.path | default "/" -}}
  {{- $foia := (include "arkcase.foia" $ | fromYaml) -}}

  {{- $secretData := $ingress.secret -}}
  {{- if and $https (not $secretData) -}}
    {{- fail "The base URL is an HTTPS URL, but no information was given regarding the secret to use for the certificates" -}}
  {{- end -}}
  {{- $secretName := (include "arkcase.fullname" $) -}}
  {{- if and $enabled $hostname -}}
    {{- if and $https $secretData -}}
      {{- if (kindIs "string" $secretData) }}
        {{- $secretName = $secretData }}
      {{- else if (kindIs "map" $secretData) -}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
        {{- with (include "arkcase.values" (dict "ctx" $ "base" "labels") | fromYaml) }}
          {{- toYaml . | nindent 4 }}
        {{- end }}
  annotations:
        {{- with (include "arkcase.values" (dict "ctx" $ "base" "annotations") | fromYaml) }}
          {{- toYaml . | nindent 4 }}
        {{- end }}
type: kubernetes.io/tls
stringData:
        {{- with $secretData }}
  tls.crt: |- {{- .crt | required "Must provide a certificate in the TLS section (label = 'crt')" | nindent 4 }}
  tls.key: |- {{- .key | required "Must provide a private key in the TLS section (label = 'key')" | nindent 4 }}
          {{- if .ca }}
  tls.ca: |- {{- .ca | nindent 4 }}
          {{- end }}
        {{- end }}
      {{- else }}
        {{- fail (printf "The ingress secret must either be a string or a map (is a %s)" (kindOf $secretData)) -}}
      {{- end }}
    {{- end }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "arkcase.fullname" $ | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
    {{- with (include "arkcase.values" (dict "ctx" $ "base" "labels") | fromYaml) }}
      {{- toYaml .value | nindent 4 }}
    {{- end }}
  annotations:
    haproxy-ingress.github.io/backend-protocol: "h1-ssl"
    haproxy-ingress.github.io/ssl-redirect: "true"
    haproxy-ingress.github.io/secure-backends: "true"
    haproxy-ingress.github.io/secure-sni: "host"
    {{- with (include "arkcase.values" (dict "ctx" $ "base" "annotations") | fromYaml) }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- with $ingress.annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
    {{- with $ingress.className }}
  ingressClassName: {{ . | quote }}
    {{- end }}
    {{- if $ingress.gateway }}
  defaultBackend:
    service:
      name: "gateway"
      port:
        number: 80
    {{- end }}
  rules:
    - host: {{ $hostname | quote }}
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: "core"
                port:
                  number: 8443
    {{- if $foia }}
          # We'll re-enable this when we figure out how to cleanly
          # expose Neo4j for user consumption
          # - path: "/browser"
          #   pathType: Prefix
          #   backend:
          #     service:
          #       name: "analytics"
          #       port:
          #         number: 8443
    {{- end }}
    {{- if $ingress.artifacts }}
          - path: "/artifacts"
            pathType: Prefix
            backend:
              service:
                name: "app-artifacts"
                port:
                  number: 443
    {{- end }}
    {{- if $ingress.content }}
          - path: "/alfresco"
            pathType: Prefix
            backend:
              service:
                name: "content-main"
                port:
                  number: 8443
          - path: "/api-explorer"
            pathType: Prefix
            backend:
              service:
                name: "content-share"
                port:
                  number: 8443
          - path: "/share"
            pathType: Prefix
            backend:
              service:
                name: "content-share"
                port:
                  number: 8443
    {{- end }}
    {{- if $ingress.messaging }}
          - path: "/console"
            pathType: Prefix
            backend:
              service:
                name: "messaging"
                port:
                  number: 8443
    {{- end }}
    {{- if $ingress.reports }}
          - path: "/pentaho"
            pathType: Prefix
            backend:
              service:
                name: "reports"
                port:
                  number: 8443
    {{- end }}
    {{- if $ingress.search }}
          - path: "/solr"
            pathType: Prefix
            backend:
              service:
                name: "search"
                port:
                  number: 8983
    {{- end }}
    {{- if and $https $secretData }}
  tls:
    - secretName: {{ $secretName | quote }}
      hosts:
        - {{ $hostname | quote }}
    {{- end }}
  {{- end }}
{{- end }}
