{{- if (include "arkcase.subsystem.enabled" $) -}}
  {{- $ctx := $ -}}
  {{- $service := (include "arkcase.service.name" $ctx) -}}
  {{- $secretName := ( include "arkcase.subsystem-access.name" $ctx) -}}

  {{- $secretObj := (lookup "v1" "Secret" $ctx.Release.Namespace $secretName) }}
  {{- $stringData := dict -}}
  {{- if $secretObj }}
    {{- $secretData := (get $secretObj "data") }}
    {{- if $secretData }}
      {{- range $key, $b64value := $secretData -}}
        {{- $stringData = set $stringData $key ($b64value | b64dec) -}}
      {{- end -}}
    {{- end }}
  {{- end }}
  {{- $stringData = set $stringData "url" (printf "https://%s" $service) -}}
  {{- /* If there's no instanceId specified yet, then we specify one! */ -}}
  {{- if not $stringData.instanceId -}}
    {{- $stringData = set $stringData "instanceId" (genPrivateKey "rsa" | sha256sum) -}}
  {{- end -}}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
    {{- with ($.Values.labels).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    helm.sh/resource-policy: keep
    {{- with ($.Values.annotations).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
type: Opaque
stringData: {{- $stringData | toYaml | nindent 2 }}
{{- end -}}
