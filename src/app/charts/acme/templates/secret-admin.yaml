{{- if (include "arkcase.subsystem.enabled" $) -}}
  {{- $ctx := $ -}}
  {{- $conf := (include "arkcase.subsystem-access.conf" $ctx | fromYaml) -}}
  {{- $subsys := (include "arkcase.subsystem.name" $ctx) -}}
  {{- $name := (include "arkcase.subsystem-access.name.admin" $ctx) -}}
  {{- $legacyName := (printf "%s-%s-shared" $ctx.Release.Name $subsys) -}}
  {{- $legacyKey := "ACME_CLIENT_PASSWORD" -}}

  {{- $passwordKey := "password" -}}
  {{- $password := "" -}}

  {{- $candidates := (dict $name $passwordKey $legacyName $legacyKey) -}}
  {{- range $secretName, $key := $candidates -}}
    {{- $secretObj := (lookup "v1" "Secret" $ctx.Release.Namespace $secretName) -}}
    {{- if not $secretObj -}}
      {{- continue -}}
    {{- end -}}

    {{- $secretData := (get $secretObj "data") -}}
    {{- if not $secretData -}}
      {{- continue -}}
    {{- end -}}

    {{- if not (hasKey $secretData $key) -}}
      {{- continue -}}
    {{- end -}}

    {{- $password = (get $secretData $key) -}}
    {{- break -}}
  {{- end -}}

  {{- if not $password -}}
    {{- /* We found neither the prior password, nor the legacy password ... render a new one! */ -}}
    {{- $password = (randAlphaNum 64 | b64enc) -}}
  {{- end -}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $name | quote }}
  namespace: {{ $ctx.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ctx | nindent 4 }}
    {{- with ($ctx.Values.labels).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    helm.sh/resource-policy: "keep"
    {{- with ($ctx.Values.annotations).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
type: Opaque
data:
  {{ $passwordKey }}: {{ $password | quote }}
{{- end -}}
