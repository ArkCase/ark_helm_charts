{{- if (include "arkcase.subsystem.enabled" $) -}}
  {{- $ctx := $ -}}
  {{- $dbInfo := (include "arkcase.db.info" $ctx | fromYaml) -}}

  {{- range $username := (list "arkcase" "content" "pentaho" "jcr" "quartz") }}
    {{- $secretName := (include "arkcase.subsystem-access.name" (dict "ctx" $ctx "conn" $username)) }}

    {{- $secret := (include "arkcase.get-existing.secret" (dict "ctx" $ "name" $secretName) | fromYaml) }}
    {{- $secretData := $secret.data | default dict -}}
    {{- $username = $secretData.username | default $username }}
    {{- $password := $secretData.password | default (randAlphaNum 64) }}

    {{-
      $data := dict
        "endpoint" (include "arkcase.service.name" $)
        "port" ($dbInfo.port | int | toString)
        "username" $username
        "password" $password
        "database" $username
        "schema" ""
    }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
    {{- with ($.Values.labels).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with ($.Values.annotations).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
type: Opaque
data: {{- include "arkcase.secret.encode" $data | nindent 2 }}
  {{- end }}
{{- end -}}
