{{- if (include "arkcase.subsystem.enabled" $) -}}
  {{- $ctx := $ -}}
  {{- $secretName := (include "arkcase.subsystem-access.name" (dict "ctx" $ctx "conn" "admin")) -}}
  {{- $dbInfo := (include "arkcase.db.info" $ctx | fromYaml) -}}

  {{- /*
    We only take the old secret into account on an upgrade b/c we don't know which pods
    will get rolled, and as a result we don't want to mess with the configuration too
    much.
  */ -}}

  {{- $secret := (include "arkcase.get-existing.secret" (dict "ctx" $ "name" $secretName) | fromYaml) -}}
  {{- $secretData := $secret.data | default dict -}}
  {{- $username := $secretData.username | default $dbInfo.admin | default $dbInfo.name -}}
  {{- $password := $secretData.password | default (randAlphaNum 64) -}}

  {{-
    $data := dict
      "endpoint" (include "arkcase.service.name" $)
      "port" ($dbInfo.port | int | toString)
      "username" $username
      "password" $password
  -}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
    {{- with ($.Values.labels).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with ($.Values.annotations).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
type: Opaque
data: {{- include "arkcase.secret.encode" $data | nindent 2 -}}
{{- end -}}
