{{- if (include "arkcase.subsystem.enabled" $) -}}
  {{- $name := (include "arkcase.subsystem-access.name.admin" $) -}}
  {{- $dbinfo := (include "arkcase.db.info" $ | fromYaml) -}}

  {{- /*
    We only take the old secret into account on an upgrade b/c we don't know which pods
    will get rolled, and as a result we don't want to mess with the configuration too
    much.
  */ -}}
  {{- $username := $dbinfo.admin | default $dbinfo.name | b64enc -}}
  {{- $password := "" -}}

  {{- /* We gate this here to avoid doing the work if it's not an upgrade */ -}}
  {{- if $.Release.IsUpgrade -}}
    {{- $secretData := (include "arkcase.get-existing.config" (dict "ctx" $ "name" $name)) -}}
    {{- if $secretData -}}
      {{- $username = (hasKey $secretData.data "username" | ternary $secretData.data.username $username) -}}
      {{- $password = (hasKey $secretData.data "password" | ternary $secretData.data.password $password) -}}
    {{- end -}}
  {{- end -}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $name | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
    {{- with ($.Values.labels).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with ($.Values.annotations).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
type: Opaque
data:
  username: {{ $username }}
  password: {{ $password | default (randAlphaNum 64 | b64enc) }}
{{- end -}}
