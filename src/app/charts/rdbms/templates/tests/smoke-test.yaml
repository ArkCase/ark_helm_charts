{{- if and (include "arkcase.subsystem.enabled" $) (not (include "arkcase.rdbms.external" $)) }}
{{- $db := (include "arkcase.db.info" $ | fromYaml) -}}
{{- $startTls := "" -}}
{{- if and (hasKey $db "starttls") $db.starttls -}}
  {{- $startTls = (printf "-starttls %s" ($db.starttls | quote)) -}}
{{- end -}}
apiVersion: v1
kind: Pod
metadata:
  name: {{ printf "%s-test" (include "arkcase.fullname" $) | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
    {{- with ($.Values.labels).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- with ($.Values.test).labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
    arkcase.com/task: "test"
    arkcase.com/test-type: "smoke"
    arkcase.com/test-subsystem: {{ include "arkcase.subsystem.name" $ | quote }}
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: hook-succeeded
    {{- with ($.Values.annotations).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- with ($.Values.test).annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  containers:
    - name: test
      {{- include "arkcase.image" (dict "ctx" $ "name" "smoke-test" "repository" "arkcase/nettest") | nindent 6 }}
      {{- include "arkcase.image.pullSecrets" $ | nindent 6 }}
      command: [ "/usr/local/bin/run-from-env" ]
      args: [ "SCRIPT" ]
      env:
        - name: SERVICE_NAME
          value: {{ include "arkcase.service.name" $ | quote }}
        - name: SCRIPT
          value: |-
            set -xeuo pipefail
            /usr/local/bin/acme-init
            /usr/bin/timeout 3 /usr/bin/openssl s_client -connect "$(SERVICE_NAME):{{ $db.port }}" -verify_quiet -verify_return_error -showcerts {{ $startTls }} < /dev/null
  restartPolicy: Never
{{- end }}
