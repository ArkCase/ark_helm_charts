# Default values for ark-postgres.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This can be set to "false" by parent charts. If not defined, it will be taken as true
#enabled: true

#
# This should group all application-specific configurations
#
configuration:
  # Limit, in GiB, of how big the KahaDB store can grow
  maxStoreUsageGb: 50

  # Limit, in GiB, of how much temporary storage MariaDB can use
  maxTempUsageGb: 10

resources:
  development:
    limits: "100Mi,0.1"

# Please leave the `replicaCount` to 1 for the time being. Clustering is not
# supported yet.
replicaCount: 1

platform: ""
image:
  # pullPolicy: IfNotPresent
  registry: "public.ecr.aws"

  postgresql:
    repository: "arkcase/postgres"
    tag: "13"

  mysql:
    # We use MariaDB here for convenience
    repository: "arkcase/mariadb"
    tag: "10.6"

  dbinit:
    repository: "arkcase/dbinit"
    tag: "1.2.0"

# You generally shouldn't mess with these. These exist to support some name-generation templates
nameOverride: ""
fullnameOverride: ""

# Custom annotations to apply throughout
annotations:

# Custom labels to apply throughout
labels:

updateStrategy: RollingUpdate
rollingUpdatePartition: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations:
  # Annotations to add to the service account
  labels:
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

securityContext:
  # You must specify an `fsGroup` to allow MariaDB write access to mounted
  # volumes (as long as MariaDB runs as a non-root user, which should be the
  # case). Any random number will do.
  # fsGroup: 999
  # fsGroupChangePolicy: OnRootMismatch

  postgres:
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true

#autoscaling:
  #enabled: false
  #minReplicas: 1
  #maxReplicas: 100
  #targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector:

tolerations:

affinity:

persistence:
  # If set to `false`, an `emptyDir` will be used instead and all other `persistence.*` parameters
  # are ignored.
  enabled: true

  # Set the default capacity for volumes in case none is assigned explicitly
  # and the default value is insufficient
  volumeSize:
    init: "1Gi"
    data: "16Gi"

#  The volumes for persistent data
  volumes:
# The volume where the data will be stored (RTFM for more info on how to
# properly declare volumes)
#     data:

probes: &probesTemplate
  enabled: true
  spec: &probesSpecTemplate
    initialDelaySeconds: 0
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 1
    successThreshold: 1
  startup:
    failureThreshold: 90

service:
  mysql:
    ports:
      - name: mysql
        protocol: TCP
        port: &mysql 3306
    probes:
      <<: *probesTemplate
      spec:
        <<: *probesSpecTemplate
        tcpSocket:
          port: *mysql

  postgresql:
    ports:
      - name: postgresql
        protocol: TCP
        port: &psql 5432
    probes:
      <<: *probesTemplate
      spec:
        <<: *probesSpecTemplate
        tcpSocket:
          port: *psql

  oracle:
    ports:
      - name: orcl
        protocol: TCP
        port: &orcl 1521
    probes:
      <<: *probesTemplate
      spec:
        <<: *probesSpecTemplate
        tcpSocket:
          port: *orcl

  sqlserver:
    ports:
      - name: sqlserver
        protocol: TCP
        port: &mssql 1433
    probes:
      <<: *probesTemplate
      spec:
        <<: *probesSpecTemplate
        tcpSocket:
          port: *mssql

##
## Configure extra options for containers' liveness and readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
## @param service.probes.enabled Enable liveness and readiness probes
## @param service.probes.spec.initialDelaySeconds Initial delay seconds for liveness and readiness probes
## @param service.probes.spec.periodSeconds Period seconds for liveness and readiness probes
## @param service.probes.spec.timeoutSeconds Timeout seconds for liveness and readiness probes
## @param service.probes.spec.failureThreshold Failure threshold for liveness and readiness probes
## @param service.probes.spec.successThreshold Success threshold for liveness and readiness probes
##
