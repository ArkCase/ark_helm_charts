{{- if (include "arkcase.neo4j.enabled" $) -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "arkcase.fullname" $ | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels.service" $ | nindent 4 }}
    {{- with ($.Values.labels).common }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with ($.Values.annotations).common }}
  annotations: {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  selector: &labelSelector
    matchLabels: {{- include "arkcase.labels.matchLabels" $ | nindent 6 }}
  serviceName: {{ include "arkcase.service.headless" $ | quote }}
  updateStrategy: {{- include "arkcase.cluster.statefulUpdateStrategy" $ | nindent 4 }}
  podManagementPolicy: Parallel
  template:
    metadata:
      name: {{ include "arkcase.fullname" $ | quote }}
      namespace: {{ $.Release.Namespace | quote }}
      labels: {{- include "arkcase.labels.service" $ | nindent 8 }}
        {{- with ($.Values.labels).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        # NB: Both these annotation values must be of type "string"
        prometheus.io/scrape: "true"
        prometheus.io/port: "9100"
        {{- with ($.Values.annotations).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- include "arkcase.image.pullSecrets" $ | nindent 6 }}
      {{- with $.Values.hostAliases }}
      hostAliases: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.schedulerName }}
      schedulerName: {{ $.Values.schedulerName | quote }}
      {{- end }}
      securityContext: {{- include "arkcase.securityContext" $ | nindent 8 }}
      initContainers:
        - name: init-set-permissions
          {{- include "arkcase.image" (dict "ctx" $ "name" "setperm" "repository" "arkcase/setperm") | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            - name: DATA_DIR
              value: &dataDir "/app/data"
            - name: LOGS_DIR
              value: &logsDir "/app/logs"
            - name: WORK_DIR
              value: &workDir "/app/work"
            - name: JOBS
              value: |-
                jobs:
                  # We know the ActiveMQ image uses user 998 (centos), 1998 (rocky)
                  - ownership: {{ coalesce ($.Values.persistence).ownership "1998:1998" | quote }}
                    permissions: "u=rwX,g=rX,o="
                    flags: [ "recurse", "forced", "create", "changes" ]
                    targets: [ "$(DATA_DIR)", "$(LOGS_DIR)", "$(WORK_DIR)" ]
          volumeMounts:
            - name: &dataVol "data"
              mountPath: *dataDir
            - name: &logsVol "logs"
              mountPath: *logsDir
            - name: &workVol "work"
              mountPath: *workDir
        {{- include "arkcase.initDependencies.container" $ | nindent 8 }}
      containers:
        - name: neo4j
          {{- include "arkcase.image" $ | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            {{- include "arkcase.acme.env" $ | nindent 12 }}
            - name: NEO4J_ADMIN_PASSWORD
              value: {{ $.Values.configuration.password }}
            - name: NEO4J_CONF
              value: "/app/conf"
            {{- if $.Values.env }}
            {{- $.Values.env | toYaml | nindent 12 }}
            {{- end }}
          {{- include "arkcase.subsystem.ports" $ | nindent 10 }}
          resources: {{- include "arkcase.resources" $ | nindent 12 }}
          securityContext: {{- include "arkcase.securityContext" (dict "ctx" $ "container" "neo4j") | nindent 12 }}
          volumeMounts:
            {{- include "arkcase.acme.volumeMount" $ | nindent 12 }}
            - name: *dataVol
              mountPath: *dataDir
            - name: *logsVol
              mountPath: *logsDir
            - name: *workVol
              mountPath: *workDir
            - name: &configMap "config-map"
              mountPath: "/app/conf/neo4j.conf"
              subPath: &neo4jConf "neo4j.conf"
              readOnly: true
      volumes:
        {{- include "arkcase.acme.volume" $ | nindent 8 }}
        {{- include "arkcase.persistence.ephemeralVolume" (dict "ctx" $ "name" "work") | nindent 8 }}
        {{- include "arkcase.persistence.volume" (dict "ctx" $ "name" "data") | nindent 8 }}
        {{- include "arkcase.persistence.volume" (dict "ctx" $ "name" "logs") | nindent 8 }}
        - name: *configMap
          configMap:
            name: {{ include "arkcase.fullname" $ | quote }}
            optional: false
            defaultMode: 0440
            items:
              - key: *neo4jConf
                path: *neo4jConf
  volumeClaimTemplates:
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "data") | nindent 4 }}
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "logs") | nindent 4 }}

  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "data") | nindent 0 }}
  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "logs") | nindent 0 }}
{{- end -}}
