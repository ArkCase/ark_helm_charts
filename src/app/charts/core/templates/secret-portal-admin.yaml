{{- if and (include "arkcase.subsystem.enabled" $) -}}
  {{- $ctx := $ -}}
  {{- $service := (include "arkcase.service.name" $ctx) -}}
  {{- $name := (include "arkcase.subsystem-access.name" (dict "ctx" $ctx "conn" "portal-admin")) -}}
  {{- $port := 8443 -}}
  {{- $url := (include "arkcase.tools.parseUrl" (printf "https://%s:%d" $service $port) | fromYaml) -}}

  {{- $secret := (include "arkcase.get-existing.secret" (dict "ctx" $ "name" $name) | fromYaml) }}
  {{- $data := (empty $secret) | ternary "" $secret.data | default dict }}

  {{- $password := "" -}}
  {{- if and $data $data.password -}}
    {{- $password = ($data.password | b64dec) -}}
  {{- end -}}

  {{- if not $password -}}
    {{- $password = (randAlphaNum 64) -}}
  {{- end -}}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $name | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
    {{- with ($.Values.labels).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with ($.Values.annotations).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
type: Opaque
stringData:
  url: {{ printf "%s://%s" $url.scheme $url.host | quote }}
  {{- range $k := (list "scheme" "hostname" "port") }}
  {{ $k }}: {{ get $url $k | toString | quote }}
  {{- end }}

  username: "portal-admin"
  password: {{ $password | quote }}
  group: "ARKCASE_PORTAL_ADMINISTRATOR,ARKCASE_PORTAL_USER,OFFICERS"

{{- end -}}
