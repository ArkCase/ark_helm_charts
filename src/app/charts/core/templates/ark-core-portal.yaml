{{- $portal := (include "arkcase.portal" $ | fromYaml) -}}
{{- if and (include "arkcase.subsystem.enabled" $) $portal -}}
  {{- $dev := (include "arkcase.dev" $ | fromYaml) -}}
  {{- $debug := $dev.debug | default dict -}}
  {{- $devUid := (empty $dev) | ternary 1997 $dev.uid | int64 -}}
  {{- $devGid := (empty $dev) | ternary 1997 $dev.gid | int64 -}}
  {{- $cluster := (include "arkcase.cluster" $ | fromYaml) -}}
  {{- $replicas := (min 4 ($cluster.replicas | int)) -}}
  {{- $extraEnv := (include "arkcase.core.extra-env" $ | fromYaml) -}}
  {{- $serviceAccountName := (include "arkcase.serviceAccountName" $) }}
  {{- $serviceAccountName = (or (empty $serviceAccountName) (eq "default" $serviceAccountName)) | ternary (include "arkcase.fullname" $) $serviceAccountName }}
  {{- $roleName := (printf "%s-config-access" $serviceAccountName) }}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ include "arkcase.fullname" $ | quote }}
  namespace: {{ $.Release.Namespace | quote }}
spec:
  maxUnavailable: "50%"
  selector:
    matchLabels: {{- include "arkcase.labels.matchLabels" $ | nindent 6 }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $serviceAccountName | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ $roleName | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
rules:
  # "" indicates the core API group
  - apiGroups: [ "" ]
    resources: [ "configmaps", "secrets" ]
    verbs: [ "get", "watch", "list" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ printf "%s:%s" $serviceAccountName $roleName | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: {{ $serviceAccountName | quote }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ $roleName | quote }}
---
    {{- $roleName := (printf "%s-cluster-membership" $serviceAccountName) }}
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ $roleName | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
rules:
  # "" indicates the core API group
  - apiGroups: [ "", "apps" ]
    resources: [ "pods", "endpoints", "nodes", "services", "statefulsets", "deployments" ]
    verbs: [ "get", "watch", "list" ]
  - apiGroups: [ "discovery.k8s.io" ]
    resources: [ "endpointslices" ]
    verbs: [ "get", "list" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ printf "%s:%s" $serviceAccountName $roleName | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: {{ $serviceAccountName | quote }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ $roleName | quote }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "arkcase.fullname" $ | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels.service" $ | nindent 4 }}
    {{- with ($.Values.labels).common }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with ($.Values.annotations).common }}
  annotations: {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ $replicas }}
  selector: &labelSelector
    matchLabels: {{- include "arkcase.labels.matchLabels" $ | nindent 6 }}
  serviceName: {{ include "arkcase.service.headless" $ | quote }}
  updateStrategy: {{- include "arkcase.cluster.statefulUpdateStrategy" $ | nindent 4 }}
  podManagementPolicy: Parallel
  template:
    metadata:
      name: {{ include "arkcase.fullname" $ | quote }}
      namespace: {{ $.Release.Namespace | quote }}
      labels: {{- include "arkcase.labels.service" $ | nindent 8 }}
        {{- include "arkcase.labels.deploys" "arkcase,alfresco" | nindent 8 }}
        {{- with ($.Values.labels).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        # NB: Both these annotation values must be of type "string"
        prometheus.io/scrape: "true"
        prometheus.io/port: "9100"
        {{- with ($.Values.annotations).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      affinity:
        podAntiAffinity:
        {{- if $cluster.onePerHost }}
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              namespaces: [ {{ $.Release.Namespace | quote }} ]
              labelSelector:
                <<: *labelSelector
        {{- else }}
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                namespaces: [ {{ $.Release.Namespace | quote }} ]
                labelSelector:
                  <<: *labelSelector
        {{- end }}
      {{- include "arkcase.image.pullSecrets" $ | nindent 6 }}
      {{- with $.Values.hostAliases }}
      hostAliases: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.schedulerName }}
      schedulerName: {{ $.Values.schedulerName | quote }}
      {{- end }}
      {{- if $serviceAccountName }}
      serviceAccountName: {{ $serviceAccountName | quote }}
      {{- end }}
      securityContext: {{- include "arkcase.securityContext" $ | nindent 8 }}
      terminationGracePeriodSeconds: 15
      initContainers:
        - name: init-deployer
          {{- include "arkcase.image" (dict "ctx" $ "name" "deployer" "repository" "arkcase/deployer") | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            {{- include "arkcase.deployment.env" $ | nindent 12 }}
            {{- include "arkcase.core.dev.deployEnv" $ | nindent 12 }}
            {{- include "arkcase.subsystem-access.env" (dict "ctx" $ "subsys" "ldap" "conn" "main" "key" "domain" "name" "LDAP_DOMAIN") | nindent 12 }}
            - name: PORTAL_CONTEXT
              value: {{ $portal.context | quote }}
          volumeMounts:
            {{- include "arkcase.core.dev.deployMounts" $ | nindent 12 }}
            {{- include "arkcase.file-resource.volumeMount" (dict "ctx" $ "mountPath" "/deploy-portal") | nindent 12 }}
        - name: init-permissions
          {{- include "arkcase.image" (dict "ctx" $ "name" "setperm" "repository" "arkcase/setperm") | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            - name: WARS_DIR
              value: &warsDir "/app/wars"
            - name: TEMP_DIR
              value: &tempDir "/app/temp"
            - name: LOGS_DIR
              value: &logsDir "/app/logs"
            - name: PORTAL_DIR
              value: &portalDir "/app/portal"
            - name: FSRV_DIR
              value: &fsrvDir "/app/fsrv"
            - name: JOBS
              value: |-
                jobs:
                  # We know the Cloudconfig image uses user 997i (centos) , 1997 (rocky)
                  # TODO: Make this autodetected via the securityContext
                  - ownership: {{ printf "%d:%d" $devUid $devGid | quote }}
                    permissions: "u=rwX,g=rwX,o="
                    flags: [ "recurse", "forced", "create", "changes" ]
                    targets: [ "$(TEMP_DIR)", "$(WARS_DIR)", "$(LOGS_DIR)", "$(FSRV_DIR)", "$(PORTAL_DIR)" ]
          volumeMounts:
            - name: &warsVol "wars"
              mountPath: *warsDir
            {{- include "arkcase.core.dev.permissionMounts" $ | nindent 12 }}
            - name: &tempVol "temp"
              mountPath: *tempDir
            - name: &logsVol "logs"
              mountPath: *logsDir
            - name: &portalVol "prtl"
              mountPath: *portalDir
            - name: &fsrvVol "fsrv"
              mountPath: *fsrvDir
        {{- include "arkcase.initDependencies.container" (dict "ctx" $ "name" "init-dependencies" "network" "portal") | nindent 8 }}
      containers:
        - name: arkcase
          {{- include "arkcase.image" $ | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            {{- include "arkcase.core.conf.env" $ | nindent 12 }}
            {{- include "arkcase.cluster.env" $ | nindent 12 }}
            {{- include "arkcase.cluster.tomcat.env" $ | nindent 12 }}
            {{- include "arkcase.acme.env" $ | nindent 12 }}
            {{- include "arkcase.subsystem-access.env" $ | nindent 12 }}
            {{- include "arkcase.core.extra-env.env" $ | nindent 12 }}
            {{- include "arkcase.cluster.discovery.env" (dict "ctx" $ "port" "healthz") | nindent 12 }}
            {{- include "arkcase.env.applicationVars" $ | nindent 12 }}
            {{- include "arkcase.core.settings.env" $ | nindent 12 }}
            {{- include "arkcase.alt-java" $ | nindent 12 }}
            - name: POLL_CONFIG
              value: "false"
            - name: ALT_VARS
              value: "PORTAL_LDAP_DOMAIN PORTAL_LDAP_ROOT_DN"
            - name: WORK_DIR
              value: "$(TEMP_DIR)/work"
            - name: LOGS_DIR
              value: *logsDir
            - name: TEMP_DIR
              value: *tempDir
            - name: ACME_KEYSTORE_WITH_TRUSTS
              value: "true"
            - name: ACME_KEY_ALIAS
              value: "arkcase-private-key-$(POD_NAME)"
            - name: JAVA_KEYSTORE
              value: "$(SSL_DIR)/keystore.pkcs12"
            - name: JAVA_KEYSTORE_TYPE
              value: "PKCS12"
            - name: JAVA_TRUSTSTORE
              value: "$(JAVA_KEYSTORE)"
            - name: JAVA_TRUSTSTORE_TYPE
              value: "$(JAVA_KEYSTORE_TYPE)"
            - name: LOOP_TERMINATION_FILE
              value: &loopTerminationFile "/app/.terminate"
            - name: PORTAL_HOME_DIR
              value: *portalDir
            - name: PORTAL_FILE_DIR
              value: "files"
            {{- if $dev }}
            - name: DEVELOPMENT
              value: "true"
            - name: DEBUG
              value: {{ not (empty $debug.portal) | toString | quote }}
            - name: DEV_UID
              value: {{ $devUid | toString | quote }}
            - name: DEV_GID
              value: {{ $devGid | toString | quote }}
            {{- end }}
            {{- with (($.Values.configuration).arkcase).env }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
            - name: JAVA_TOOL_OPTIONS
              value: >-
                -Dcom.redhat.fips=false
            - name: CATALINA_OPTS
              # For Java 8, these percentages must be given as doubles. The JVM may
              # choke if the ".0" isn't provided at the end
              value: >-
                -XX:MinRAMPercentage=50.0
                -XX:MaxRAMPercentage=80.0
                -Djava.keystore.key.alias=$(ACME_KEY_ALIAS)
                -Dhazelcast.shutdownhook.policy=GRACEFUL
                -Dhazelcast.cluster.version.auto.upgrade.enabled=true
                -Dcom.sun.management.jmxremote.port=7091
                -Dcom.sun.management.jmxremote.authenticate=false
                -Dcom.sun.management.jmxremote.ssl=false
                {{- with $debug.portal }}
                -Xdebug
                -agentlib:jdwp=transport=dt_socket,server=y,suspend={{ .suspend }},address=*:8888
                -XX:FlightRecorderOptions=stackdepth=512,samplethreads=true
                {{- end }}
          {{- include "arkcase.subsystem.ports" (dict "ctx" $ "name" "portal") | nindent 10 }}
          resources: {{- include "arkcase.resources" (dict "ctx" $ "part" "portal") | nindent 12 }}
          securityContext: {{- include "arkcase.securityContext" (dict "ctx" $ "container" "portal") | nindent 12 }}
          lifecycle:
            preStop:
              exec:
                command: [ "/usr/local/bin/terminate-run-loop", "/app/tomcat/bin/catalina.sh", "stop", "-force" ]
          volumeMounts:
            {{- include "arkcase.trusts.mount" $ | nindent 12 }}
            {{- include "arkcase.acme.volumeMount" $ | nindent 12 }}
            {{- include "arkcase.subsystem-access.volumeMount" $ | nindent 12 }}
            - name: *tempVol
              mountPath: *tempDir
            - name: *warsVol
              mountPath: "/app/tomcat/webapps"
            - name: *logsVol
              mountPath: *logsDir
            - name: *fsrvVol
              mountPath: *fsrvDir
            - name: *portalVol
              mountPath: *portalDir
            {{- include "arkcase.file-resource.volumeMount" (dict "ctx" $ "mountPath" "/app/tomcat/webapps/arkcase#external-portal/WEB-INF/classes/bootstrap.yaml") | nindent 12 }}
            {{- include "arkcase.core.dev.runMounts" $ | nindent 12 }}
            {{- include "arkcase.file-resource.volumeMount" (dict "ctx" $ "mountPath" "/usr/local/bin/tomcat-live") | nindent 12 }}
            {{- include "arkcase.file-resource.volumeMount" (dict "ctx" $ "mountPath" "/usr/local/bin/render-altcase-vars") | nindent 12 }}
            {{- include "arkcase.file-resource.volumeMount" (dict "ctx" $ "mountPath" "/app/tomcat/conf/server.xml.tpl") | nindent 12 }}
            {{- include "arkcase.file-resource.volumeMount" (dict "ctx" $ "mountPath" "/.env" "subPath" "envfile.arkcase") | nindent 12 }}
      volumes:
        {{- include "arkcase.subsystem-access.volume" $ | nindent 8 }}
        {{- include "arkcase.trusts.volume" $ | nindent 8 }}
        {{- include "arkcase.acme.volume" $ | nindent 8 }}
        {{- include "arkcase.file-resource.volumes" $ | nindent 8 }}
        {{- include "arkcase.persistence.ephemeralVolume" (dict "ctx" $ "name" "temp") | nindent 8 }}
        {{- include "arkcase.persistence.ephemeralVolume" (dict "ctx" $ "name" "wars") | nindent 8 }}
        {{- include "arkcase.core.dev.volumes" $ | nindent 8 }}
        {{- include "arkcase.persistence.ephemeralVolume" (dict "ctx" $ "name" "prtl") | nindent 8 }}
        {{- include "arkcase.persistence.ephemeralVolume" (dict "ctx" $ "name" "fsrv") | nindent 8 }}
  volumeClaimTemplates:
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "logs") | nindent 4 }}

  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "logs") | nindent 0 }}

{{- end -}}
