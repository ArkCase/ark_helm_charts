{{- if (include "arkcase.subsystem.enabled" $) -}}
  {{- $dev := (include "arkcase.dev" $ | fromYaml) -}}
  {{- $debug := $dev.debug | default dict -}}
  {{- $devUid := (empty $dev) | ternary 1997 $dev.uid | int64 -}}
  {{- $devGid := (empty $dev) | ternary 1997 $dev.gid | int64 -}}
  {{- $portal := (include "arkcase.portal" $ | fromYaml) -}}
  {{- $content := (include "arkcase.cm.info" $ | fromYaml) -}}
  {{- $cluster := (include "arkcase.cluster" $ | fromYaml) -}}
  {{- /* Disable clustering multinodes for now ... not supported for ArkCase just yet */ -}}
  {{- $cluster = set $cluster "nodes" 1 -}}
  {{- $nodes := (min 4 ($cluster.nodes | int)) -}}
  {{- $serviceAccountName := (include "arkcase.serviceAccountName" $) }}
  {{- $saml := (include "arkcase.core.sso.saml" $ | fromYaml) -}}
---
  {{- $serviceAccountName = (or (empty $serviceAccountName) (eq "default" $serviceAccountName)) | ternary (include "arkcase.fullname" $) $serviceAccountName }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $serviceAccountName | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
---
  {{- $roleName := (printf "%s-config-access" $serviceAccountName) }}
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ $roleName | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
rules:
  # "" indicates the core API group
  - apiGroups: [ "" ]
    resources: [ "configmaps", "secrets" ]
    verbs: [ "get", "watch", "list" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ printf "%s:%s" $serviceAccountName $roleName | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: {{ $serviceAccountName | quote }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ $roleName | quote }}
  {{- if (gt $nodes 1) }}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ include "arkcase.fullname" $ | quote }}
  namespace: {{ $.Release.Namespace | quote }}
spec:
  minAvailable: 1
  selector:
    matchLabels: {{- include "arkcase.labels.matchLabels" $ | nindent 6 }}
  {{- end }}
  {{- if $cluster.enabled }}
    {{- $roleName := (printf "%s-cluster-membership" $serviceAccountName) }}
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ $roleName | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
rules:
  # "" indicates the core API group
  - apiGroups: [ "" ]
    resources: [ "pods" ]
    verbs: [ "get", "watch", "list" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ printf "%s:%s" $serviceAccountName $roleName | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: {{ $serviceAccountName | quote }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ $roleName | quote }}
  {{- end }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "arkcase.fullname" $ | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels.service" $ | nindent 4 }}
    {{- with ($.Values.labels).common }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with ($.Values.annotations).common }}
  annotations: {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ $nodes }}
  selector: &labelSelector
    matchLabels: {{- include "arkcase.labels.matchLabels" $ | nindent 6 }}
  serviceName: {{ include "arkcase.service.headless" $ | quote }}
  updateStrategy: {{- include "arkcase.cluster.statefulUpdateStrategy" $ | nindent 4 }}
  podManagementPolicy: Parallel
  template:
    metadata:
      name: {{ include "arkcase.fullname" $ | quote }}
      namespace: {{ $.Release.Namespace | quote }}
      labels: {{- include "arkcase.labels.service" $ | nindent 8 }}
        {{- with ($.Values.labels).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        # NB: Both these annotation values must be of type "string"
        prometheus.io/scrape: "true"
        prometheus.io/port: "9100"
        {{- with ($.Values.annotations).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      affinity:
        podAntiAffinity:
        {{- if $cluster.onePerHost }}
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              namespaces: [ {{ $.Release.Namespace | quote }} ]
              labelSelector:
                <<: *labelSelector
        {{- else }}
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                namespaces: [ {{ $.Release.Namespace | quote }} ]
                labelSelector:
                  <<: *labelSelector
        {{- end }}
      {{- include "arkcase.image.pullSecrets" $ | nindent 6 }}
      {{- with $.Values.hostAliases }}
      hostAliases: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.schedulerName }}
      schedulerName: {{ $.Values.schedulerName | quote }}
      {{- end }}
      {{- if $serviceAccountName }}
      serviceAccountName: {{ $serviceAccountName | quote }}
      {{- end }}
      securityContext: {{- include "arkcase.securityContext" $ | nindent 8 }}
      initContainers:
        - name: init-deployer
          {{- include "arkcase.image" (dict "ctx" $ "name" "deployer" "repository" "arkcase/deployer") | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            {{- include "arkcase.deployment.env" $ | nindent 12 }}
            {{- include "arkcase.core.dev.deployEnv" $ | nindent 12 }}
            - name: REALM_FIX
              value: {{ printf "arkcase.org=%s" (include "arkcase.ldap" (dict "ctx" $ "value" "domain")) | quote }}
            {{- if $portal }}
            - name: PORTAL_CONTEXT
              value: {{ $portal.context | quote }}
            {{- end }}
          volumeMounts:
            {{- include "arkcase.core.dev.deployMounts" $ | nindent 12 }}
            - name: &configMap "config-map"
              mountPath: "/deploy"
              subPath: &deploy "deploy"
              readOnly: true
            - name: *configMap
              mountPath: "/usr/local/bin/fixExcel"
              subPath: &fixExcel "fixExcel"
              readOnly: true
            - name: *configMap
              mountPath: "/usr/local/bin/realm-fix"
              subPath: &realmFix "realm-fix"
              readOnly: true
        - name: init-permissions
          {{- include "arkcase.image" (dict "ctx" $ "name" "setperm" "repository" "arkcase/setperm") | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            - name: WARS_DIR
              value: &warsDir "/app/wars"
            - name: CONF_DIR
              value: &confDir "/app/conf"
            - name: HOME_DIR
              value: &homeDir "/app/home"
            - name: TEMP_DIR
              value: &tempDir "/app/home/temp"
            - name: LOGS_DIR
              value: &logsDir "/app/logs"
            - name: PORTAL_DIR
              value: &portalDir "/app/portal"
            - name: FSRV_DIR
              value: &fsrvDir "/app/fsrv"
            - name: JOBS
              value: |-
                jobs:
                  # We know the Cloudconfig image uses user 997i (centos) , 1997 (rocky)
                  # TODO: Make this autodetected via the securityContext
                  - ownership: {{ printf "%d:%d" $devUid $devGid | quote }}
                    permissions: "u=rwX,g=rwX,o="
                    flags: [ "recurse", "forced", "create", "changes" ]
                    targets: [ "$(HOME_DIR)", "$(TEMP_DIR)", "$(CONF_DIR)", "$(WARS_DIR)", "$(LOGS_DIR)", "$(FSRV_DIR)", "$(PORTAL_DIR)" ]
                  - ownership:
                    permissions: "u=rwx,g=rwx,o="
                    flags: [ "verbose", "forced", "create" ]
                    targets: [ "$(CONF_DIR)/libraries/html2pdf_chromium.so" ]
          volumeMounts:
            - name: &warsVol "wars"
              mountPath: *warsDir
            {{- include "arkcase.core.dev.permissionMounts" $ | nindent 12 }}
            - name: &homeVol "home"
              mountPath: *homeDir
            - name: &tempVol "temp"
              mountPath: *tempDir
            - name: &logsVol "logs"
              mountPath: *logsDir
            {{- if $portal }}
            - name: &portalVol "prtl"
              mountPath: *portalDir
            - name: &fsrvVol "fsrv"
              mountPath: *fsrvDir
            {{- end }}
        {{- include "arkcase.initDependencies.container" (dict "ctx" $ "name" "init-dependencies") | nindent 8 }}
        - name: init-seed-content
          {{- include "arkcase.image" (dict "ctx" $ "name" "seed-content" "repository" "arkcase/nettest") | nindent 10 }}
          {{- $contentScript := printf "/seed-content.%s" $content.dialect }}
          {{- $contentData := printf "%s.yaml" $contentScript }}
          command: [ "/usr/local/bin/only-once" ]
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            - name: WRAPPED_STATE
              value: *homeDir
            - name: WRAPPED_SCRIPT
              value: {{ $contentScript | quote }}
            # - name: WRAPPED_SCRIPT_ARGS
            #   value: "...."
            - name: INIT_SEED_CONF
              value: {{ $contentData | quote }}
            - name: INIT_SEED_USERNAME
              valueFrom:
                secretKeyRef:
                  name: &secretName {{ include "arkcase.fullname" $ | quote }}
                  key: "contentUsername"
            - name: INIT_SEED_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: *secretName
                  key: "contentPassword"
            - name: INIT_SEED_IGNORE_DUPES
              value: "true"
            - name: INIT_SEED_CONTENT
              valueFrom:
                secretKeyRef:
                  name: *secretName
                  key: "contentApi"
            {{- if (eq $content.dialect "alfresco") }}
            - name: INIT_SEED_UI
              valueFrom:
                secretKeyRef:
                  name: *secretName
                  key: "contentUi"
            {{- end }}
            {{- if (eq $content.dialect "s3") }}
            # This is required so the AWS CLI stuff uses our local SSL trusts
            - name: AWS_CA_BUNDLE
              value: "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
            {{- end }}
          volumeMounts:
            - name: *homeVol
              mountPath: *homeDir
            - name: *configMap
              mountPath: {{ $contentScript | quote }}
              subPath: &seedContent {{ $contentScript | trimPrefix "/" | quote }}
              readOnly: true
            - name: *configMap
              mountPath: {{ $contentData | quote }}
              subPath: &seedContentYaml {{ $contentData | trimPrefix "/" | quote }}
              readOnly: true
      containers:
        - name: arkcase
          {{- include "arkcase.image" $ | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            {{- include "arkcase.cluster.zookeeper" $ | nindent 12 }}
            {{- include "arkcase.cluster.tomcat.env" $ | nindent 12 }}
            {{- include "arkcase.acme.env" $ | nindent 12 }}
            - name: HOME_DIR
              value: *homeDir
            - name: CONF_DIR
              value: *confDir
            - name: LOGS_DIR
              value: *logsDir
            - name: TEMP_DIR
              value: *tempDir
            - name: ACME_KEYSTORE_WITH_TRUSTS
              value: "true"
            - name: ACME_KEY_ALIAS
              value: "arkcase-private-key-$(POD_NAME)"
            - name: JAVA_KEYSTORE
              value: "$(SSL_DIR)/keystore.pkcs12"
            - name: JAVA_KEYSTORE_TYPE
              value: "PKCS12"
            - name: JAVA_TRUSTSTORE
              value: "$(JAVA_KEYSTORE)"
            - name: JAVA_TRUSTSTORE_TYPE
              value: "$(JAVA_KEYSTORE_TYPE)"
            {{- if $dev }}
            - name: DEVELOPMENT
              value: "true"
            - name: DEV_UID
              value: {{ $devUid | toString | quote }}
            - name: DEV_GID
              value: {{ $devGid | toString | quote }}
            {{- end }}
            {{- with (($.Values.configuration).arkcase).env }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
            - name: LD_LIBRARY_PATH
              value: "$(HOME_DIR)/.arkcase/libraries"
            - name: CATALINA_OPTS
              {{- $springProfiles := (include "arkcase.core.springProfiles" $ | fromYamlArray) }}
              # For Java 8, these percentages must be given as doubles. The JVM may
              # choke if the ".0" isn't provided at the end
              value: >-
                -XX:MinRAMPercentage=50.0
                -XX:MaxRAMPercentage=80.0
                -Djava.keystore.key.alias=$(ACME_KEY_ALIAS)
                -Dsaml.keystore.defaultKeyName=$(ACME_KEY_ALIAS)
                -Dacm.configurationserver.propertyfile=$(HOME_DIR)/.arkcase/acm/conf.yml
                -Dconfiguration.client.spring.path=spring
                -Dspring.profiles.active={{ $springProfiles | join "," }}
                -Duser.home=$(HOME_DIR)
                {{- with $debug.arkcase }}
                -Xdebug
                -agentlib:jdwp=transport=dt_socket,server=y,suspend={{ .suspend }},address=*:8888
                -Dcom.sun.management.jmxremote.port=7091 -Dcom.sun.management.jmxremote.authenticate=false
                -Dcom.sun.management.jmxremote.ssl=false
                -XX:FlightRecorderOptions=stackdepth=512,samplethreads=true
                {{- end }}
          {{- include "arkcase.subsystem.ports" (dict "ctx" $ "name" "arkcase") | nindent 10 }}
          {{- with ($.Values.command).arkcase }}
          command: {{ toJson . }}
          {{- end }}
          resources: {{- include "arkcase.resources" (dict "ctx" $ "part" "arkcase") | nindent 12 }}
          securityContext: {{- include "arkcase.securityContext" (dict "ctx" $ "container" "arkcase") | nindent 12 }}
          volumeMounts:
            {{- include "arkcase.trusts.mount" $ | nindent 12 }}
            {{- include "arkcase.acme.volumeMount" $ | nindent 12 }}
            - name: *homeVol
              mountPath: *homeDir
            - name: *confVol
              mountPath: "/app/home/.arkcase"
            - name: *tempVol
              mountPath: *tempDir
            - name: *warsVol
              mountPath: "/app/tomcat/webapps"
            {{- include "arkcase.core.dev.runMounts" $ | nindent 12 }}
            - name: *configMap
              mountPath: "/usr/local/bin/tomcat-live"
              subPath: &tomcatLive "tomcat-live"
              readOnly: true
            - name: *configMap
              mountPath: "/app/tomcat/conf/server.xml.tpl"
              subPath: &serverXmlTpl "server.xml.tpl"
              readOnly: true
            - name: *configMap
              mountPath: "/app/home/.arkcase/acm/acm-config-server-repo/spring/quartz.properties"
              subPath: &quartzProperties "quartz.properties"
              readOnly: true
            - name: *configMap
              mountPath: "/app/home/.arkcase/acm/log4j2.xml"
              subPath: &log4j2Xml "log4j2.xml"
              readOnly: true
            - name: *configMap
              mountPath: "/app/home/.arkcase/acm/spring/proxy-config/spring-config-proxy.xml"
              subPath: &springConfigProxyXml "spring-config-proxy.xml"
              readOnly: true
            - name: *configMap
              mountPath: "/.env"
              subPath: &envfileArkcase "envfile.arkcase"
              readOnly: true
            - name: *configMap
              mountPath: "/app/home/.arkcase/acm/spring-security/spring-security-config-external-saml.xml"
              subPath: &arkcaseSamlConfigXml "spring-security-config-external-saml.xml"
              readOnly: true
            - name: &secrets "secrets"
              mountPath: "/app/home/.arkcase/acm/acm-config-server-repo/application.yaml"
              subPath: &applicationYaml "application.yaml"
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/acm-config-server-repo/arkcase-server.yaml"
              subPath: &arkcaseK8sYaml "arkcase-server.yaml"
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/acm-config-server-repo/arkcase-activemq.yaml"
              subPath: &arkcaseActivemqYaml "arkcase-activemq.yaml"
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/acm-config-server-repo/arkcase-oidc.yaml"
              subPath: &arkcaseOidcYaml "arkcase-oidc.yaml"
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/spring/spring-config-saml.properties"
              subPath: &arkcaseSamlProperties "spring-config-saml.properties"
            {{- if ($saml).identityProviderMetadata }}
            - name: &idpMetadataSecret "saml-idp-metadata"
              mountPath: "/app/home/.arkcase/acm/sso/idp.xml"
              subPath: &idpMetadataKey {{ $saml.identityProviderMetadata.key | quote }}
              readOnly: true
            {{- end }}
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/acm-config-server-repo/ldap/ldap.yaml"
              subPath: &ldapYaml "ldap.yaml"
              readOnly: true
            {{- if (eq "alfresco" $content.dialect) }}
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/cmis/camel-config-alfresco-cmis.properties"
              subPath: &camelConfigAlfrescoCmisProperties "camel-config-alfresco-cmis.properties"
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/cmis/camel-config-opencmis-cmis.properties"
              subPath: &camelConfigOpenCmisCmisProperties "camel-config-opencmis-cmis.properties"
              readOnly: true
            {{- end }}
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/conf.yml"
              subPath: &confYaml "conf.yml"
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/licenses/pdfnet_sdk_license.txt"
              subPath: &pdfnetSdkLicenseTxt "pdfnet_sdk_license.txt"
              readOnly: true
            # Don't enable these yet - this could cause severe breakage
            # - name: *secrets
            #   mountPath: "/app/home/.arkcase/custom/WEB-INF/classes/milton.license.properties"
            #   subPath: &miltonLicenseProperties "milton.license.properties"
            #   readOnly: true
            # - name: *secrets
            #   mountPath: "/app/home/.arkcase/custom/WEB-INF/classes/milton.license.sig"
            #   subPath: &miltonLicenseSig "milton.license.sig"
            #   readOnly: true
            - name: *logsVol
              mountPath: *logsDir
            {{- if $portal }}
            - name: *fsrvVol
              mountPath: *fsrvDir
            - name: *portalVol
              mountPath: "/app/portal"
            - name: *configMap
              mountPath: "/app/home/.arkcase/acm/acm-config-server-repo/lookups/lookups-server.yaml"
              subPath: &lookupsK8sYaml "lookups-server.yaml"
              readOnly: true
            - name: *configMap
              mountPath: "/app/tomcat/webapps/arkcase#external-portal/WEB-INF/classes/bootstrap.yaml"
              subPath: &bootstrapYaml "bootstrap.yaml"
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/acm-config-server-repo/arkcase-portal-server.yaml"
              subPath: &arkcasePortalServerYaml "arkcase-portal-server.yaml"
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/acm-config-server-repo/arkcase-FOIA_server.yaml"
              subPath: &arkcaseFoiaYaml "arkcase-FOIA_server.yaml"
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/acm-config-server-repo/ldap/ldap-foia.yaml"
              subPath: &ldapFoiaYaml "ldap-foia.yaml"
              readOnly: true
            {{- end }}
        - name: cloudconfig
          {{- include "arkcase.image" (dict "ctx" $ "name" "cloudconfig" "repository" "arkcase/cloudconfig") | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            {{- include "arkcase.acme.env" $ | nindent 12 }}
            - name: ACME_KEYSTORE_WITH_TRUSTS
              value: "true"
            - name: ACME_KEY_ALIAS
              value: "arkcase-private-key-$(POD_NAME)"
            - name: JAVA_KEYSTORE
              value: "$(SSL_DIR)/keystore.pkcs12"
            - name: JAVA_KEYSTORE_TYPE
              value: "PKCS12"
            - name: JAVA_TRUSTSTORE
              value: "$(JAVA_KEYSTORE)"
            - name: JAVA_TRUSTSTORE_TYPE
              value: "$(JAVA_KEYSTORE_TYPE)"
            - name: DATA_DIR
              value: *confDir
            - name: JAVA_TOOL_OPTIONS
              value: >-
                -XX:MinRAMPercentage=50
                -XX:MaxRAMPercentage=80
                -Djava.keystore.key.alias=$(ACME_KEY_ALIAS)
                {{- with $debug.cloudconfig }}
                -Xdebug
                -agentlib:jdwp=transport=dt_socket,server=y,suspend={{ .suspend }},address=*:8889
                -Dcom.sun.management.jmxremote.port=7092 -Dcom.sun.management.jmxremote.authenticate=false
                -Dcom.sun.management.jmxremote.ssl=false
                -XX:FlightRecorderOptions=stackdepth=512,samplethreads=true
                {{- end }}
            {{- if $dev }}
            - name: DEVELOPMENT
              value: "true"
            - name: DEV_UID
              value: {{ $devUid | toString | quote }}
            - name: DEV_GID
              value: {{ $devGid | toString | quote }}
            {{- end }}
          {{- include "arkcase.subsystem.ports" (dict "ctx" $ "name" "cloudconfig") | nindent 10 }}
          {{- with ($.Values.command).cloudconfig }}
          command: {{ toJson . }}
          {{- end }}
          resources: {{- include "arkcase.resources" (dict "ctx" $ "part" "cloudconfig") | nindent 12 }}
          securityContext: {{- include "arkcase.securityContext" (dict "ctx" $ "container" "cloudconfig") | nindent 12 }}
          volumeMounts:
            {{- include "arkcase.trusts.mount" $ | nindent 12 }}
            {{- include "arkcase.acme.volumeMount" $ | nindent 12 }}
            - name: *configMap
              mountPath: "/.env"
              subPath: &envfileCloudconfig "envfile.cloudconfig"
              readOnly: true
            - name: *confVol
              mountPath: *confDir
              subPath: "acm/acm-config-server-repo"
            - name: *configMap
              mountPath: "/app/conf/spring/quartz.properties"
              subPath: *quartzProperties
              readOnly: true
            - name: *secrets
              mountPath: "/app/conf/application.yaml"
              subPath: *applicationYaml
              readOnly: true
            - name: *secrets
              mountPath: "/app/conf/arkcase-activemq.yaml"
              subPath: *arkcaseActivemqYaml
              readOnly: true
            - name: *secrets
              mountPath: "/app/conf/arkcase-oidc.yaml"
              subPath: *arkcaseOidcYaml
              readOnly: true
            - name: *secrets
              mountPath: "/app/conf/arkcase-server.yaml"
              subPath: *arkcaseK8sYaml
              readOnly: true
            - name: *secrets
              mountPath: "/app/conf/ldap/ldap.yaml"
              subPath: *ldapYaml
              readOnly: true
            {{- if $portal }}
            - name: *configMap
              mountPath: "/app/conf/lookups/lookups-server.yaml"
              subPath: *lookupsK8sYaml
              readOnly: true
            - name: *secrets
              mountPath: "/app/conf/arkcase-portal-server.yaml"
              subPath: *arkcasePortalServerYaml
              readOnly: true
            - name: *secrets
              mountPath: "/app/conf/arkcase-FOIA_server.yaml"
              subPath: *arkcaseFoiaYaml
              readOnly: true
            - name: *secrets
              mountPath: "/app/conf/ldap/ldap-foia.yaml"
              subPath: *ldapFoiaYaml
              readOnly: true
            {{- end }}
      volumes:
        {{- include "arkcase.trusts.volume" $ | nindent 8 }}
        {{- include "arkcase.acme.volume" $ | nindent 8 }}
        - name: *secrets
          secret:
            optional: false
            secretName: *secretName
            defaultMode: 0444
            items:
              - key: *applicationYaml
                path: *applicationYaml
              - key: *arkcaseK8sYaml
                path: *arkcaseK8sYaml
              - key: *ldapYaml
                path: *ldapYaml
              {{- if (eq "alfresco" $content.dialect) }}
              - key: *camelConfigAlfrescoCmisProperties
                path: *camelConfigAlfrescoCmisProperties
              - key: *camelConfigOpenCmisCmisProperties
                path: *camelConfigOpenCmisCmisProperties
              {{- end }}
              - key: *arkcaseActivemqYaml
                path: *arkcaseActivemqYaml
              - key: *arkcaseOidcYaml
                path: *arkcaseOidcYaml
              - key: *arkcaseSamlProperties
                path: *arkcaseSamlProperties
              - key: *confYaml
                path: *confYaml
              - key: *pdfnetSdkLicenseTxt
                path: *pdfnetSdkLicenseTxt
              # - key: *miltonLicenseProperties
              #   path: *miltonLicenseProperties
              # - key: *miltonLicenseSig
              #   path: *miltonLicenseSig
              {{- if $portal }}
              - key: *arkcasePortalServerYaml
                path: *arkcasePortalServerYaml
              - key: *arkcaseFoiaYaml
                path: *arkcaseFoiaYaml
              - key: *ldapFoiaYaml
                path: *ldapFoiaYaml
              {{- end }}
        {{- if ($saml).identityProviderMetadata }}
        - name: *idpMetadataSecret
          secret:
            optional: false
            secretName: {{ $saml.identityProviderMetadata.secret | quote }}
            defaultMode: 0444
            items:
              - key: *idpMetadataKey
                path: *idpMetadataKey
        {{- end }}
        - name: *configMap
          configMap:
            optional: false
            name: {{ include "arkcase.fullname" $ | quote }}
            defaultMode: 0444
            items:
              - key: *deploy
                path: *deploy
                mode: 0555
              - key: *fixExcel
                path: *fixExcel
                mode: 0555
              - key: *realmFix
                path: *realmFix
                mode: 0555
              - key: *tomcatLive
                path: *tomcatLive
                mode: 0555
              - key: *serverXmlTpl
                path: *serverXmlTpl
              - key: *quartzProperties
                path: *quartzProperties
              - key: *springConfigProxyXml
                path: *springConfigProxyXml
              - key: *log4j2Xml
                path: *log4j2Xml
              - key: *seedContent
                path: *seedContent
                mode: 0555
              - key: *seedContentYaml
                path: *seedContentYaml
              - key: *arkcaseSamlConfigXml
                path: *arkcaseSamlConfigXml
              - key: *envfileArkcase
                path: *envfileArkcase
              - key: *envfileCloudconfig
                path: *envfileCloudconfig
              {{- if $portal }}
              - key: *lookupsK8sYaml
                path: *lookupsK8sYaml
              - key: *bootstrapYaml
                path: *bootstrapYaml
              {{- end }}
        {{- include "arkcase.persistence.ephemeralVolume" (dict "ctx" $ "name" "temp") | nindent 8 }}
        {{- include "arkcase.persistence.ephemeralVolume" (dict "ctx" $ "name" "wars") | nindent 8 }}
        {{- include "arkcase.core.dev.volumes" $ | nindent 8 }}
        {{- include "arkcase.persistence.volume" (dict "ctx" $ "name" "home") | nindent 8 }}
        {{- include "arkcase.persistence.volume" (dict "ctx" $ "name" "logs") | nindent 8 }}
        {{- if $portal }}
          {{- include "arkcase.persistence.volume" (dict "ctx" $ "name" "prtl") | nindent 8 }}
          {{- include "arkcase.persistence.ephemeralVolume" (dict "ctx" $ "name" "fsrv") | nindent 8 }}
        {{- end }}
  volumeClaimTemplates:
    {{- if or (not $dev.conf) $dev.conf.file }}
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "conf") | nindent 4 }}
    {{- end }}
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "home") | nindent 4 }}
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "logs") | nindent 4 }}
    {{- if $portal }}
      {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "prtl") | nindent 4 }}
    {{- end }}

  {{- if or (not $dev.conf) $dev.conf.file }}
  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "conf") | nindent 0 }}
  {{- end }}
  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "home") | nindent 0 }}
  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "logs") | nindent 0 }}
  {{- if $portal }}
    {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "prtl") | nindent 0 }}
  {{- end }}

{{- end -}}
