{{- $baseUrl := (include "arkcase.tools.parseUrl" (include "arkcase.tools.conf" (dict "ctx" $ "value" "baseUrl")) | fromYaml) -}}
{{- $cluster := (include "arkcase.cluster" $ | fromYaml) -}}
{{- $pdftron := (include "arkcase.license" (dict "ctx" $ "name" "pdftron") | fromYaml) -}}
{{- $aggrid := (include "arkcase.license" (dict "ctx" $ "name" "aggrid") | fromYaml) -}}
{{- with $pdftron.data }}
pdftron:
  {{- if .viewer }}
  viewer.license: {{ .viewer | b64dec | quote }}
  {{- end }}
  {{- if .audioVideo }}
  audioVideo.viewer.license: {{ .audioVideo | b64dec | quote }}
  {{- end }}
{{- end }}

{{- with $aggrid.data }}
aggrid.license: {{ . | b64dec | quote }}
{{- end }}

# This is set to disable the "Snowbound" advert button ... code should be modified to
# not require this (i.e. remove the button altogether)
fileEditingEnabled: true

#
# Begin integrations with external systems
#
{{- include "arkcase.core.integrations.config" $ | nindent 0 }}
#
# End integrations with external systems
#

report:
  plugin:
    # Attempted fix for easier Pentaho integration
    PENTAHO_SERVER_URL: ""
    PENTAHO_SERVER_PORT: 0

    # TODO: Use the new service accounts for this, instead of the ArkCase admin user
    PENTAHO_SERVER_USER: {{ include "arkcase.tools.conf" (dict "ctx" $ "value" "arkcase.adminUsername") | quote }}
    PENTAHO_SERVER_PASSWORD: {{ include "arkcase.tools.conf" (dict "ctx" $ "value" "arkcase.adminPassword") | quote }}

    # This is the internally-visible port where traffic will be proxied to/from
    {{- $pentahoUrl := (include "arkcase.tools.parseUrl" (include "arkcase.tools.conf" (dict "ctx" $ "value" "reports.url")) | fromYaml) }}
    PENTAHO_SERVER_INTERNAL_URL: {{ printf "%s://%s" $pentahoUrl.scheme $pentahoUrl.hostname | quote }}
    PENTAHO_SERVER_INTERNAL_PORT: {{ $pentahoUrl.port }}

{{- $content := (include "arkcase.cm.info" $ | fromYaml) }}
{{- if (eq "alfresco" $content.dialect) }}
alfresco:
  admin:
    baseurl: {{ printf "%s/s/enterprise/admin/admin-sync" $content.url.baseUrl | quote }}
    username: &alfrescoUsername "${ARKCASE_CONTENT_USERNAME}"
    password: &alfrescoPassword "${ARKCASE_CONTENT_PASSWORD}"

  sync:
    protocol: &alfrescoScheme {{ $content.url.scheme | quote }}
    host: &alfrescoHost {{ $content.url.hostname | quote }}
    port: &alfrescoPort {{ $content.url.port }}
    username: *alfrescoUsername
    password: *alfrescoPassword
    contextRoot: &alfrescoContext {{ $content.url.path | quote }}
    enabled: {{ (not (empty (include "arkcase.toBoolean" $content.sync))) }}

alfresco_protocol: *alfrescoScheme
alfresco_host: *alfrescoHost
alfresco_port: *alfrescoPort
alfresco_user: *alfrescoUsername
alfresco_password: *alfrescoPassword
alfresco_contextRoot: *alfrescoContext
{{- end }}

fileManagement:
  fileRepositoryType: {{ $content.dialect | quote }}
{{- if (eq "s3" $content.dialect) }}
  s3:
    url: {{ $content.url.baseUrl | quote }}
    region: {{ $content.settings.region | default "us-east-1" | quote }}
    accessKey: {{ $content.username | quote }}
    secretKey: {{ $content.password | quote }}
    bucketName: {{ $content.bucketName | default "arkcase" | quote }}
{{- end }}

database:
  platform: "org.eclipse.persistence.platform.database.${ARKCASE_DB_PLATFORM}Platform"
  # Should this be "true" when SSL is active?
  encryption_enabled: true
  encryption_supported: true

acm:
  driverClassName: "${ARKCASE_JDBC_DRIVER}"
  # schema: "arkcase"
  url: "${ARKCASE_JDBC_URL}"
  username: "${ARKCASE_JDBC_USERNAME}"
  password: "${ARKCASE_JDBC_PASSWORD}"
# Which are the allowed values here?
activiti.db.type: "${ARKCASE_DB_ACTIVITI}"

onlyoffice.plugin:
  arkcase.baseurl: &baseUrl {{ $baseUrl.url | quote }}

solr:
  protocol: "${ARKCASE_SOLR_SCHEME}"
  host: "${ARKCASE_SOLR_HOST}"
  port: "${ARKCASE_SOLR_PORT}"
  {{- if $cluster.enabled }}
  zkHosts: "${ZK_HOST}"
  {{- end }}

{{- $messaging := (include "arkcase.tools.parseUrl" (include "arkcase.tools.conf" (dict "ctx" $ "value" "messaging.url")) | fromYaml) }}
acm.websockets:
  stomp_broker_relay:
    relay_protocol: {{ $messaging.scheme | quote }}
    relay_host: {{ $messaging.hostname | quote }}
    relay_port: {{ include "arkcase.tools.conf" (dict "ctx" $ "value" "messaging.stomp") }}
    client_login: &stompUsername {{ include "arkcase.tools.conf" (dict "ctx" $ "value" "messaging.username") | quote }}
    client_passcode: &stompPassword {{ include "arkcase.tools.conf" (dict "ctx" $ "value" "messaging.password") | quote }}
    system_login: *stompUsername
    system_passcode: *stompPassword
    # Use the common keystore (let's avoid it for now)
    keystore: "${JAVA_KEYSTORE}"
    keystore_type: "${JAVA_KEYSTORE_TYPE}"
    keystore_pass: "${JAVA_KEYSTORE_PASS}"
    # Use the system truststore
    truststore: "${JAVA_TRUSTSTORE}"
    truststore_type: "${JAVA_TRUSTSTORE_TYPE}"
    truststore_pass: "${JAVA_TRUSTSTORE_PASS}"

acm.hazelcast:
  log.folder: "/app/logs/"
  # Temporarily disable hazelcast diagnostics
  diagnostics.enabled: false

{{ include "arkcase.core.email" $ }}

application:
  properties:
    baseUrl: *baseUrl
{{- $saml := (include "arkcase.core.sso.saml" $ | fromYaml) }}
{{- if $saml }}
    logoutUrl: /saml/logout
{{- end }}

  rolesToGroups: {{- include "arkcase.core.rolesToGroups" $ | nindent 4 }}

notification:
  arkcase.port: {{ $baseUrl.port }}
  arkcase.url: {{ printf "%s://%s" $baseUrl.scheme $baseUrl.hostname | quote }}
  arkcase.url.base: {{ $baseUrl.url | quote }}

ocr:
  tempPath: "${TEMP_DIR}/ocr"