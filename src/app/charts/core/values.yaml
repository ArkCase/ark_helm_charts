# Default values for ark-core.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This can be set to "false" by parent charts. If not defined, it will be taken as true
#enabled: true

# licenses:
#   pdfnet: "some-license-string"

#
# This should group all application-specific configurations
#
configuration:
  baseUrl: "https://server.dev.arkcase.com:8443/arkcase"

  proxy:
    reports: "https://reports:8443"
    weather: "https://api.openweathermap.org/data/2.5"

resources:
  development:
    arkcase:
      limits: "3Gi,2"
    cloudconfig:
      limits: "2Gi,1"

# Please leave the `replicaCount` to 1 for the time being. Clustering is not
# supported yet.
replicaCount: 1

platform: ""

licenses:
  - "pdftron"

image:
  # pullPolicy: IfNotPresent
  pullSecrets:
    - name: aws-arkcase-pull

  registry: "public.ecr.aws"

  # Overrides the image tag whose default is the chart appVersion.
  repository: "arkcase/core"
  # tag: "3.0.0"

  deployer:
    repository: "arkcase/deployer"
    # tag: 1.1.1-01

  cloudconfig:
    repository: "arkcase/cloudconfig"
    tag: "3.0.0"

  # setperm:
  #   registry: "alternate-registry"
  #   repository: "arkcase/setperm"
  #   tag: "latest"

  # seed-content:
  #   registry: "alternate-registry"
  #   repository: "arkcase/nettest"
  #   tag: "latest"


# You generally shouldn't mess with these. These exist to support some name-generation templates
nameOverride: ""
fullnameOverride: ""

# Custom annotations to apply throughout
annotations:

# Custom labels to apply throughout
labels:

updateStrategy: RollingUpdate
rollingUpdatePartition: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations:
  # Annotations to add to the service account
  labels:
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

securityContext:
  # You must specify an `fsGroup` to allow ActiveMQ write access to mounted
  # volumes (as long as ActiveMQ runs as a non-root user, which should be the
  # case). Any random number will do.
  # fsGroup: &fsGroup 1997
  # fsGroupChangePolicy: OnRootMismatch

  cloudconfig:
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: &runAsUser 1997
    # runAsGroup: *fsGroup
  arkcase:
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: &runAsUser 1997
    # runAsGroup: *fsGroup

#autoscaling:
  #enabled: false
  #minReplicas: 1
  #maxReplicas: 100
  #targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector:

tolerations:

affinity:

persistence:
  # If set to `false`, an ephemeral volume will be used instead and all other `persistence.*` parameters
  # are ignored.
  enabled: true

  # Set the default capacity for volumes in case none is assigned explicitly
  # and the default value is insufficient
  volumeSize:
    conf: "4Gi"
    home: "8Gi"
    init: "4Gi"
    logs: "2Gi"
    wars: "4Gi"
    temp: "32Gi"
    foia: "2Gi"
    fsrv: "32Gi"

#  The volumes for persistent data
  volumes:
# The volume where the data will be stored (RTFM for more info on how to
# properly declare volumes)

service:
  # This enables the main service to be rendered with
  # publishNotReadyAddresses == true, which allows the
  # main service to route connectivity to pods that are
  # yet to come up (i.e. to debug the bootup process).
  #
  # This behavior will *only* be enabled if debug mode is
  # also enabled as part of developer mode
  canDebug: true

  cloudconfig:
    ports:
      - name: cloudconfig
        protocol: TCP
        port: &cloudconfigPort 9999
##
## Configure extra options for containers' liveness and readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
## @param service.probes.enabled Enable liveness and readiness probes
## @param service.probes.spec.initialDelaySeconds Initial delay seconds for liveness and readiness probes
## @param service.probes.spec.periodSeconds Period seconds for liveness and readiness probes
## @param service.probes.spec.timeoutSeconds Timeout seconds for liveness and readiness probes
## @param service.probes.spec.failureThreshold Failure threshold for liveness and readiness probes
## @param service.probes.spec.successThreshold Success threshold for liveness and readiness probes
##
    probes:
      enabled: true
      spec:
        httpGet:
          scheme: HTTPS
          path: "/actuator/health"
          port: *cloudconfigPort
        initialDelaySeconds: 0
        periodSeconds: 10
        timeoutSeconds: 10
        failureThreshold: 1
        successThreshold: 1
      startup:
        failureThreshold: 90

  arkcase:
    ports:
      - name: arkcase-https
        protocol: TCP
        port: &arkcasePort 8443
      - name: arkcase-debug
        protocol: TCP
        port: 8888
      - name: arkcase-jmx
        protocol: TCP
        port: 7091
      - name: config-debug
        protocol: TCP
        port: 8889
      - name: config-jmx
        protocol: TCP
        port: 7092

    probes:
      enabled: true
      spec:
        initialDelaySeconds: 0
        periodSeconds: 10
        timeoutSeconds: 10
        successThreshold: 1
        failureThreshold: 1
      startup:
        exec:
          command: [ "/usr/local/bin/tomcat-live", "STARTUP" ]
        failureThreshold: 90
      liveness:
        exec:
          command: [ "/usr/local/bin/tomcat-live", "LIVENESS" ]
        # For our liveness probe, we allow up to 6 probes to fail in case
        # the pod is too resource-starved to respond to probes. This is a
        # bad thing anyway, but we have yet to reach a point where we can
        # safely pare down this number to a more reasonable count.
        failureThreshold: 6
      readiness:
        httpGet:
          scheme: HTTPS
          path: "/arkcase/login"
          port: *arkcasePort
