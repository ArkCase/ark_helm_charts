{{- if and (include "arkcase.subsystem.enabled" $) (not (include "arkcase.subsystem.external" $)) }}
{{- $cluster := (include "arkcase.cluster" $ | fromYaml) }}
{{- $nodes := ($cluster.nodes | int) -}}
{{- $minAvailable := (include "arkcase.solr.minAvailable" ($nodes | int) | atoi) }}
{{- if (gt $nodes 1) }}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ include "arkcase.fullname" $ | quote }}
  namespace: {{ $.Release.Namespace | quote }}
spec:
  minAvailable: {{ $minAvailable }}
  selector:
    matchLabels: {{- include "arkcase.labels.matchLabels" $ | nindent 6 }}
---
{{- end }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "arkcase.fullname" $ | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels.service" $ | nindent 4 }}
    {{- with ($.Values.labels).common }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with ($.Values.annotations).common }}
  annotations: {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ $nodes }}
  selector: &labelSelector
    matchLabels: {{- include "arkcase.labels.matchLabels" $ | nindent 6 }}
  serviceName: {{ include "arkcase.service.headless" $ | quote }}
  updateStrategy: {{- include "arkcase.cluster.statefulUpdateStrategy" $ | nindent 4 }}
  podManagementPolicy: Parallel
  template:
    metadata:
      name: {{ include "arkcase.fullname" $ | quote }}
      namespace: {{ $.Release.Namespace | quote }}
      labels: {{- include "arkcase.labels.service" $ | nindent 8 }}
        {{- include "arkcase.labels.deploys" "solr" | nindent 8 }}
        {{- with ($.Values.labels).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        # NB: Both these annotation values must be of type "string"
        prometheus.io/scrape: "true"
        prometheus.io/port: "9100"
        {{- with ($.Values.annotations).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      affinity:
        podAntiAffinity:
        {{- if $cluster.onePerHost }}
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              namespaces: [ {{ $.Release.Namespace | quote }} ]
              labelSelector:
                <<: *labelSelector
        {{- else }}
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                namespaces: [ {{ $.Release.Namespace | quote }} ]
                labelSelector:
                  <<: *labelSelector
        {{- end }}
      {{- include "arkcase.image.pullSecrets" $ | nindent 6 }}
      {{- with $.Values.hostAliases }}
      hostAliases: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.schedulerName }}
      schedulerName: {{ $.Values.schedulerName | quote }}
      {{- end }}
      securityContext: {{- include "arkcase.securityContext" $ | nindent 8 }}
      terminationGracePeriodSeconds: 15
      initContainers:
        - name: init-set-permissions
          {{- include "arkcase.image" (dict "ctx" $ "name" "setperm" "repository" "arkcase/setperm") | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            - name: DATA_DIR
              value: &dataDir "/app/data"
            - name: INIT_DIR
              value: &initDir "/app/init"
            - name: JOBS
              value: |-
                jobs:
                  # We know the ActiveMQ image uses user 998 (centos), 1998 (rocky)
                  - ownership: {{ coalesce ($.Values.persistence).ownership "2000:2000" | quote }}
                    permissions: "u=rwX,g=rX,o="
                    flags: [ "recurse", "forced", "create", "changes" ]
                    targets: [ "$(DATA_DIR)", "$(INIT_DIR)" ]
          volumeMounts:
            - name: &dataVolume "data"
              mountPath: *dataDir
            - name: &initVolume "init"
              mountPath: *initDir
        {{- include "arkcase.initDependencies.container" $ | nindent 8 }}
      containers:
        - name: solr
          {{- include "arkcase.image" $ | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            {{- include "arkcase.cluster.env" $ | nindent 12 }}
            {{- include "arkcase.subsystem-access.env" $ | nindent 12 }}
            {{- include "arkcase.acme.env" $ | nindent 12 }}
            - name: NODES
              value: {{ $nodes | toString | quote }}
            - name: JAVA_TOOL_OPTIONS
              value: >-
                -Dcom.redhat.fips=false
            - name: SOLR_OPTS
              value: >-
                -Dsolr.autoSoftCommit.maxTime=1000
                -Dzookeeper.client.secure=true
            - name: DATA_DIR
              value: *dataDir
            - name: SOLR_HOME
              value: "$(DATA_DIR)/solr"
            - name: SOLR_SERVER
              value: "$(SOLR_HOME)/server"
            - name: SOLR_JAVA_MEM
              value: "-XX:MinRAMPercentage=50.0 -XX:MaxRAMPercentage=80.0"
            - name: SOLR_CORES
              value: "acmAdvancedSearch=arkcase,acmQuickSearch=arkcase"
            {{- if $.Values.env }}
              {{- $.Values.env | toYaml | nindent 12 }}
            {{- end }}
          {{- include "arkcase.subsystem.ports" $ | nindent 10 }}
          command: [ "/entrypoint" ]
          lifecycle:
            postStart:
              exec:
                command: [ "/config-post.sh" ]
            preStop:
              exec:
                command: [ "/app/solr/bin/solr", "stop", "-p", "8983" ]
          resources: {{- include "arkcase.resources" $ | nindent 12 }}
          securityContext: {{- include "arkcase.securityContext" (dict "ctx" $ "container" "solr") | nindent 12 }}
          volumeMounts:
            - name: *dataVolume
              mountPath: *dataDir
            - name: *initVolume
              mountPath: *initDir
            {{- include "arkcase.subsystem-access.volumeMount" $ | nindent 12 }}
            {{- include "arkcase.acme.volumeMount" $ | nindent 12 }}
            {{- include "arkcase.file-resource.volumeMount" (dict "ctx" $ "mountPath" "/app/solr/bin/solr.in.sh") | nindent 12 }}
            {{- include "arkcase.file-resource.volumeMount" (dict "ctx" $ "mountPath" "/entrypoint") | nindent 12 }}
            {{- include "arkcase.file-resource.volumeMount" (dict "ctx" $ "mountPath" "/config-pre.sh") | nindent 12 }}
            {{- include "arkcase.file-resource.volumeMount" (dict "ctx" $ "mountPath" "/config-post.sh") | nindent 12 }}
            {{- include "arkcase.file-resource.volumeMount" (dict "ctx" $ "mountPath" "/app/init/pre/00-deploy-config.sh" "subPath" "deploy-configs.sh") | nindent 12 }}
            {{- include "arkcase.file-resource.volumeMount" (dict "ctx" $ "mountPath" "/app/init/pre/arkcase-conf.tar.gz") | nindent 12 }}
            {{- include "arkcase.file-resource.volumeMount" (dict "ctx" $ "mountPath" "/app/init/post/00-create-cores.sh" "subPath" "create-cores.sh") | nindent 12 }}
      volumes:
        {{- include "arkcase.subsystem-access.volume" $ | nindent 8 }}
        {{- include "arkcase.acme.volume" $ | nindent 8 }}
        {{- include "arkcase.persistence.ephemeralVolume" (dict "ctx" $ "name" "init") | nindent 8 }}
        {{- include "arkcase.persistence.volume" (dict "ctx" $ "name" "data") | nindent 8 }}
        {{- include "arkcase.file-resource.volumes" $ | nindent 8 }}
  volumeClaimTemplates:
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "data") | nindent 4 }}

  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "data") | nindent 0 }}
{{- end }}
