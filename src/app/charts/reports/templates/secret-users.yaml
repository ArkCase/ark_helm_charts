{{- if (include "arkcase.subsystem.enabled" $) -}}
  {{- $ctx := $ -}}

  {{- /* Always use the same service name in the URL */ -}}
  {{- $serviceName := (include "arkcase.service.name" $) -}}
  {{- $subsystemName := (include "arkcase.subsystem.name" $ctx) -}}

  {{- /* TODO: Move to a config file? */ -}}
  {{-
    $users := dict
      "admin" (
        dict
          "username" "admin"
          "group" "administrators"
      )
      "user" (
        dict
          "username" "user"
          "connection" "main"
          "group" "users"
      )
  -}}

  {{- range $username, $info := $users }}
    {{- $connection := ($info.connection | default $username) -}}
    {{- $name := (include "arkcase.subsystem-access.name" (dict "ctx" $ "conn" $connection)) }}
    {{- $password := "" }}
    {{- $group := $info.group | default "" }}

    {{- $secretData := (include "arkcase.get-existing.secret" (dict "ctx" $ "name" $name) | fromYaml) }}
    {{- if and $secretData $secretData.data }}
      {{- $password = (hasKey $secretData.data "password" | ternary $secretData.data.password $password) }}
    {{- end }}

    {{- if not $password }}
      {{- $password = (randAlphaNum 64) }}
    {{- end }}

    {{-
      $data := dict
        "url" (printf "https://%s:8443/pentaho" $serviceName)
        "username" (printf "%s-%s" $subsystemName $username | lower)
        "password" $password
        "group" (printf "%s-%s" $subsystemName $group | upper)
    }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $name | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
    {{- with ($.Values.labels).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with ($.Values.annotations).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
type: Opaque
data: {{- include "arkcase.secret.encode" $data | nindent 2 }}
  {{- end }}
{{- end -}}
