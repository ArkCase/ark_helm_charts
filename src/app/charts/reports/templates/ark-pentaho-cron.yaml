{{- if and (include "arkcase.subsystem.enabled" $) (not (include "arkcase.subsystem.external" $)) -}}
{{- $db := (include "arkcase.db.info" $ | fromYaml) -}}
{{- $fullName := (include "arkcase.fullname" $) -}}
{{- $mainName := (include "common.fullname" $) -}}
{{- $pentahoService := (include "arkcase.service.name" $) -}}
{{- $serviceAccountName := (include "arkcase.serviceAccountName" $) -}}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: &fullName {{ $fullName | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
    {{- with ($.Values.labels).common }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with ($.Values.annotations).common }}
  annotations: {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  selector: &labelSelector
    matchLabels: {{- include "arkcase.labels.matchLabels" $ | nindent 6 }}
  serviceName: {{ include "arkcase.service.headless" $ | quote }}
  updateStrategy: {{- include "arkcase.cluster.statefulUpdateStrategy" $ | nindent 4 }}
  template:
    metadata:
      name: *fullName
      namespace: {{ $.Release.Namespace | quote }}
      labels: {{- include "arkcase.labels" $ | nindent 8 }}
        {{- with ($.Values.labels).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        # NB: Both these annotation values must be of type "string"
        prometheus.io/scrape: "true"
        prometheus.io/port: "9100"
        {{- with ($.Values.annotations).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- include "arkcase.image.pullSecrets" $ | nindent 6 }}
      {{- with $.Values.hostAliases }}
      hostAliases: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.schedulerName }}
      schedulerName: {{ $.Values.schedulerName | quote }}
      {{- end }}
      {{- if $serviceAccountName }}
      serviceAccountName: {{ $serviceAccountName | quote }}
      {{- end }}
      securityContext: {{- include "arkcase.securityContext" $ | nindent 8 }}
      initContainers:
        - name: init-deployer
          {{- include "arkcase.image" (dict "ctx" $ "name" "deployer" "repository" "arkcase/deployer") | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            {{- include "arkcase.deployment.env" $ | nindent 12 }}
          volumeMounts:
            - name: &configMap "config-map"
              mountPath: "/deploy"
              subPath: &deployCron "deploy-cron"
              readOnly: true
            - name: &initVol "init"
              mountPath: &initDir "/app/init"
            - name: &dataVol "data"
              mountPath: &dataDir "/app/data"
        - name: init-set-permissions
          {{- include "arkcase.image" (dict "ctx" $ "name" "setperm" "repository" "arkcase/setperm") | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            - name: DATA_DIR
              value: *dataDir
            - name: INIT_DIR
              value: *initDir
            - name: JOBS
              value: |-
                jobs:
                  # We know the UID for the Pentaho container is 998:996
                  - ownership: "1998:1998"
                    permissions: "u=rwX,g=rX,o="
                    flags: [ "recurse", "forced", "create", "changes" ]
                    targets: [ "$(DATA_DIR)", "$(INIT_DIR)" ]
          volumeMounts:
            - name: *initVol
              mountPath: *initDir
            - name: *dataVol
              mountPath: *dataDir
        {{- include "arkcase.initDependencies.container" $ | nindent 8 }}
      containers:
        - name: cron
          {{- include "arkcase.image" $ | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            {{- include "arkcase.deployment.env" $ | nindent 12 }}
            - name: DATA_DIR
              value: *dataDir
            - name: PENTAHO_SERVICE
              value: {{ $pentahoService | quote }}
            - name: PENTAHO_INSTALLED_LICENSE_PATH
              value: "$(DATA_DIR)/.installedLicenses.xml"
            - name: ARKCASE_SERVER_URL
              value: "https://core:8443/arkcase"
            - name: PENTAHO_SERVER_URL
              value: "https://$(PENTAHO_SERVICE):8443/pentaho"
            - name: ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: &mainName {{ $mainName | quote }}
                  key: "adminUsername"
            - name: LDAP_DOMAIN
              valueFrom:
                secretKeyRef:
                  name: *mainName
                  key: "ldapDomain"
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: *mainName
                  key: "adminPassword"
          {{- with ($.Values.command).cron }}
          command: {{ . | toYaml }}
          {{- end }}
          resources: {{- include "arkcase.resources" $ | nindent 12 }}
          securityContext: {{- include "arkcase.securityContext" (dict "ctx" $ "container" "cron") | nindent 12 }}
          volumeMounts:
            {{- include "arkcase.pentaho.license.volumeMounts" (dict "ctx" $ "volume" "secrets" "path" "/app/init/licenses") | nindent 12 }}
            {{- include "arkcase.trusts.mount" $ | nindent 12 }}
            - name: &secrets "secrets"
              mountPath: "/.template-vars.yaml"
              subPath: &templateVars "template-vars.yaml"
              readOnly: true
            - name: *dataVol
              mountPath: *dataDir
            - name: *initVol
              mountPath: *initDir
            - name: *configMap
              mountPath: "/usr/local/bin/render-template"
              subPath: &renderTemplate "render-template"
              readOnly: true
            - name: *configMap
              mountPath: "/usr/local/bin/run-kjb"
              subPath: &runKjb "run-kjb"
              readOnly: true
            - name: *configMap
              mountPath: "/entrypoint"
              subPath: &entrypointCron "entrypoint-cron"
              readOnly: true
            - name: *configMap
              mountPath: "/usr/local/bin/deploy-job-schedules"
              subPath: &deployJobSchedules "deploy-job-schedules"
              readOnly: true
            - name: *configMap
              mountPath: "/app/pentaho/pentaho-server/pentaho-solutions/system/server.properties"
              subPath: &serverProperties "server.properties"
              readOnly: true
            - name: *configMap
              mountPath: "/app/pentaho/pentaho-server/pentaho-solutions/system/pdi-pur-plugin/plugin.properties"
              subPath: &pluginProperties "plugin.properties"
              readOnly: true
            - name: *configMap
              mountPath: "/app/pentaho-pdi/data-integration/plugins/pdi-pur-plugin/plugin.properties"
              subPath: *pluginProperties
              readOnly: true
      volumes:
        {{- include "arkcase.trusts.volume" $ | nindent 8 }}
        {{- include "arkcase.persistence.ephemeralVolume" (dict "ctx" $ "name" "init") | nindent 8 }}
        {{- include "arkcase.persistence.volume" (dict "ctx" $ "name" "data") | nindent 8 }}
        - name: *secrets
          secret:
            optional: false
            secretName: *mainName
            defaultMode: 0444
            items:
              {{- include "arkcase.pentaho.license.volumes" $ | nindent 14 }}
              - key: *templateVars
                path: *templateVars
        - name: *configMap
          configMap:
            optional: false
            name: *mainName
            defaultMode: 0444
            items:
              - key: *renderTemplate
                path: *renderTemplate
                mode: 0555
              - key: *runKjb
                path: *runKjb
                mode: 0555
              - key: *entrypointCron
                path: *entrypointCron
                mode: 0555
              - key: *deployJobSchedules
                path: *deployJobSchedules
                mode: 0555
              - key: *deployCron
                path: *deployCron
                mode: 0555
              - key: *serverProperties
                path: *serverProperties
              - key: *pluginProperties
                path: *pluginProperties
      {{- with $.Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "data") | nindent 4 }}

  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "data") | nindent 0 }}

{{- end -}}
