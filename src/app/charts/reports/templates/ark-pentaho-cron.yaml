{{- if and (include "arkcase.subsystem.enabled" $) (not (include "arkcase.subsystem.external" $)) -}}
{{- $fullName := (include "arkcase.fullname" $) -}}
{{- $mainName := (include "common.fullname" $) -}}
{{- $pentahoService := (include "arkcase.service.name" $) -}}
{{- $serviceAccountName := (include "arkcase.serviceAccountName" $) -}}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: &fullName {{ $fullName | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
    {{- include "arkcase.labels.workload" $ | nindent 4 }}
    {{- with ($.Values.labels).common }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with ($.Values.annotations).common }}
  annotations: {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  selector: &labelSelector
    matchLabels: {{- include "arkcase.labels.matchLabels" $ | nindent 6 }}
  serviceName: {{ include "arkcase.service.headless" $ | quote }}
  updateStrategy: {{- include "arkcase.cluster.statefulUpdateStrategy" $ | nindent 4 }}
  template:
    metadata:
      name: *fullName
      namespace: {{ $.Release.Namespace | quote }}
      labels: {{- include "arkcase.labels" $ | nindent 8 }}
        {{- include "arkcase.labels.workload" $ | nindent 8 }}
        {{- with ($.Values.labels).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        # NB: Both these annotation values must be of type "string"
        prometheus.io/scrape: "true"
        prometheus.io/port: "9100"
        {{- with ($.Values.annotations).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- include "arkcase.image.pullSecrets" $ | nindent 6 }}
      {{- with $.Values.hostAliases }}
      hostAliases: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.schedulerName }}
      schedulerName: {{ $.Values.schedulerName | quote }}
      {{- end }}
      {{- if $serviceAccountName }}
      serviceAccountName: {{ $serviceAccountName | quote }}
      {{- end }}
      securityContext: {{- include "arkcase.securityContext" $ | nindent 8 }}
      initContainers:
        - name: init-deployer
          {{- include "arkcase.image" (dict "ctx" $ "name" "deployer" "repository" "arkcase/deployer") | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            {{- include "arkcase.deployment.env" $ | nindent 12 }}
          volumeMounts:
            {{- include "arkcase.file-resource.volumeMount" (dict "ctx" $ "mountPath" "/deploy" "subPath" "deploy-cron") | nindent 12 }}
            - name: &initVol "init"
              mountPath: &initDir "/app/init"
            - name: &dataVol "data"
              mountPath: &dataDir "/app/data"
        - name: init-set-permissions
          {{- include "arkcase.image" (dict "ctx" $ "name" "setperm" "repository" "arkcase/setperm") | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            {{- include "arkcase.subsystem-access.env" $ | nindent 12 }}
            {{- include "arkcase.pentaho.jdbc-urls" $ | nindent 12 }}
            - name: DATA_DIR
              value: *dataDir
            - name: INIT_DIR
              value: *initDir
            - name: JOBS
              value: |-
                jobs:
                  # We know the UID for the Pentaho container is 998:996
                  - ownership: "1998:1998"
                    permissions: "u=rwX,g=rX,o="
                    flags: [ "recurse", "forced", "create", "changes" ]
                    targets: [ "$(DATA_DIR)", "$(INIT_DIR)" ]
          volumeMounts:
            - name: *initVol
              mountPath: *initDir
            - name: *dataVol
              mountPath: *dataDir
        {{- include "arkcase.initDependencies.container" $ | nindent 8 }}
      containers:
        - name: cron
          {{- include "arkcase.image" $ | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            {{- include "arkcase.subsystem-access.env" $ | nindent 12 }}
            - name: DATA_DIR
              value: *dataDir
            - name: PENTAHO_SERVICE
              value: {{ $pentahoService | quote }}
            - name: PENTAHO_INSTALLED_LICENSE_PATH
              value: "$(DATA_DIR)/.installedLicenses.xml"
          resources: {{- include "arkcase.resources" $ | nindent 12 }}
          securityContext: {{- include "arkcase.securityContext" (dict "ctx" $ "container" "cron") | nindent 12 }}
          volumeMounts:
            - name: *dataVol
              mountPath: *dataDir
            - name: *initVol
              mountPath: *initDir
            {{- include "arkcase.trusts.mount" $ | nindent 12 }}
            {{- include "arkcase.pentaho.license.volumeMounts" $ | nindent 12 }}
            {{- include "arkcase.file-resource.volumeMount" (dict "ctx" $ "mountPath" "/usr/local/bin/render-template") | nindent 12 }}
            {{- include "arkcase.file-resource.volumeMount" (dict "ctx" $ "mountPath" "/usr/local/bin/encrypt-passwords") | nindent 12 }}
            {{- include "arkcase.file-resource.volumeMount" (dict "ctx" $ "mountPath" "/usr/local/bin/run-kjb") | nindent 12 }}
            {{- include "arkcase.file-resource.volumeMount" (dict "ctx" $ "mountPath" "/entrypoint" "subPath" "entrypoint-cron") | nindent 12 }}
            {{- include "arkcase.file-resource.volumeMount" (dict "ctx" $ "mountPath" "/usr/local/bin/deploy-job-schedules") | nindent 12 }}
            {{- include "arkcase.file-resource.volumeMount" (dict "ctx" $ "mountPath" "/app/pentaho/pentaho-server/pentaho-solutions/system/server.properties") | nindent 12 }}
            {{- include "arkcase.file-resource.volumeMount" (dict "ctx" $ "mountPath" "/app/pentaho/pentaho-server/pentaho-solutions/system/pdi-pur-plugin/plugin.properties") | nindent 12 }}
            {{- include "arkcase.file-resource.volumeMount" (dict "ctx" $ "mountPath" "/app/pentaho-pdi/data-integration/plugins/pdi-pur-plugin/plugin.properties") | nindent 12 }}
      volumes:
        {{- include "arkcase.persistence.ephemeralVolume" (dict "ctx" $ "name" "init") | nindent 8 }}
        {{- include "arkcase.persistence.volume" (dict "ctx" $ "name" "data") | nindent 8 }}
        {{- include "arkcase.trusts.volume" $ | nindent 8 }}
        {{- include "arkcase.pentaho.license.volume" $ | nindent 8 }}
        {{- include "arkcase.file-resource.volumes" $ | nindent 8 }}
      {{- with $.Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "data") | nindent 4 }}

  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "data") | nindent 0 }}

{{- end -}}
