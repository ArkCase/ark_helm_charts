<?xml version="1.0" encoding="UTF-8"?>
<Context path="/pentaho" docbase="webapps/pentaho/">
  {{- with (include "arkcase.db.schema" (dict "ctx" $ "schema" "arkcase") | fromYaml) }}
  <Resource name="jdbc/acm3DataSource" auth="Container" type="javax.sql.DataSource"
            factory="org.pentaho.di.core.database.util.DecryptingDataSourceFactory"
            driverClassName="{{ .jdbc.driver }}"
            initialSize="0"
            maxActive="20"
            maxIdle="5"
            maxWait="10000"
            minIdle="0"
            password="{{ include "arkcase.xmlEscape" .password }}"
            testOnBorrow="true"
            url="{{ include "arkcase.xmlEscape" .jdbc.url }}"
            username="{{ include "arkcase.xmlEscape" .username }}"
            validationQuery="{{ include "arkcase.xmlEscape" .validationQuery }}"
            />
  {{- end }}

  {{- with (include "arkcase.db.schema" (dict "ctx" $ "schema" "hibernate") | fromYaml) }}
  <Resource name="jdbc/Hibernate" auth="Container" type="javax.sql.DataSource"
            factory="org.pentaho.di.core.database.util.DecryptingDataSourceFactory"
            defaultAutoCommit="true"
            driverClassName="{{ .jdbc.driver }}"
            initialSize="0"
            jdbcInterceptors="ConnectionState"
            maxActive="20"
            maxIdle="5"
            maxWait="10000"
            minIdle="0"
            password="{{ include "arkcase.xmlEscape" .password }}"
            testOnBorrow="true"
            url="{{ include "arkcase.xmlEscape" .jdbc.url }}"
            username="{{ include "arkcase.xmlEscape" .username }}"
            validationQuery="{{ include "arkcase.xmlEscape" .validationQuery }}"
            />
  {{- end }}

  {{- with (include "arkcase.db.schema" (dict "ctx" $ "schema" "hibernate") | fromYaml) }}
  <Resource name="jdbc/Audit" auth="Container" type="javax.sql.DataSource"
            factory="org.pentaho.di.core.database.util.DecryptingDataSourceFactory"
            driverClassName="{{ .jdbc.driver }}"
            initialSize="0"
            maxActive="20"
            maxIdle="5"
            maxWait="10000"
            minIdle="0"
            password="{{ include "arkcase.xmlEscape" .password }}"
            testOnBorrow="true"
            url="{{ include "arkcase.xmlEscape" .jdbc.url }}"
            username="{{ include "arkcase.xmlEscape" .username }}"
            validationQuery="{{ include "arkcase.xmlEscape" .validationQuery }}"
            />
  {{- end }}

  {{- with (include "arkcase.db.schema" (dict "ctx" $ "schema" "quartz") | fromYaml) }}
  <Resource name="jdbc/Quartz" auth="Container" type="javax.sql.DataSource"
            factory="org.pentaho.di.core.database.util.DecryptingDataSourceFactory"
            driverClassName="{{ .jdbc.driver }}"
            initialSize="0"
            maxActive="20"
            maxIdle="5"
            maxWait="10000"
            minIdle="0"
            password="{{ include "arkcase.xmlEscape" .password }}"
            testOnBorrow="true"
            url="{{ include "arkcase.xmlEscape" .jdbc.url }}"
            username="{{ include "arkcase.xmlEscape" .username }}"
            validationQuery="{{ include "arkcase.xmlEscape" .validationQuery }}"
            />
  {{- end }}

  {{- with (include "arkcase.db.schema" (dict "ctx" $ "schema" "hibernate") | fromYaml) }}
  <Resource name="jdbc/PDI_Operations_Mart" auth="Container" type="javax.sql.DataSource"
            factory="org.pentaho.di.core.database.util.DecryptingDataSourceFactory"
            driverClassName="{{ .jdbc.driver }}"
            initialSize="0"
            maxActive="20"
            maxIdle="5"
            maxWait="10000"
            minIdle="0"
            password="{{ include "arkcase.xmlEscape" .password }}"
            testOnBorrow="true"
            url="{{ include "arkcase.xmlEscape" .jdbc.url }}"
            username="{{ include "arkcase.xmlEscape" .username }}"
            validationQuery="{{ include "arkcase.xmlEscape" .validationQuery }}"
            />
  {{- end }}

  {{- with (include "arkcase.db.schema" (dict "ctx" $ "schema" "hibernate") | fromYaml) }}
  <Resource name="jdbc/pentaho_operations_mart" auth="Container" type="javax.sql.DataSource"
            factory="org.pentaho.di.core.database.util.DecryptingDataSourceFactory"
            driverClassName="{{ .jdbc.driver }}"
            initialSize="0"
            maxActive="20"
            maxIdle="5"
            maxWait="10000"
            minIdle="0"
            password="{{ include "arkcase.xmlEscape" .password }}"
            testOnBorrow="true"
            url="{{ include "arkcase.xmlEscape" .jdbc.url }}"
            username="{{ include "arkcase.xmlEscape" .username }}"
            validationQuery="{{ include "arkcase.xmlEscape" .validationQuery }}"
            />
  {{- end }}

  {{- with (include "arkcase.db.schema" (dict "ctx" $ "schema" "hibernate") | fromYaml) }}
  <Resource name="jdbc/live_logging_info" auth="Container" type="javax.sql.DataSource"
            factory="org.pentaho.di.core.database.util.DecryptingDataSourceFactory"
            driverClassName="{{ .jdbc.driver }}"
            initialSize="0"
            maxActive="20"
            maxIdle="5"
            maxWait="10000"
            minIdle="0"
            password="{{ include "arkcase.xmlEscape" .password }}"
            testOnBorrow="true"
            url="{{ include "arkcase.xmlEscape" .jdbc.url }}"
            username="{{ include "arkcase.xmlEscape" .username }}"
            validationQuery="{{ include "arkcase.xmlEscape" .validationQuery }}"
            />
  {{- end }}

  {{- with (include "arkcase.db.schema" (dict "ctx" $ "schema" "jackrabbit") | fromYaml) }}
  <Resource name="jdbc/jackrabbit" auth="Container" type="javax.sql.DataSource"
            factory="org.pentaho.di.core.database.util.DecryptingDataSourceFactory"
            driverClassName="{{ .jdbc.driver }}"
            initialSize="0"
            maxActive="20"
            maxIdle="5"
            maxWait="10000"
            minIdle="0"
            password="{{ include "arkcase.xmlEscape" .password }}"
            testOnBorrow="true"
            url="{{ include "arkcase.xmlEscape" .jdbc.url }}"
            username="{{ include "arkcase.xmlEscape" .username }}"
            validationQuery="{{ include "arkcase.xmlEscape" .validationQuery }}"
            />
  {{- end }}
</Context>
