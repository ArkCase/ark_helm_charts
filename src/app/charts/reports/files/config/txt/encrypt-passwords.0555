#!/bin/bash
set -euo pipefail
. /.functions

DEFAULT_MODE="kettle"

encrypt()
{
	local MODE="${1}"
	local VALUE="${2}"
	"${ENCRYPTOR}" "-${MODE}" "${VALUE}"
}

usage()
{
	echo -e "usage: ${BASH_ARGV0:-${BASH_SOURCE:-${0}}} [kettle|carte]"
	exit 1
}

if [ ${#} -eq 0 ] ; then
	MODE="${DEFAULT_MODE}"
elif [ ${#} -eq 1 ] ; then
	MODE="${1}"
else
	usage
fi
MODE="${MODE,,}"

case "${MODE}" in
	kettle | carte ) ;;
	* ) err "Unsupported encryption mode [${MODE}]" ; usage ;;
esac

set_or_default ENCRYPTOR "encr.sh"
require_exe "${ENCRYPTOR}"

while IFS="=" read -r -d '' NAME REST ; do
	[[ "${NAME}" =~ _PASSWORD$ ]] || continue
	CLEAR="${!NAME}"
	CRYPT="$(encrypt "${MODE}" "${CLEAR}" 2>/dev/null)" || fail "Failed to encrypt the passwords properly"
	echo "export ${NAME}=${CRYPT@Q};"
	echo "export ${NAME}_CLEAR=${CLEAR@Q};"
done < <(env -0)
