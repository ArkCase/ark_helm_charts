#!/bin/bash

set -euo pipefail

DEFAULT_MODE="kettle"

timestamp()
{
	date -Ins -u
}

say()
{
	echo -e "$(timestamp): ${@}"
}

err()
{
	say "‚ùå ${@}"
}

encrypt()
{
	local MODE="${1}"
	local VALUE="${2}"
	"${EXE}" "-${MODE}" "${VALUE}"
}

fail()
{
	err "${@}"
	exit ${EXIT_CODE:-1}
}

usage()
{
	echo -e "usage: ${BASH_ARGV0:-${BASH_SOURCE:-${0}}} [kettle|carte]"
	exit 1
}

if [ ${#} -eq 0 ] ; then
	MODE="${DEFAULT_MODE}"
elif [ ${#} -eq 1 ] ; then
	MODE="${1}"
else
	usage
fi
MODE="${MODE,,}"

case "${MODE}" in
	kettle | carte ) ;;
	* ) fail "Unsupported encryption mode [${MODE}]" ;;
esac

[ -v ENCR_SH ] || ENCR_SH=""
[ -n "${ENCR_SH}" ] || ENCR_SH="encr.sh"
EXE="$(type -P "${ENCR_SH}")" || fail "Could not find the ${ENCR_SH} executable in the path"

while IFS="=" read -r -d '' NAME REST ; do
	[[ "${NAME}" =~ _PASSWORD$ ]] || continue
	ENC="$(encrypt "${MODE}" "${!NAME}")"
	echo "export ${NAME}=${ENC@Q};"
done < <(env -0)
