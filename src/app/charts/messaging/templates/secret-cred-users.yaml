{{- if (include "arkcase.subsystem.enabled" $) -}}
  {{- $ctx := $ -}}
  {{- /* The key is the username, and the value is the comma-separated list of roles to assign */ -}}
  {{- $usersAndRoles := (include "arkcase.artemis.users" $ | fromYaml) -}}
  {{- range $user, $roles := $usersAndRoles }}
    {{- $password := "" }}
    {{- $secretName := (include "arkcase.subsystem-access.name.cred" (dict "ctx" $ctx "type" $user)) }}

    {{- $secretObj := (lookup "v1" "Secret" $ctx.Release.Namespace $secretName) }}
    {{- if $secretObj }}
      {{- $secretData := (get $secretObj "data") }}
      {{- if $secretData }}
        {{- $user = (hasKey $secretData "username" | ternary $secretData.username ($user | b64enc)) }}
        {{- $password = (hasKey $secretData "password" | ternary $secretData.password "") }}
        {{- $roles = (hasKey $secretData "roles" | ternary $secretData.roles ($roles | b64enc)) }}
      {{- end }}
    {{- end }}

    {{- if not $password }}
      {{- $password = (randAlphaNum 64 | b64enc) }}
    {{- end }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName | quote }}
  namespace: {{ $ctx.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
    {{- with ($ctx.Values.labels).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with ($ctx.Values.annotations).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
type: Opaque
data:
  username: {{ $user }}
  password: {{ $password }}
  roles: {{ $roles }}
  {{- end }}
{{- end -}}
