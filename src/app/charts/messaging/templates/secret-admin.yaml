{{- if and (include "arkcase.subsystem.enabled" $) (not (include "arkcase.subsystem.external" $)) -}}
  {{- $ctx := $ -}}

  {{- /* Always use the same service name in the URL */ -}}
  {{- $serviceName := (include "arkcase.service.name" $) -}}

  {{- $admin := (include "arkcase.artemis.admin" $ | fromYaml) -}}
  {{- $persistent := (not (empty (include "arkcase.toBoolean" $admin.persistent))) }}

  {{- $secretName := (include "arkcase.subsystem-access.name" (dict "ctx" $ "conn" "admin")) -}}

  {{- $secret := (include "arkcase.get-existing.secret" (dict "ctx" $ "name" $secretName) | fromYaml) -}}
  {{- $secretData := $secret.data | default dict -}}
  {{- $username := $secretData.username | default $admin.username -}}
  {{- $password := $secretData.password | default (randAlphaNum 64) -}}
  {{- $roles := $secretData.roles | default $admin.roles -}}

  {{-
    $data := dict
      "amqpUrl" (printf "ssl://%s:61616" $serviceName)
      "stompUrl" (printf "ssl://%s:61613" $serviceName)
      "username" $username
      "password" $password
      "roles" $roles
  -}}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
    {{- with ($.Values.labels).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with ($.Values.annotations).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
type: Opaque
data: {{- include "arkcase.secret.encode" $data | nindent 2 -}}
{{- end -}}
