# Default values for ark-core.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This can be set to "false" by parent charts. If not defined, it will be taken as true
#enabled: true

#
# This should group all application-specific configurations
#
configuration:
  # We swap the default out to "s3"
  dialect: "s3"

  alfresco:
    # Turn indexing off by default
    indexing: false

resources:
  default:
    activemq: "1Gi"
    main: "4Gi"
    search: "2Gi"
    sfs: "512Mi"
    share: "2Gi"
    xform-core-aio: "1536Mi"
    xform-router: "1Gi"

  development:
    activemq: "1Gi,100m-500m"
    main: "1536Mi,100m-500m"
    search: "2Gi,200m-500m"
    # sfs: "...?"
    share: "1Gi,200m-500m"
    xform-core-aio: "1536Mi,300m-500m"
    # xform-router: "...?"

platform: ""

image:
  # pullPolicy: IfNotPresent
  registry: "public.ecr.aws"

  minio:
    repository: "arkcase/minio"
    tag: "20250723155402.0.0"

  activemq:
    repository: "arkcase/alfresco-activemq"
    tag: "5.17.6"

  search:
    repository: "arkcase/alfresco-search"
    tag: "2.0.8.2"

  xform-core-aio:
    repository: "arkcase/alfresco-xform-core"
    tag: "3.1.1"

  # setperm:
  #   repository: "arkcase/setperm"
  #   tag: "1.0.2"

  community:
    main:
      repository: "arkcase/alfresco-ce-content"
      tag: &alfrescoCeVersion "7.3.1"

    share:
      repository: "arkcase/alfresco-ce-share"
      tag: *alfrescoCeVersion

  enterprise: 

    registry: "207428623785.dkr.ecr.us-east-1.amazonaws.com"

    main:
      repository: "arkcase/alfresco-ee-content"
      tag: &alfrescoEeVersion "7.3.1.2"

    share:
      repository: "arkcase/alfresco-ee-share"
      tag: *alfrescoEeVersion

    sfs:
      repository: "arkcase/alfresco-ee-fileshare"
      tag: "2.1.1"

    xform-router:
      repository: "arkcase/alfresco-ee-xform-router"
      tag: "2.1.1"

# You generally shouldn't mess with these. These exist to support some name-generation templates
nameOverride: ""
fullnameOverride: ""

# Custom annotations to apply throughout
annotations:

# Custom labels to apply throughout
labels:

updateStrategy: RollingUpdate
rollingUpdatePartition: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations:
  # Annotations to add to the service account
  labels:
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

securityContext:
  # You must specify an `fsGroup` to allow ActiveMQ write access to mounted
  # volumes (as long as ActiveMQ runs as a non-root user, which should be the
  # case). Any random number will do.
  # fsGroup: &fsGroup 1997
  # fsGroupChangePolicy: OnRootMismatch

#autoscaling:
  #enabled: false
  #minReplicas: 1
  #maxReplicas: 100
  #targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector:

tolerations:

affinity:

licenses:
  - "alfresco"

persistence:
  # If set to `false`, an `emptyDir` will be used instead and all other `persistence.*` parameters
  # are ignored.
  enabled: true

  # Set the default capacity for volumes in case none is assigned explicitly
  # and the default value is insufficient
  volumeSize:
    main-init: "2Gi"
    main-data: "8Gi"
    sfs-data: "8Gi"
    activemq-data: "1Gi"

#  The volumes for persistent data
  volumes:
# The volume where the data will be stored (RTFM for more info on how to
# properly declare volumes)
#     data:

serviceTemplates: &serviceTemplate
  probes: &probesTemplate
    enabled: true
    spec: &probesSpecTemplate
      initialDelaySeconds: 0
      periodSeconds: 10
      timeoutSeconds: 10
      failureThreshold: 1
      successThreshold: 1
    startup:
      failureThreshold: 90

  ports: &ports {}

service:

  alfresco:
    <<: *serviceTemplate
    ports:
      - name: "https"
        protocol: TCP
        port: 8443
      - name: "https-solr"
        protocol: TCP
        port: 8999
    probes:
      <<: *probesTemplate
      spec:
        <<: *probesSpecTemplate
      startup:
        exec:
          command: [ "/usr/local/bin/tomcat-live", "STARTUP" ]
        failureThreshold: 90
      liveness:
        exec:
          command: [ "/usr/local/bin/tomcat-live", "LIVENESS" ]
      readiness:
        httpGet:
          scheme: HTTPS
          path: "/alfresco"
          port: 8443

  minio: &minio
    <<: *serviceTemplate
    ports:
      - name: "s3"
        protocol: TCP
        port: &s3 9000
      - name: "s3console"
        protocol: TCP
        port: 9001

    probes:
      <<: *probesTemplate
      spec:
        <<: *probesSpecTemplate
        httpGet:
          path: /minio/health/live
          port: *s3
          scheme: HTTPS
      startup:
        failureThreshold: 90
      liveness:
        failureThreshold: 3
      readiness:
        httpGet:
          path: /minio/health/ready
          port: *s3
          scheme: HTTPS
        failureThreshold: 1

  internal:
    <<: *minio

  share:
    <<: *serviceTemplate
    ports:
      - name: "https"
        protocol: TCP
        port: 8443

    probes:
      <<: *probesTemplate
      spec:
        <<: *probesSpecTemplate
      startup:
        exec: &tomcatLive
          command: [ "/usr/local/bin/tomcat-live" ]
        failureThreshold: 90
      liveness:
        exec:
          <<: *tomcatLive
      readiness:
        httpGet:
          scheme: HTTPS
          path: "/share"
          port: 8443

  sfs:
    <<: *serviceTemplate
    ports:
      - name: "https"
        protocol: TCP
        port: 8099

    probes:
      <<: *probesTemplate
      spec:
        <<: *probesSpecTemplate
        tcpSocket:
          port: 8099

  activemq:
    <<: *serviceTemplate
    ports:
      - name: "amqp"
        protocol: TCP
        port: 5672

      - name: "console"
        protocol: TCP
        port: 8443

      - name: "stomp"
        protocol: TCP
        port: 61613

      - name: "openwire"
        protocol: TCP
        port: 61616

    probes:
      <<: *probesTemplate
      spec:
        <<: *probesSpecTemplate
        tcpSocket:
          port: 61616

  search:
    <<: *serviceTemplate
    ports:
      - name: "https"
        protocol: TCP
        port: 8983

  xform-router:
    <<: *serviceTemplate
    ports:
      - name: "https"
        protocol: TCP
        port: 8095

    probes:
      <<: *probesTemplate
      spec:
        <<: *probesSpecTemplate
        httpGet:
          scheme: HTTPS
          path: "/actuator/health"
          port: 8095

  xform-core-aio:
    <<: *serviceTemplate
    ports:
      - name: "https"
        protocol: TCP
        port: 8090

    probes:
      <<: *probesTemplate
      spec:
        <<: *probesSpecTemplate
        httpGet:
          scheme: HTTPS
          path: "/actuator/health"
          port: 8090
