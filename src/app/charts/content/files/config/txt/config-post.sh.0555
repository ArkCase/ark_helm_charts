#!/bin/bash
set -euo pipefail
. /.functions

set_or_default BASE_DIR "/app"
set_or_default DATA_DIR "${BASE_DIR}/data"
set_or_default LOGS_DIR "${DATA_DIR}"

is_dir_readwrite "${LOGS_DIR}" && redirect_logs "${LOGS_DIR}/config-post.log"

# By default, wait up to 300 seconds if not told otherwise
set_or_default INIT_POLL_SLEEP 2
[[ "${INIT_POLL_SLEEP}" =~ ^[1-9][0-9]*$ ]] || INIT_POLL_SLEEP=2

set_or_default INIT_MAX_WAIT 300
[[ "${INIT_MAX_WAIT}" =~ ^[1-9][0-9]*$ ]] || INIT_MAX_WAIT=300

set_or_default MINIO_ADMIN_URL "https://localhost:9000"
[[ "${MINIO_ADMIN_URL}" =~ ^(.*)/+$ ]] && MINIO_ADMIN_URL="${BASH_REMATCH[1]}"
PROBE_URL="${MINIO_ADMIN_URL}/minio/health/ready"

START="$(date +%s)"
waiting "Starting the polling cycle for [${PROBE_URL}]"
while true ; do
	curl -fsSL -m 5 "${PROBE_URL}" &>/dev/null && break
	NOW="$(date +%s)"
	[ $(( NOW - START )) -ge ${INIT_MAX_WAIT} ] && fail "Timed out waiting for the URL [${PROBE_URL}] to come up"
	# If sleep didn't succeed, it means it got signaled, which
	# Means we need to stop what we're doing and puke out
	sleep ${INIT_POLL_SLEEP} || fail "Sleep interrupted, can't continue polling"
done
OUT="$(curl -fL -m 5 "${PROBE_URL}" 2>&1)" || fail "Unable to access the URL [${PROBE_URL}] (rc=${?}): ${OUT}"

ok "The URL [${PROBE_URL}] responded, continuing"

INSTANCE="local"

# Add the configuration for MC control
mcli config host add "${INSTANCE}" "${MINIO_ADMIN_URL}" "${MINIO_ROOT_USER}" "${MINIO_ROOT_PASSWORD}"

set_or_default MINIO_USER ""
set_or_default MINIO_PASSWORD ""
set_or_default MINIO_POLICY "readwrite"

if [ -n "${MINIO_USER}" ] && [ -n "${MINIO_PASSWORD}" ] ; then
	# Add the configuration for MC access in read-write mode
	say "Creating the service account with username [${MINIO_USER}] (policy = ${MINIO_POLICY})..."
	mcli admin user add "${INSTANCE}" < <(echo -en "${MINIO_USER}\n${MINIO_PASSWORD}") || fail "Failed to create the user account for [${MINIO_USER}]..."

	POLICY_ATTACHED="$(mcli admin policy entities local --user "${MINIO_USER}" --json | jq -r ".result?.userMappings[]?.policies[]? | select(. == \"${MINIO_POLICY}\")")"

	# If the policy isn't attached, attach it
	[ -n "${POLICY_ATTACHED}" ] || \
		mcli admin policy attach "${INSTANCE}" "${MINIO_POLICY}" --user "${MINIO_USER}" || fail "Failed to attach the ${MINIO_POLICY} policy to user [${MINIO_USER}]..."
fi

exit 0
