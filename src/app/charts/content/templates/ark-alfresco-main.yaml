{{- if and (include "arkcase.subsystem.enabled" $) (not (include "arkcase.content.external" $)) (eq "alfresco" (include "arkcase.content.info.dialect" $)) -}}
{{- $schema := (include "arkcase.db.schema" (dict "ctx" $ "schema" "content") | fromYaml) -}}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: &fullname {{ include "arkcase.fullname" $ | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels.service" $ | nindent 4 }}
    {{- with (include "arkcase.values" (dict "ctx" $ "base" "labels") | fromYaml) }}
      {{- toYaml .value | nindent 4 }}
    {{- end }}
  annotations:
    {{- with (include "arkcase.values" (dict "ctx" $ "base" "annotations") | fromYaml) }}
      {{- toYaml .value | nindent 4 }}
    {{- end }}
spec:
  {{- if not ($.Values.autoscaling).enabled }}
  replicas: {{ $.Values.replicaCount | default 1 }}
  {{- end }}
  selector:
    matchLabels: {{- include "arkcase.labels.matchLabels" $ | nindent 6 }}
  serviceName: {{ include "arkcase.service.headless" $ | quote }}
  updateStrategy: {{- include "arkcase.cluster.statefulUpdateStrategy" $ | nindent 4 }}
  template:
    metadata:
      name: *fullname
      namespace: {{ $.Release.Namespace | quote }}
      labels: {{- include "arkcase.labels.service" $ | nindent 8 }}
        {{- with (include "arkcase.values" (dict "ctx" $ "base" "labels") | fromYaml) }}
          {{- toYaml .value | nindent 8 }}
        {{- end }}
      annotations:
        # NB: Both these annotation values must be of type "string"
        prometheus.io/scrape: "true"
        prometheus.io/port: "9100"
        {{- with (include "arkcase.values" (dict "ctx" $ "base" "annotations") | fromYaml) }}
          {{- toYaml .value | nindent 8 }}
        {{- end }}
    spec:
      {{- include "arkcase.image.pullSecrets" $ | nindent 6 }}
      {{- with (include "arkcase.values" (dict "ctx" $ "base" "hostAliases") | fromYaml) }}
      hostAliases: {{- toYaml .value | nindent 8 }}
      {{- end }}
      {{- with (include "arkcase.values" (dict "ctx" $ "base" "schedulerName") | fromYaml) }}
      schedulerName: {{ .value | quote }}
      {{- end }}
      serviceAccountName: {{ include "arkcase.serviceAccountName" $ | quote }}
      securityContext: {{- include "arkcase.securityContext" $ | nindent 8 }}
      initContainers:
        - name: init-set-permissions
          {{- include "arkcase.image" (dict "ctx" $ "name" "setperm" "repository" "arkcase/setperm") | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            - name: DATA_DIR
              value: &dataDir "/app/data"
            - name: INIT_DIR
              value: &initDir "/app/init"
            - name: JOBS
              value: |-
                jobs:
                  # We know the image uses user 33000:1000
                  - ownership: {{ coalesce ($.Values.persistence).ownership "33000:1000" | quote }}
                    permissions: "u=rwX,g=rX,o="
                    flags: [ "recurse", "noforced", "create", "changes" ]
                    targets: [ "$(DATA_DIR)", "$(INIT_DIR)" ]
          volumeMounts:
            - name: &initVol "init"
              mountPath: *initDir
            - name: &dataVol "data"
              mountPath: *dataDir
        {{- include "arkcase.initDependencies.container" $ | nindent 8 }}
      containers:
        {{- $partName := (include "arkcase.part.name" $) }}
        - name: {{ $partName | quote }}
          {{- include "arkcase.image" $ | nindent 10 }}
          {{- include "arkcase.subsystem.ports" $ | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            {{- include "arkcase.subsystem-access.all.env" $ | nindent 12 }}
            {{- include "arkcase.acme.env" $ | nindent 12 }}
            - name: &key METADATA_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: *fullname
                  key: *key
            - name: &key METADATA_KEYSTORE_METADATA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: *fullname
                  key: *key
            - name: JAVA_TOOL_OPTIONS
              value: >-
                -Dencryption.keystore.type=JCEKS
                -Dencryption.cipherAlgorithm=DESede/CBC/PKCS5Padding
                -Dencryption.keyAlgorithm=DESede
                -Dencryption.keystore.location=/usr/local/tomcat/shared/classes/alfresco/extension/keystore/keystore
                -Dmetadata-keystore.password=$(METADATA_KEYSTORE_PASSWORD)
                -Dmetadata-keystore.aliases=metadata
                -Dmetadata-keystore.metadata.password=$(METADATA_KEYSTORE_METADATA_PASSWORD)
                -Dmetadata-keystore.metadata.algorithm=DESede

            {{- $content := (include "arkcase.cm.info" $ | fromYaml) }}
            {{- $indexing := (not (empty (include "arkcase.content.indexing" $))) }}
            - name: DATA_DIR
              value: *dataDir
            {{- include "arkcase.subsystem-access.env.admin" (dict "ctx" $ "key" "username" "name" "ALFRESCO_ADMIN_USERNAME") | nindent 12 }}
            {{- include "arkcase.subsystem-access.env.admin" (dict "ctx" $ "key" "password" "name" "ALFRESCO_ADMIN_PASSWORD") | nindent 12 }}
            {{- include "arkcase.subsystem-access.env.conn" (dict "ctx" $ "subsys" "rdbms" "key" "host" "name" "ALFRESCO_JDBC_HOST") | nindent 12 }}
            {{- include "arkcase.subsystem-access.env.conn" (dict "ctx" $ "subsys" "rdbms" "key" "port" "name" "ALFRESCO_JDBC_PORT") | nindent 12 }}
            {{- if $schema.jdbc.instance }}
              {{- include "arkcase.subsystem-access.env.conn" (dict "ctx" $ "subsys" "rdbms" "key" "instance" "name" "ALFRESCO_JDBC_INSTANCE") | nindent 12 }}
            {{- end }}
            {{- include "arkcase.subsystem-access.env.cred" (dict "ctx" $ "subsys" "rdbms" "type" "schema-content" "key" "username" "name" "ALFRESCO_JDBC_USERNAME") | nindent 12 }}
            {{- include "arkcase.subsystem-access.env.cred" (dict "ctx" $ "subsys" "rdbms" "type" "schema-content" "key" "password" "name" "ALFRESCO_JDBC_PASSWORD") | nindent 12 }}
            - name: CATALINA_OPTS
              value: >-
                -XX:MinRAMPercentage=50
                -XX:MaxRAMPercentage=80
                -Ddir.root=$(DATA_DIR)
                -Ddb.driver={{ $schema.jdbc.driver | squote }}
                -Ddb.url={{ $schema.jdbc.url | squote }}
                -Dsolr.secureComms=https
                -Dsolr.host={{ include "arkcase.alfresco.service" (dict "ctx" $ "name" "search") | quote }}
                -Dsolr.port.ssl=8983
                -Dsolr.base.url=/solr
                -Dsolr.http.connection.timeout=1000
                -Dindex.subsystem.name={{ $indexing | ternary "solr6" "noindex" }}
                -Dshare.host={{ include "arkcase.alfresco.service" (dict "ctx" $ "name" "share") | quote }}
                -Dshare.port=8443
                -Dshare.scheme=https
                -Dalfresco.host={{ $content.url.hostname | quote }}
                -Dalfresco.port=8443
                -Dalfresco.scheme=https
                -Daos.baseUrlOverwrite={{ printf "%s/aos" $content.url.baseUrl | quote }}
                -Dopencmis.server.override=true
                -Dopencmis.server.value={{ printf "%s/api" $content.url.baseUrl | quote }}
                -Dmessaging.broker.url="failover:(nio+ssl://{{- include "arkcase.alfresco.service" (dict "ctx" $ "name" "activemq") -}}:61616)?timeout=3000&jms.useCompression=true"
                -Ddeployment.method=HELM_CHART
                -Dcsrf.filter.enabled=false
                -DlocalTransform.core-aio.url=https://{{- include "arkcase.alfresco.service" (dict "ctx" $ "name" "xform-core-aio") -}}:8090/
              {{- if (include "arkcase.enterprise" $) }}
                -Dsfs.url=https://{{- include "arkcase.alfresco.service" (dict "ctx" $ "name" "sfs") -}}:8099/
                -Dtransform.service.enabled=true
                -Dtransform.service.url=https://{{- include "arkcase.alfresco.service" (dict "ctx" $ "name" "xform-router") -}}:8095
                -Ddsync.service.uris=https://localhost:9090/alfresco
              {{- end }}
          {{- with (include "arkcase.values" (dict "ctx" $ "base" "command") | fromYaml) }}
          command: {{ toJson .value }}
          {{- end }}
          resources: {{- include "arkcase.resources" $ | nindent 12 }}
          securityContext: {{- include "arkcase.securityContext" (dict "ctx" $ "container" $partName) | nindent 12 }}
          volumeMounts:
            {{- include "arkcase.alfresco.license.volumeMounts" (dict "ctx" $ "volume" "alfresco-license" "path" "/usr/local/tomcat/shared/classes/alfresco/extension/license") | nindent 12 }}
            {{- include "arkcase.subsystem-access.all.volumeMount" $ | nindent 12 }}
            {{- include "arkcase.trusts.mount" $ | nindent 12 }}
            {{- include "arkcase.acme.volumeMount" $ | nindent 12 }}
            - name: *dataVol
              mountPath: *dataDir
            - name: *initVol
              mountPath: *initDir
            {{- include "arkcase.file-resource.config.volumeMount" (dict "ctx" $ "mountPath" "/usr/local/bin/tomcat-live") | nindent 12 }}
            {{- include "arkcase.file-resource.config.volumeMount" (dict "ctx" $ "mountPath" "/usr/local/tomcat/shared/classes/alfresco-global.properties") | nindent 12 }}
            {{- if and (eq "alfresco" $content.dialect) (include "arkcase.toBoolean" $content.settings.sync) }}
              {{- include "arkcase.file-resource.config.volumeMount" (dict "ctx" $ "mountPath" "/usr/local/tomcat/shared/classes/alfresco/extension/audit/alfresco-audit-arkcase-extractors.xml") | nindent 12 }}
            {{- end }}
      volumes:
        {{- include "arkcase.subsystem-access.all.volume" $ | nindent 8 }}
        {{- include "arkcase.trusts.volume" $ | nindent 8 }}
        {{- include "arkcase.acme.volume" $ | nindent 8 }}
        {{- include "arkcase.alfresco.license.volume" (dict "ctx" $ "volume" "alfresco-license") | nindent 8 }}
        {{- include "arkcase.file-resource.config.volume" $ | nindent 8 }}
            items:
              - key: &key "alfresco-global.properties"
                path: *key
              - key: &key "alfresco-audit-arkcase-extractors.xml"
                path: *key
              - key: &key "tomcat-live"
                path: *key
                mode: 0555
        {{- include "arkcase.persistence.ephemeralVolume" (dict "ctx" $ "name" "init") | nindent 8 }}
        {{- include "arkcase.persistence.volume" (dict "ctx" $ "name" "data") | nindent 8 }}
      {{- with (include "arkcase.values" (dict "ctx" $ "base" "nodeSelector") | fromYaml) }}
      nodeSelector: {{- toYaml .value | nindent 8 }}
      {{- end }}
      {{- with (include "arkcase.values" (dict "ctx" $ "base" "affinity") | fromYaml) }}
      affinity: {{- toYaml .value | nindent 8 }}
      {{- end }}
      {{- with (include "arkcase.values" (dict "ctx" $ "base" "tolerations") | fromYaml) }}
      tolerations: {{- toYaml .value | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "data") | nindent 4 }}

  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "data") | nindent 0 }}
{{- end }}
