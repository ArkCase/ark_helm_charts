{{- if (include "arkcase.subsystem.enabled" $) -}}
  {{- $ctx := $ -}}
  {{- $name := (include "arkcase.subsystem-access.name.cred" (dict "ctx" $ "type" "rw")) -}}

  {{- $secretObj := (lookup "v1" "Secret" $ctx.Release.Namespace $name) -}}
  {{- $secretData := dict -}}
  {{- $username := ( "content-rw" | b64enc ) -}}
  {{- $password := "" -}}
  {{- if $secretObj -}}
    {{- $secretData = (get $secretObj "data" | default $secretData) -}}
    {{- if $secretData -}}
      {{- if hasKey $secretData "username" -}}
        {{- $username = (get $secretData "username" | default $username) -}}
      {{- end -}}
      {{- if hasKey $secretData "password" -}}
        {{- $password = (get $secretData "password") -}}
      {{- end -}}
    {{- end -}}
  {{- end -}}

  {{- /* There's no prior password, so render a new one */ -}}
  {{- if not $password -}}{{- $password = (randAlphaNum 64 | b64enc) -}}{{- end -}}
  {{- $secretData = merge (dict "username" $username "password" $password) $secretData -}}
---
  {{- if $secretObj }}
    {{- set $secretObj "data" $secretData | toYaml | nindent 0 }}
  {{- else }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $name | quote }}
  namespace: {{ $ctx.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ctx | nindent 4 }}
    {{- with ($ctx.Values.labels).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    helm.sh/resource-policy: "keep"
    {{- with ($ctx.Values.annotations).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
type: Opaque
data: {{- $secretData | toYaml | nindent 2 }}
  {{- end }}
{{- end -}}
