{{- if and (include "arkcase.subsystem.enabled" $) (not (include "arkcase.content.external" $)) }}
  {{- $content := (include "arkcase.cm.info" $ | fromYaml) -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "arkcase.fullname" $ | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
    {{- with (.Values.labels).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with (.Values.annotations).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
type: Opaque
stringData:
  {{- if (eq "alfresco" $content.dialect) }}
  # We can't modify these unless we also rotate out the keystore and change its
  # passwords WITHOUT modifying the key itself ... this is a pain, and we're not
  # yet ready for it.
  METADATA_KEYSTORE_PASSWORD: "mp6yc0UD9e"
  METADATA_KEYSTORE_METADATA_PASSWORD: "oKIWzVdEdA"
  {{- end }}

  {{- if (eq "s3" $content.dialect) }}
  # This LDAP stuff should really be coming from the LDAP subsystem's configuration
  # directly as opposed to being mirrored here ... for now, we do this to avoid
  # deeper surgery.
    {{- $baseDn := (include "arkcase.ldap.baseDn" $) }}
  MINIO_IDENTITY_LDAP_USER_DN_SEARCH_BASE_DN: {{ printf "%s,%s" (include "arkcase.ldap" (dict "ctx" $ "value" "search.users.base")) $baseDn | quote }}
  MINIO_IDENTITY_LDAP_USER_DN_SEARCH_FILTER: {{ include "arkcase.ldap" (dict "ctx" $ "value" "search.users.filter") | replace "{0}" "%s" | quote }}

  {{- $ldapGroupsBase := (printf "%s,%s" (include "arkcase.ldap" (dict "ctx" $ "value" "search.groups.base")) $baseDn) }}
  MINIO_IDENTITY_LDAP_GROUP_SEARCH_BASE_DN: {{ $ldapGroupsBase | quote }}
  MINIO_IDENTITY_LDAP_GROUP_SEARCH_FILTER: {{ include "arkcase.ldap" (dict "ctx" $ "value" "search.groups.membership") | replace "{0}" "%d" | quote }}
  LDAP_ADMIN_GROUP: {{ printf "cn=%s-admin,%s" (include "arkcase.subsystem.name" $) $ldapGroupsBase | quote }}

  {{- end }}
{{- end }}
