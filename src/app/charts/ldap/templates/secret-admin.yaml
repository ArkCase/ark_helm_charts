{{- if and (include "arkcase.subsystem.enabledOrExternal" $) (not (include "arkcase.samba.external" $)) -}}
  {{- $ctx := $ -}}
  {{- $service := (include "arkcase.service.name" $ctx) -}}
  {{- $secretName := (include "arkcase.subsystem-access.name" (dict "ctx" $ctx "conn" "admin")) -}}

  {{- $secret := (include "arkcase.get-existing.secret" (dict "ctx" $ "name" $secretName) | fromYaml) -}}
  {{- $secretData := $secret.data | default dict -}}
  {{- $username := "administrator" -}}
  {{- $password := $secretData.password | default (randAlphaNum 64) -}}
  {{- $ldap := (include "arkcase.ldap.flat" (dict "ctx" $ctx "server" "arkcase") | fromYaml) -}}

  {{-
    $data := dict
      "url" (printf "ldaps://%s" $service)
      "username" $username
      "password" $password
  -}}
  {{- $data = merge $data (pick $ldap "domain" "realm" "rootDn") -}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
    {{- with ($.Values.labels).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with ($.Values.annotations).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
type: Opaque
data: {{- include "arkcase.secret.encode" $data | nindent 2 -}}
{{- end -}}
