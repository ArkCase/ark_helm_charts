{{- if and (include "arkcase.subsystem.enabled" $) (not (include "arkcase.samba.external" $)) }}
apiVersion: v1
kind: Pod
metadata:
  name: {{ printf "%s-test" (include "arkcase.fullname" $) | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
    {{- include "arkcase.labels.test.smoke" $ | nindent 4 }}
    {{- with ($.Values.labels).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- with ($.Values.test).labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: hook-succeeded
    {{- with ($.Values.annotations).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- with ($.Values.test).annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- include "arkcase.image.pullSecrets" $ | nindent 2 }}
  containers:
    - name: test
      {{- include "arkcase.image" (dict "ctx" $ "name" "smoke-test" "repository" "arkcase/nettest") | nindent 6 }}
      command: [ "/usr/local/bin/run-from-env" ]
      args: [ "SCRIPT" ]
      env: {{- include "arkcase.tools.baseEnv" $ | nindent 8 }}
        {{- include "arkcase.subsystem-access.env" (dict "ctx" $ "conn" "admin" "key" "username" "name" "ADMIN_USERNAME") | nindent 8 }}
        {{- include "arkcase.subsystem-access.env" (dict "ctx" $ "conn" "admin" "key" "password" "name" "ADMIN_PASSWORD") | nindent 8 }}
        {{- include "arkcase.subsystem-access.env" (dict "ctx" $ "conn" "main" "key" "realm" "name" "ADMIN_REALM") | nindent 8 }}
        {{- include "arkcase.subsystem-access.env" (dict "ctx" $ "conn" "main" "key" "rootDn" "name" "ROOT_DN") | nindent 8 }}
        - name: SERVICE_NAME
          value: {{ include "arkcase.service.name" $ | quote }}
        - name: SCRIPT
          value: |-
            set -xeuo pipefail
            . /.functions
            init_ssl
            timeout 3 ldapsearch -H "ldaps://$(SERVICE_NAME)" -D "$(ADMIN_REALM)\\$(ADMIN_USERNAME)" -y <(echo -n "$(ADMIN_PASSWORD)") -s base -b "$(ROOT_DN)" "(objectClass=*)" dn
  restartPolicy: Never
{{- end }}
