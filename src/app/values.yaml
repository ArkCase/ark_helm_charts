global:
  settings:
    baseUrl: "https://server.dev.arkcase.com:8443/arkcase"

service:
  artifacts:
    ports:
      - name: artifacts
        protocol: TCP
        port: &artifactsPort 443

##
## Configure extra options for containers' liveness and readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
## @param service.probes.enabled Enable liveness and readiness probes
## @param service.probes.spec.initialDelaySeconds Initial delay seconds for liveness and readiness probes
## @param service.probes.spec.periodSeconds Period seconds for liveness and readiness probes
## @param service.probes.spec.timeoutSeconds Timeout seconds for liveness and readiness probes
## @param service.probes.spec.failureThreshold Failure threshold for liveness and readiness probes
## @param service.probes.spec.successThreshold Success threshold for liveness and readiness probes
##
    probes:
      enabled: true
      spec: &baseProbeThreshold
        initialDelaySeconds: 0
        periodSeconds: 10
        timeoutSeconds: 10
        successThreshold: 1
        failureThreshold: 1
        httpGet:
          scheme: HTTPS
          port: *artifactsPort
          path: "/"
      startup:
        failureThreshold: 90

  proxy:
    ports:
      - name: healthz
        protocol: TCP
        port: &healthz 18443
    probes:
      enabled: true
      spec:
        <<: *baseProbeThreshold
        httpGet:
          scheme: HTTPS
          port: *healthz
          path: "/healthz"
      startup: &haproxyProbe
        failureThreshold: 90
      liveness:
        failureThreshold: 3
      readiness:
        failureThreshold: 1

  core:
    ports:
      - name: https
        protocol: TCP
        port: 8443
      - name: cloudconfig
        protocol: TCP
        port: 9999

  reports:
    ports:
      - name: https
        protocol: TCP
        port: 8443

platform: ""

image:
  # pullPolicy: IfNotPresent

  pullSecrets:
    - name: aws-arkcase-pull

  registry: "public.ecr.aws"

  repository: "arkcase/shell-operator"

  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

  registry: "public.ecr.aws"

  # Overrides the image tag whose default is the chart appVersion.

  artifacts:
    repository: "arkcase/artifacts-core"
    # tag: &arkcaseVersion "2023.01.01-02"

  artifacts-foia:
    registry: &private-registry "207428623785.dkr.ecr.us-east-1.amazonaws.com"
    repository: "arkcase/artifacts-foia"
    # tag: &arkcaseVersion "2023.01.01-02"

  artifacts-portal:
    registry: *private-registry
    repository: "arkcase/artifacts-portal"

  haproxy:
    repository: "arkcase/haproxy"
    tag: "2.6"

# You generally shouldn't mess with these. These exist to support some name-generation templates
nameOverride: ""
fullnameOverride: ""

# Custom annotations to apply throughout
annotations:

# Custom labels to apply throughout
labels:

updateStrategy: RollingUpdate
rollingUpdatePartition: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations:
  # Annotations to add to the service account
  labels:
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

securityContext:
  template:
    # You must specify an `fsGroup` to allow ActiveMQ write access to mounted
    # volumes (as long as ActiveMQ runs as a non-root user, which should be the
    # case). Any random number will do.
    # fsGroup: 2000
    # fsGroupChangePolicy: OnRootMismatch
  nettest:
    # privileged: true
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

#autoscaling:
  #enabled: false
  #minReplicas: 1
  #maxReplicas: 100
  #targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector:

tolerations:

affinity:
