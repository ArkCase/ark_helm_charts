{{- if (include "arkcase.subsystem.enabled" $) }}
  {{- $dev := (include "arkcase.dev" $ | fromYaml) }}
  {{- $debug := $dev.debug | default dict }}
  {{- $devUid := (empty $dev) | ternary "1997" $dev.uid }}
  {{- $devGid := (empty $dev) | ternary "1997" $dev.gid }}
  {{- $customConf := and (not (empty $dev)) (not (empty $dev.conf)) }}
  {{- $customConfFile := and $customConf $dev.conf.file }}
  {{- $customConfDir := and $customConf (not $dev.conf.file) }}
  {{- $customWar := and (not (empty $dev)) (not (empty $dev.war)) }}
  {{- $customWarFile := and $customConf $dev.war.file }}
  {{- $customWarDir := and $customConf (not $dev.war.file) }}
  {{- $foia := (include "arkcase.foia" $ | fromYaml) }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "arkcase.fullname" $ | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
    {{- with ($.Values.labels).common }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with ($.Values.annotations).common }}
  annotations: {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not ($.Values.autoscaling).enabled }}
  replicas: {{ $.Values.replicaCount | default 1 }}
  {{- end }}
  selector:
    matchLabels: {{- include "arkcase.labels.matchLabels" $ | nindent 6 }}
  serviceName: {{ include "arkcase.name" $ | quote }}
  updateStrategy:
    type: {{ $.Values.updateStrategy }}
    {{- if (eq "Recreate" $.Values.updateStrategy) }}
    rollingUpdate: null
    {{- else if $.Values.rollingUpdatePartition }}
    rollingUpdate:
      partition: {{ $.Values.rollingUpdatePartition }}
    {{- end }}
  template:
    metadata:
      name: {{ include "arkcase.fullname" $ | quote }}
      namespace: {{ $.Release.Namespace | quote }}
      labels: {{- include "arkcase.labels" $ | nindent 8 }}
        {{- with ($.Values.labels).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        # NB: Both these annotation values must be of type "string"
        prometheus.io/scrape: "true"
        prometheus.io/port: "9100"
        timestamp: {{ date "20060102150405" now | quote }}
        {{- with ($.Values.annotations).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- include "arkcase.image.pullSecrets" $ | nindent 6 }}
      {{- with $.Values.hostAliases }}
      hostAliases: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.schedulerName }}
      schedulerName: {{ $.Values.schedulerName | quote }}
      {{- end }}
      serviceAccountName: {{ include "arkcase.serviceAccountName" $ | quote }}
      {{- with ($.Values.securityContext).template }}
      securityContext: {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: init-deploy
          {{- include "arkcase.core.image.deploy" (dict "ctx" $ "name" "deploy" "useChartTag" true) | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            - name: REALM_FIX
              value: {{ printf "arkcase.org=%s" (include "arkcase.ldap" (dict "ctx" $ "value" "domain")) | quote }}
        {{- if or $customConfFile $customWarFile }}
            - name: FORCE_HASHES
              value: "true"
        {{- end }}
          volumeMounts:
        {{- if $customConfFile }}
            - name: &confFileVolume "conf-file"
              mountPath: "/app/file/conf/00-base.zip"
        {{- end }}
        {{- if not $customConfDir }}
            - name: "conf"
              mountPath: "/app/depl/conf"
        {{- end }}
        {{- if $customWarFile }}
            - name: &warFileVolume "war-file"
              mountPath: "/app/file/wars/arkcase.war"
        {{- end }}
        {{- if not $customWarDir }}
            - name: "wars"
              mountPath: "/app/depl/wars"
        {{- end }}
        - name: init-permissions
          {{- include "arkcase.image" (dict "ctx" $ "name" "setperm" "repository" "arkcase/setperm") | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            - name: JOBS
              value: |
                jobs:
                  # We know the Cloudconfig image uses user 997i (centos) , 1997 (rocky)
                  # TODO: Make this autodetected via the securityContext
                  - ownership: "{{ $devUid }}:{{ $devGid }}"
                    permissions: "u=rwXs,g=rwXs,o="
                    flags: [ "recurse", "noforced", "create", "changes" ]
                    targets: [ "/app/home", "/app/conf", "/app/wars", "/app/logs", "/apps/fsrv", "/apps/foia" ]
          volumeMounts:
            - name: &confVolume "conf"
              mountPath: &confDir "/app/conf"
            - name: &warsVolume "wars"
              mountPath: &warsDir "/app/wars"
            - name: &initVolume "home"
              mountPath: &initDir "/app/init"
            - name: &homeVolume "home"
              mountPath: &homeDir "/app/home"
            - name: &logsVolume "logs"
              mountPath: &logsDir "/app/logs"
            {{- if $foia }}
            - name: &foiaVolume "foia"
              mountPath: &foiaDir "/app/foia"
            - name: &fsrvVolume "fsrv"
              mountPath: &fsrvDir "/app/fsrv"
            {{- end }}
        {{- include "arkcase.initDependencies.container" (dict "ctx" $ "name" "init-dependencies") | nindent 8 }}
        - name: init-seed-content
          {{- include "arkcase.image" (dict "ctx" $ "name" "seed-content" "repository" "arkcase/nettest") | nindent 10 }}
          {{- $contentDialect := (include "arkcase.content.info.dialect" $) }}
          {{- $contentScript := printf "/seed-content.%s" $contentDialect }}
          {{- $contentData := printf "%s.yaml" $contentScript }}
          command: [ "/only-once" ]
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            - name: WRAPPED_STATE
              value: *confDir
            - name: WRAPPED_SCRIPT
              value: {{ $contentScript | quote }}
            # - name: WRAPPED_SCRIPT_ARGS
            #   value: "...."
            - name: INIT_SEED_CONF
              value: {{ $contentData | quote }}
            - name: INIT_SEED_USERNAME
              valueFrom:
                secretKeyRef:
                  name: &secretName {{ include "arkcase.fullname" $ | quote }}
                  key: "contentUsername"
            - name: INIT_SEED_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: *secretName
                  key: "contentPassword"
            - name: INIT_SEED_IGNORE_DUPES
              value: "true"
            - name: INIT_SEED_CONTENT
              valueFrom:
                secretKeyRef:
                  name: *secretName
                  key: "contentUrl"
            {{- if (eq $contentDialect "alfresco") }}
            - name: INIT_SEED_SHARE
              valueFrom:
                secretKeyRef:
                  name: *secretName
                  key: "contentShareUrl"
            {{- end }}
          volumeMounts:
            - name: *confVolume
              mountPath: *confDir
            - name: &configMap "config-map"
              mountPath: {{ $contentScript | quote }}
              subPath: &seedContent {{ $contentScript | trimPrefix "/" | quote }}
              readOnly: true
            - name: *configMap
              mountPath: {{ $contentData | quote }}
              subPath: &seedContentYaml {{ $contentData | trimPrefix "/" | quote }}
              readOnly: true
      containers:
        - name: arkcase
          {{- with ($.Values.securityContext).arkcase }}
          securityContext: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- include "arkcase.image" (dict "ctx" $ "name" "arkcase" "repository" "arkcase/core") | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            - name: INIT_DIR
              value: *initDir
            - name: HOME_DIR
              value: *homeDir
            - name: CONF_DIR
              value: *confDir
            - name: LOGS_DIR
              value: *logsDir
            {{- if $dev }}
            - name: DEVELOPMENT
              value: "true"
            {{- end }}
            {{- with (($.Values.configuration).arkcase).env }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
            - name: LD_LIBRARY_PATH
              value: "/app/home/.arkcase/libraries"
            - name: CATALINA_OPTS
              # For Java 8, these percentages must be given as doubles. The JVM may
              # choke if the ".0" isn't provided at the end
             {{- $springProfiles := "ldap" }}
             {{- if $foia }}
                {{- $springProfiles = (printf "%s,%s" $foia.springProfile $springProfiles) }}
             {{- end }}
              value: >-
                -XX:MinRAMPercentage=50.0
                -XX:MaxRAMPercentage=80.0
                -Dacm.configurationserver.propertyfile=/app/home/.arkcase/acm/conf.yml
                -Dconfiguration.client.spring.path=spring
                -Dspring.profiles.active={{ $springProfiles }}
                -Duser.home=/app/home
                {{- with $debug }}
                -Xdebug
                -Xrunjdwp:transport=dt_socket,server=y,suspend={{ .suspend }},address=0.0.0.0:8888
                {{- end }}
          {{- include "arkcase.subsystem.ports" ($.Values.service).arkcase | nindent 10 }}
          {{- with ($.Values.command).arkcase }}
          command: {{ toJson . }}
          {{- end }}
          resources: {{- include "arkcase.resources" (dict "ctx" $ "part" "arkcase") | nindent 12 }}
          {{- with ($.Values.securityContext).arkcase }}
          securityContext: {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- include "arkcase.trusts.mount" $ | nindent 12 }}
            - name: *initVolume
              mountPath: *initDir
            - name: *homeVolume
              mountPath: *homeDir
            - name: *confVolume
              mountPath: "/app/home/.arkcase"
            - name: *warsVolume
              mountPath: "/app/tomcat/webapps"
              readOnly: true
            - name: *configMap
              mountPath: "/app/home/.arkcase/acm/acm-config-server-repo/spring/quartz.properties"
              subPath: &quartzProperties "quartz.properties"
              readOnly: true
            - name: *configMap
              mountPath: "/app/home/.arkcase/acm/log4j2.xml"
              subPath: &log4j2Xml "log4j2.xml"
              readOnly: true
            - name: *configMap
              mountPath: "/app/home/.arkcase/acm/spring/proxy-config/spring-config-proxy.xml"
              subPath: &springConfigProxyXml "spring-config-proxy.xml"
              readOnly: true
            - name: &secrets "secrets"
              mountPath: "/app/home/.arkcase/acm/acm-config-server-repo/application.yaml"
              subPath: &applicationYaml "application.yaml"
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/acm-config-server-repo/arkcase-k8s.yaml"
              subPath: &arkcaseK8sYaml "arkcase-k8s.yaml"
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/acm-config-server-repo/arkcase-activemq.yaml"
              subPath: &arkcaseActivemqYaml "arkcase-activemq.yaml"
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/acm-config-server-repo/ldap/ldap.yaml"
              subPath: &ldapYaml "ldap.yaml"
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/cmis/camel-config-alfresco-cmis.properties"
              subPath: &camelConfigAlfrescoCmisProperties "camel-config-alfresco-cmis.properties"
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/cmis/camel-config-opencmis-cmis.properties"
              subPath: &camelConfigOpenCmisCmisProperties "camel-config-opencmis-cmis.properties"
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/conf.yml"
              subPath: &confYaml "conf.yml"
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/licenses/pdfnet_sdk_license.txt"
              subPath: &pdfnetSdkLicenseTxt "pdfnet_sdk_license.txt"
              readOnly: true
            - name: *logsVolume
              mountPath: *logsDir
            {{- if $foia }}
            - name: *fsrvVolume
              mountPath: *fsrvDir
            - name: *foiaVolume
              mountPath: "/app/home/.external-portal-api"
            - name: *configMap
              mountPath: "/app/home/.external-portal-api/arkcase.ks"
              subPath: &emptyKs "empty.ks"
              readOnly: true
            - name: *configMap
              mountPath: "/app/home/.external-portal-api/arkcase.ts"
              subPath: *emptyKs
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/acm-config-server-repo/arkcase-portal-server.yaml"
              subPath: &arkcasePortalServerYaml "arkcase-portal-server.yaml"
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/acm-config-server-repo/arkcase-{{ $foia.springProfile }}.yaml"
              subPath: &arkcaseFoiaYaml "arkcase-{{ $foia.springProfile }}.yaml"
              readOnly: true
            {{- end }}
        - name: cloudconfig
          {{- with ($.Values.securityContext).cloudconfig }}
          securityContext: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- include "arkcase.image" (dict "ctx" $ "name" "cloudconfig" "repository" "arkcase/cloudconfig") | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            {{- with (($.Values.configuration).cloudconfig).env }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
            - name: DATA_DIR
              value: *confDir
            - name: JAVA_TOOL_OPTIONS
              value: >-
                -XX:MinRAMPercentage=50
                -XX:MaxRAMPercentage=80
          {{- include "arkcase.subsystem.ports" ($.Values.service).cloudconfig | nindent 10 }}
          {{- with ($.Values.command).cloudconfig }}
          command: {{ toJson . }}
          {{- end }}
          resources: {{- include "arkcase.resources" (dict "ctx" $ "part" "cloudconfig") | nindent 12 }}
          {{- with ($.Values.securityContext).cloudconfig }}
          securityContext: {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- include "arkcase.trusts.mount" $ | nindent 12 }}
            - name: *confVolume
              mountPath: *confDir
              subPath: "acm/acm-config-server-repo"
            - name: *configMap
              mountPath: "/app/conf/spring/quartz.properties"
              subPath: *quartzProperties
              readOnly: true
            - name: *secrets
              mountPath: "/app/conf/application.yaml"
              subPath: *applicationYaml
              readOnly: true
            - name: *secrets
              mountPath: "/app/conf/arkcase-activemq.yaml"
              subPath: *arkcaseActivemqYaml
              readOnly: true
            - name: *secrets
              mountPath: "/app/conf/arkcase-k8s.yaml"
              subPath: *arkcaseK8sYaml
              readOnly: true
            - name: *secrets
              mountPath: "/app/conf/ldap/ldap.yaml"
              subPath: *ldapYaml
              readOnly: true
            {{- if $foia }}
            - name: *secrets
              mountPath: "/app/conf/arkcase-portal-server.yaml"
              subPath: *arkcasePortalServerYaml
              readOnly: true
            - name: *secrets
              mountPath: "/app/conf/arkcase-{{ $foia.springProfile }}.yaml"
              subPath: *arkcaseFoiaYaml
              readOnly: true
            {{- end }}
      volumes:
        {{- include "arkcase.trusts.volume" $ | nindent 8 }}
        - name: *secrets
          secret:
            optional: false
            secretName: *secretName
            defaultMode: 0444
            items:
              - key: *applicationYaml
                path: *applicationYaml
              - key: *arkcaseK8sYaml
                path: *arkcaseK8sYaml
              {{- if $foia }}
              - key: *arkcasePortalServerYaml
                path: *arkcasePortalServerYaml
              - key: *arkcaseFoiaYaml
                path: *arkcaseFoiaYaml
              - key: *springConfigFoiaLdapProperties
                path: *springConfigFoiaLdapProperties
              {{- end }}
              - key: *ldapYaml
                path: *ldapYaml
              - key: *camelConfigAlfrescoCmisProperties
                path: *camelConfigAlfrescoCmisProperties
              - key: *camelConfigOpenCmisCmisProperties
                path: *camelConfigOpenCmisCmisProperties
              - key: *arkcaseActivemqYaml
                path: *arkcaseActivemqYaml
              - key: *confYaml
                path: *confYaml
              - key: *pdfnetSdkLicenseTxt
                path: *pdfnetSdkLicenseTxt
        - name: *configMap
          configMap:
            optional: false
            name: {{ include "arkcase.fullname" $ | quote }}
            defaultMode: 0444
            items:
              - key: *quartzProperties
                path: *quartzProperties
              - key: *springConfigProxyXml
                path: *springConfigProxyXml
              {{- if $foia }}
              - key: *springConfigFoiaLdapXml
                path: *springConfigFoiaLdapXml
              - key: *emptyKs
                path: *emptyKs
              {{- end }}
              - key: *log4j2Xml
                path: *log4j2Xml
              - key: *seedContent
                path: *seedContent
                mode: 0555
              - key: *seedContentYaml
                path: *seedContentYaml
        {{- if $customConfDir }}
        - name: "conf"
          hostPath:
            path: {{ $dev.conf.path | quote }}
            type: Directory
        {{- else }}
          {{- if $customConfFile }}
        - name: *confFileVolume
          hostPath:
            path: {{ $dev.conf.file | quote }}
            type: File
          {{- end }}
        {{- include "arkcase.persistence.volume" (dict "ctx" $ "name" "conf") | nindent 8 }}
        {{- end }}
        - name: *warsVolume
        {{- if $customWarDir }}
          hostPath:
            # TODO: Square this with the new volume strategy which points to webapps
            path: {{ $dev.war.path | quote }}
            type: Directory
        {{- else }}
          emptyDir: {}
          {{- if $customWarFile }}
        - name: *warFileVolume
          hostPath:
            path: {{ $dev.war.file | quote }}
            type: File
          {{- end }}
        {{- end }}
        {{- include "arkcase.persistence.volume" (dict "ctx" $ "name" "init") | nindent 8 }}
        {{- include "arkcase.persistence.volume" (dict "ctx" $ "name" "home") | nindent 8 }}
        {{- include "arkcase.persistence.volume" (dict "ctx" $ "name" "logs") | nindent 8 }}
        {{- if $foia }}
        - name: *foiaVolume
          emptyDir: {}
        {{- include "arkcase.persistence.volume" (dict "ctx" $ "name" "fsrv") | nindent 8 }}
        {{- end }}
  volumeClaimTemplates:
    {{- if not $customConfDir }}
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "conf") | nindent 4 }}
    {{- end }}
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "init") | nindent 4 }}
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "home") | nindent 4 }}
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "logs") | nindent 4 }}
    {{- if $foia }}
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "fsrv") | nindent 4 }}
    {{- end }}

  {{- if not $customConfDir }}
  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "conf") | nindent 0 }}
  {{- end }}
  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "init") | nindent 0 }}
  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "home") | nindent 0 }}
  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "logs") | nindent 0 }}
  {{- if $foia }}
  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "fsrv") | nindent 0 }}
  {{- end }}

{{- end }}
