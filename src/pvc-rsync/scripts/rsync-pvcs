#!/bin/bash
SCRIPT="$(readlink -f "${BASH_ARGV0:-${BASH_SOURCE:-${0}}}")"
BASEDIR="$(dirname "${SCRIPT}")"

set -euo pipefail

timestamp()
{
	/usr/bin/date -Ins -u
}

say()
{
	echo -e "$(timestamp): ${@}"
}

ok()
{
	say "✅ ${@}"
}

warn()
{
	say "⚠️ ${@}"
}

fail()
{
	say "❌ ${@}" 1>&2
	exit ${EXIT_CODE:-1}
}

usage()
{
	echo -e "usage: ${BASH_ARGV0:-${BASH_SOURCE:-${0}}} [base-dir] [user@]rsyncd-server"
	exit 1
}

find_pvcs()
{
	local ROOT_DIR="${1}"
	while read DIR ; do
		echo "$(basename "${DIR}")" "${DIR}"
	done < <("${FIND}" "${ROOT_DIR}" -mindepth 1 -maxdepth 1 -type d | "${SORT}")
}

if [ ${#} -eq 1 ] ; then
	ROOT_DIR="."
	RSYNCD_SERVER="${1}"
elif [ ${#} -eq 2 ] ; then
	ROOT_DIR="${1}"
	[ -e "${ROOT_DIR}" ] || fail "The directory [${ROOT_DIR}] does not exist"
	[ -d "${ROOT_DIR}" ] || fail "The path [${ROOT_DIR}] is not a directory"
	[ -r "${ROOT_DIR}" ] || fail "The directory [${ROOT_DIR}] is not readable"
	[ -x "${ROOT_DIR}" ] || fail "The directory [${ROOT_DIR}] is not executable"
	RSYNCD_SERVER="${2}"
else
	usage
fi

ROOT_DIR="$(readlink -f "${ROOT_DIR}")"
[[ "${RSYNCD_SERVER,,}" =~ ^([a-z0-9_-]+@)?[a-z0-9]([a-z0-9-]*[a-z0-9])?([.][a-z0-9]([a-z0-9-]*[a-z0-9])?)*$ ]] || fail "The rsyncd-server value is invalid: [${RSYNCD_SERVER}]"

TEE="$(type -P tee)" || fail "Failed to find tee in the path"
SORT="$(type -P sort)" || fail "Failed to find sort in the path"
RSYNC="$(type -P rsync)" || fail "Failed to find rsync in the path"
FIND="$(type -P find)" || fail "Failed to find find in the path"
BASENAME="$(type -P basename)" || fail "Failed to find basename in the path"

RSYNC_WITH_RETRY="${BASEDIR}/rsync-with-retry"
[ -e "${RSYNC_WITH_RETRY}" ] || fail "The $(basename "${RSYNC_WITH_RETRY}") script could not be found at [${RSYNC_WITH_RETRY}]"
[ -f "${RSYNC_WITH_RETRY}" ] || fail "The path [${RSYNC_WITH_RETRY}] is not a regular file"
[ -r "${RSYNC_WITH_RETRY}" ] || fail "The file [${RSYNC_WITH_RETRY}] is not readable"
[ -x "${RSYNC_WITH_RETRY}" ] || fail "The file [${RSYNC_WITH_RETRY}] is not executable"

LOG_BASE="$("${BASENAME}" "${0}")"
STAMP="$(/usr/bin/date -u "+%Y%m%d-%H%M%SZ")"
MAIN_LOG="${LOG_BASE}.${STAMP}.log"

exec > >("${TEE}" "${MAIN_LOG}")
exec 2>&1
say "👉 Copying all the PVCs from [${ROOT_DIR}] into the rsyncd at ${RSYNCD_SERVER}"
while read PVC_NAME PVC_DIR ; do
	STAMP="$(/usr/bin/date -u "+%Y%m%d-%H%M%SZ")"
	PVC_LOG="${LOG_BASE}.${PVC_NAME}.${STAMP}.log"

	say "👉 Processing ${PVC_NAME} from [${PVC_DIR}]..."
	"${RSYNC_WITH_RETRY}" "${PVC_DIR}" "${RSYNCD_SERVER}::${PVC_NAME}" &> "${PVC_LOG}" || fail "Processing failed (rc = ${?})"
	ok "Directory processed!"
done < <(find_pvcs "${ROOT_DIR}")
