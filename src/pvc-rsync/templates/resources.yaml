{{- $podName := include "arkcase.fullname" $ -}}
{{- $namespace := .Release.Namespace -}}
{{- $pvcs := lookup "v1" "PersistentVolumeClaim" $namespace "" -}}
{{- $scripts := (.Files.Glob "scripts/*") -}}
{{- $externalDnsName := (.Values.externalDns).name | default "" -}}
{{- $externalDnsAnnotation := (.Values.externalDns).annotation | default "external-dns.alpha.kubernetes.io/hostname" -}}
{{- $pvcs = ((empty $pvcs) | ternary list ($pvcs.items | default list) ) -}}
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    armedia.com/pvc-mounter-name: &podName {{ .Chart.Name | quote }}
  name: *podName
  namespace: {{ $namespace | quote }}
data:
  rsyncd.conf: |
    uid = 0
    gid = 0
    pid file = /tmp/rsyncd.pid
    forward lookup = false
    reverse lookup = false
    lock file = /tmp/rsync.lock
    read only = false
    
    [scripts]
    path = /scripts
    comment = Utility scripts to interact with this server
    exclude = lost+found/
    transfer logging = yes
    read only = true
    timeout = 300

    # Found {{ len $pvcs }} PVCS
  {{- range $pvc := $pvcs }}
    {{- $pvcName := $pvc.metadata.name }}
    [{{ $pvcName }}]
    path = /pvc/{{ $pvcName }}
    comment = {{ $pvcName }}
    exclude = lost+found/
    transfer logging = yes
    timeout = 300
  {{- end }}

  {{- range $path, $_ := $scripts }}
  {{ $path | base }}: |{{- $.Files.Get $path | nindent 4 }}
  {{- end }}

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels: &labels
    armedia.com/pvc-mounter-name: &podName {{ $podName | quote }}
    {{- include "arkcase.labels.service" $ | nindent 4 }}
  name: &podName {{ $podName | quote }}
  namespace: &namespace {{ $namespace | quote }}
spec:
  replicas: 1
  selector:
    matchLabels: {{- include "arkcase.labels.matchLabels" $ | nindent 6 }}
  serviceName: {{ include "arkcase.service.headless" $ | quote }}
  updateStrategy:
    type: {{ $.Values.updateStrategy }}
    {{- if (eq "Recreate" $.Values.updateStrategy) }}
    rollingUpdate: null
    {{- else if $.Values.rollingUpdatePartition }}
    rollingUpdate:
      partition: {{ $.Values.rollingUpdatePartition }}
    {{- end }}
  podManagementPolicy: Parallel
  template:
    metadata:
      name: *podName
      namespace: *namespace
      labels: {{- include "arkcase.labels.service" $ | nindent 8 }}
    spec:
      {{- include "arkcase.image.pullSecrets" $ | nindent 6 }}
      containers:
        - name: rsync
          {{- include "arkcase.image" $ | nindent 10 }}
          command: [ "rsync", "--daemon", "--no-detach", "--log-file=/dev/stdout", "--port=873" ]
          workingDir: &logsDir "/logs"
          resources: {{- include "arkcase.resources" (dict "ctx" $) | nindent 12 }}
          securityContext: {{- include "arkcase.securityContext" (dict "ctx" $ "container" "arkcase") | nindent 12 }}
          env:
            - name: "LOGS_DIR"
              value: *logsDir
          {{- include "arkcase.subsystem.ports" $ | nindent 10 }}
          volumeMounts:
            - mountPath: /etc/rsyncd.conf
              name: &configMap config-map
              readOnly: true
              subPath: &rsyncdConf rsyncd.conf
            - mountPath: *logsDir
              name: "logs"
          {{- range $path, $_ := $scripts }}
            {{- $name := ($path | base) }}
            - mountPath: {{ printf "/scripts/%s" $name | quote }}
              name: *configMap
              subPath: &script {{ $name | quote }}
              readOnly: true
            - mountPath: {{ printf "/usr/local/bin/%s" $name | quote }}
              name: *configMap
              subPath: *script
              readOnly: true
          {{- end }}
          {{- range $pvc := $pvcs }}
            {{- $pvcName := $pvc.metadata.name }}
            - mountPath: {{ printf "/pvc/%s" $pvcName | quote }}
              name: {{ $pvcName | quote }}
          {{- end }}
      volumes:
        - name: *configMap
          configMap:
            name: *podName
            items:
              - key: *rsyncdConf
                path: *rsyncdConf
              {{- range $path, $_ := $scripts }}
                {{- $name := ($path | base) }}
              - key: {{ $name | quote }}
                path: {{ $name | quote }}
                mode: 0555
              {{- end }}
            defaultMode: 0640
            optional: false
        {{- include "arkcase.persistence.ephemeralVolume" (dict "ctx" $ "name" "logs") | nindent 8 }}
        {{- range $pvc := $pvcs }}
          {{- $pvcName := $pvc.metadata.name }}
        - name: &pvc {{ $pvcName | quote }}
          persistentVolumeClaim:
            claimName: *pvc
        {{- end }}
      restartPolicy: Always
---
{{- $service := (include "arkcase.subsystem.service" . | fromYaml) }}
{{- if and $externalDnsName $externalDnsAnnotation }}
  {{- $serviceMetadata := ($service.metadata | default dict) }}
  {{- $serviceAnnotations := ($serviceMetadata.annotations | default dict) }}

  {{- $serviceAnnotations = set $serviceAnnotations ($externalDnsAnnotation | toString) ($externalDnsName | toString) }}

  {{- $serviceMetadata = set $serviceMetadata "annotations" $serviceAnnotations }}
  {{- $service = set $service "metadata" $serviceMetadata }}
{{- end }}
{{- $service | toYaml | nindent 0 }}
