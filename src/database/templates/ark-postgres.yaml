{{- if (include "arkcase.rdbms.render" (dict "ctx" $ "name" "postgresql")) -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "arkcase.fullname" $ | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
    {{- with ($.Values.labels).common }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with ($.Values.annotations).common }}
  annotations: {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not ($.Values.autoscaling).enabled }}
  replicas: {{ $.Values.replicaCount | default 1 }}
  {{- end }}
  selector:
    matchLabels: {{- include "arkcase.labels.matchLabels" $ | nindent 6 }}
  serviceName: {{ include "arkcase.service.headless" $ | quote }}
  updateStrategy:
    type: {{ $.Values.updateStrategy }}
    {{- if (eq "Recreate" $.Values.updateStrategy) }}
    rollingUpdate: null
    {{- else if $.Values.rollingUpdatePartition }}
    rollingUpdate:
      partition: {{ $.Values.rollingUpdatePartition }}
    {{- end }}
  template:
    metadata:
      name: {{ include "arkcase.fullname" $ | quote }}
      namespace: {{ $.Release.Namespace | quote }}
      labels: {{- include "arkcase.labels" $ | nindent 8 }}
        {{- with ($.Values.labels).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        # NB: Both these annotation values must be of type "string"
        prometheus.io/scrape: "true"
        prometheus.io/port: "9100"
        timestamp: {{ date "20060102150405" now | quote }}
        {{- with ($.Values.annotations).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- include "arkcase.image.pullSecrets" $ | nindent 6 }}
      {{- with $.Values.hostAliases }}
      hostAliases: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.schedulerName }}
      schedulerName: {{ $.Values.schedulerName | quote }}
      {{- end }}
      serviceAccountName: {{ include "arkcase.serviceAccountName" $ | quote }}
      {{- with ($.Values.securityContext).template }}
      securityContext: {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: set-permissions
          {{- include "arkcase.image" (dict "ctx" $ "name" "setperm" "repository" "arkcase/setperm") | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            - name: JOBS
              value: |
                jobs:
                  # We know the image uses user 26
                  - ownership: "26:26"
                    permissions: "u=rwX,g=rX,o="
                    flags: [ "recurse", "noforced", "create", "changes" ]
                    targets: [ "/data" ]
          volumeMounts:
            - name: "data"
              mountPath: "/data"
        {{- include "arkcase.initDatabase.container" (dict "ctx" $ "db" "postgres" "volume" "init" "shell" true) | nindent 8 }}
        {{- include "arkcase.initDependencies.container" $ | nindent 8 }}
      containers:
        - name: postgres
          {{- with ($.Values.securityContext).postgres }}
          securityContext: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- include "arkcase.image" (dict "ctx" $ "name" "postgresql" "repository" "arkcase/postgres") | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            {{- include "arkcase.initDatabase.adminPassEnv" (dict "ctx" $ "var" "POSTGRESQL_ADMIN_PASSWORD") | nindent 12 }}
            {{- include "arkcase.acme.env" $ | nindent 12 }}
          {{- include "arkcase.rdbms.ports" $ | nindent 10 }}
          {{- if $.Values.command }}
          command: {{- $.Values.command | toYaml | nindent 12 }}
          {{- end }}
          resources: {{- include "arkcase.resources" $ | nindent 12 }}
          volumeMounts:
            {{- include "arkcase.acme.volumeMount" $ | nindent 12 }}
            - name: "init"
              mountPath: "/opt/app-root/src/postgresql-init"
            - name: "data"
              mountPath: "/var/lib/pgsql/data"
            - name: {{ include "arkcase.initDatabase.secretVolume.name" $ | quote }}
              mountPath: "/app/secrets"
              readOnly: true
      volumes:
        {{- include "arkcase.acme.volume" $ | nindent 8 }}
        {{- include "arkcase.initDatabase.secretVolume" $ | nindent 8 }}
        {{- include "arkcase.persistence.volume" (dict "ctx" $ "name" "init") | nindent 8 }}
        {{- include "arkcase.persistence.volume" (dict "ctx" $ "name" "data") | nindent 8 }}
      {{- with $.Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "init") | nindent 4 }}
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "data") | nindent 4 }}

  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "init") | nindent 0 }}
  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "data") | nindent 0 }}

{{- end }}
