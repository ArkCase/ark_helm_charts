{{- $secretName := (include "arkcase.acme.sharedSecret" $) -}}
{{- $passwordVariable := (include "arkcase.acme.passwordVariable" $) -}}

{{- $password := "" -}}
{{- if (include "arkcase.acme.external" $) -}}
  {{- $password = (include "arkcase.tools.conf" (dict "ctx" $ "value" "acme.password" "detailed" true) | fromYaml) -}}
  {{- if and $password $password.found $password.global $password.value -}}
    {{- $password = ($password.value | b64enc) -}}
  {{- else -}}
    {{- fail "The global.conf.acme.password value was not given, or is an empty string" -}}
  {{- end -}}
{{- else -}}
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace $secretName) | default dict -}}
  {{- $secretData := (get $secretObj "data") | default dict -}}
  {{- $password = (get $secretData $passwordVariable) | default (randAlphaNum 32 | b64enc) -}}
{{- end -}}

apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
    {{- with ($.Values.labels).common }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    # Make sure this secret survives the test of time
    helm.sh/resource-policy: "keep"
    timestamp: {{ date "20060102150405" now | quote }}
    {{- with ($.Values.annotations).common }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
type: Opaque
data:
  {{ $passwordVariable | quote }}: {{ $password | quote }}
