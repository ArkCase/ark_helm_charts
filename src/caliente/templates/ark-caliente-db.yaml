{{- $namespace := $.Release.Namespace -}}
{{- $app := $.Release.Name -}}
{{- $objectName := (include "arkcase.caliente.objectName" $) -}}
{{- $acmeInfo := (include "arkcase.caliente.acme" $ | fromYaml) -}}
{{- $dataVol := "data" -}}
---
apiVersion: v1
kind: Secret
metadata:
  name: &objectName {{ $objectName | quote }}
  namespace: {{ $namespace | quote }}
  labels:
    app: &app {{ $app | quote }}
    app.kubernetes.io/instance: *app
    app.kubernetes.io/name: *objectName
  annotations:
    helm.sh/resource-policy: keep
type: Opaque
stringData:
  endpoint: {{ $objectName | quote }}
  port: "5432"
  database: *app
  username: *app
  password: {{ randAlphaNum 64 | quote }}
  schema: ""
---
apiVersion: v1
kind: Service
metadata:
  name: &objectName {{ $objectName | quote }}
  namespace: {{ $namespace | quote }}
  labels: &labels
    app: &app {{ $app | quote }}
    app.kubernetes.io/instance: *app
    app.kubernetes.io/name: *objectName
spec:
  selector:
    <<: *labels
  ports:
    - name: postgresql
      port: 5432
      protocol: TCP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: &objectName {{ $objectName | quote }}
  namespace: {{ $namespace | quote }}
  labels: &labels
    app: &app {{ $app | quote }}
    app.kubernetes.io/instance: *app
    app.kubernetes.io/name: *objectName
    app.kubernetes.io/service-support: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      <<: *labels
  serviceName: *objectName
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9100"
        prometheus.io/scrape: "true"
      labels:
        <<: *labels
      name: *objectName
    spec:
      {{- include "arkcase.image.pullSecrets" $ | nindent 6 }}
      {{- with $.Values.hostAliases }}
      hostAliases: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.schedulerName }}
      schedulerName: {{ $.Values.schedulerName | quote }}
      {{- end }}
      serviceAccountName: {{ include "arkcase.serviceAccountName" $ | quote }}
      securityContext: {{- include "arkcase.securityContext" $ | nindent 8 }}
      terminationGracePeriodSeconds: 15
      initContainers:
        - name: init-set-permissions
          {{- include "arkcase.image" (dict "ctx" $ "name" "setperm" "repository" "arkcase/setperm") | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            - name: DATA_DIR
              value: &dataDir "/data"
            - name: JOBS
              value: |-
                jobs:
                  # We know the image uses user 26
                  - ownership: "26:26"
                    permissions: "u=rwX,g=rX,o="
                    flags: [ "recurse", "forced", "create", "changes" ]
                    targets: [ "$(DATA_DIR)" ]
          volumeMounts:
            - name: &dataVol {{ $dataVol | quote }}
              mountPath: *dataDir
        - name: init-dependencies
          {{- include "arkcase.image" (dict "ctx" $ "name" "nettest" "repository" "arkcase/nettest") | nindent 10 }}
          command: [ "/usr/local/bin/wait-for-ports" ]
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            {{- $acmeInfo.env | toYaml | nindent 12 }}
            - name: INIT_DEPENDENCIES
              value: |-
                dependencies:
                  acme:
                    url: '@env:ACME_URL'
                enabled: true
                mode: all
                template:
                  attempts: 60
                  delay: 10
                  initialDelay: 10
                  mode: any
                  timeout: 10
      containers:
        - name: postgres
          {{- include "arkcase.image" (dict "ctx" $ "name" "postgres" "repository" "arkcase/postgres") | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            {{- $acmeInfo.env | toYaml | nindent 12 }}
            - name: PGDATA
              value: /var/lib/pgsql/data/userdata
            - name: POSTGRESQL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: *objectName
                  optional: false
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database
                  name: *objectName
                  optional: false
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: *objectName
                  optional: false
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: *objectName
                  optional: false
          lifecycle:
            preStop:
              exec:
                command: [ "/usr/bin/pg_ctl", "stop" ]
          resources: {{- include "arkcase.resources" (dict "ctx" $ "part" "postgres") | nindent 12 }}
          securityContext: {{- include "arkcase.securityContext" (dict "ctx" $ "container" "postgres") | nindent 12 }}
          ports:
            - containerPort: 5432
              name: postgresql
              protocol: TCP
          livenessProbe: &probe
            failureThreshold: 1
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 10
          readinessProbe:
            <<: *probe
          startupProbe:
            <<: *probe
            failureThreshold: 90
          volumeMounts:
            {{- $acmeInfo.volumeMount | toYaml | nindent 12 }}
            - name: {{ $dataVol | quote }}
              mountPath: "/var/lib/pgsql/data"
            - name: &initVol "init"
              mountPath: "/opt/app-root/src/postgresql-init"
            - name: &bootVol "boot"
              mountPath: "/opt/app-root/src/postgresql-start"
      restartPolicy: Always
      volumes:
        {{- $acmeInfo.volume | toYaml | nindent 8 }}
        {{- include "arkcase.persistence.volume" (dict "ctx" $ "name" $dataVol) | nindent 8 }}
        - name: arkcase-ssl-trusts
          secret:
            secretName: arkcase-ssl-trusts
            defaultMode: 0444
            optional: true
        - name: *initVol
          emptyDir:
            medium: Memory
            sizeLimit: 1Mi
        - name: *bootVol
          emptyDir:
            medium: Memory
            sizeLimit: 1Mi
      {{- with $.Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" $dataVol) | nindent 4 }}

{{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" $dataVol) | nindent 0 }}
