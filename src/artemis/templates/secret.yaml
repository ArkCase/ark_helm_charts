{{- if and (include "arkcase.subsystem.enabled" $) (not (include "arkcase.subsystem.external" $)) }}
{{- $secretName := (include "arkcase.fullname" $) -}}
{{- $namespace := $.Release.Namespace -}}

{{- $adminPasswordName := "ADMIN_PASSWORD" -}}
{{- $encryptionPasswordName := "ENCRYPTION_PASSWORD" -}}
{{- $clusterPasswordName := "CLUSTER_PASSWORD" -}}

{{- $secretObj := (lookup "v1" "Secret" $namespace $secretName) -}}
{{- $secretData := (get $secretObj "data") | default dict -}}

{{- $adminPassword := "" -}}
{{- if (not $adminPassword) -}}
  {{- $adminPassword = (get $secretData $adminPasswordName) -}}
{{- end -}}
{{- if (not $adminPassword) -}}
  {{- $adminPassword = (include "arkcase.artemis.adminPassword" $) -}}
{{- end -}}

{{- $passwords :=
  dict
    $adminPasswordName $adminPassword
    $encryptionPasswordName (get $secretData $encryptionPasswordName | default "")
    $clusterPasswordName (get $secretData $clusterPasswordName | default (randAlphaNum 64))
-}}

apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName | quote }}
  namespace: {{ $namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
    {{- with ($.Values.labels).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    helm.sh/resource-policy: "keep"
    {{- with ($.Values.annotations).common }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
stringData:
  {{- $passwords | toYaml | nindent 2 }}

  #
  # Process static files
  #
  {{- range $path, $_ := ($.Files.Glob "files/secrets/txt/*") }}
  {{ $path | base }}: |{{- $.Files.Get $path | nindent 4 }}
  {{- end }}

  #
  # Process templated files
  #
  {{- range $path, $_ := ($.Files.Glob "files/secrets/tpl/*") }}
  {{ $path | base }}: |{{- tpl ($.Files.Get $path) $ | nindent 4 }}
  {{- end }}

data:
  #
  # Process binary files
  #
  {{- $bin := ($.Files.Glob "files/secrets/bin/*") }}
  {{- if $bin }}
    {{- ($.Files.Glob "files/secrets/bin/*").AsSecrets | nindent 2 }}
  {{- else }}
  #
  # No binary files found
  #
  {{- end }}

{{- end }}
