{{- if and (include "arkcase.subsystem.enabled" $) (not (include "arkcase.subsystem.external" $)) }}
{{- $fullname := (include "arkcase.fullname" $) -}}
{{- $cluster := (include "arkcase.cluster" $ | fromYaml) -}}
{{- $maxFailed := ( $cluster.enabled | ternary 1 0 ) -}}
{{- if (gt $maxFailed 0) }}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ include "arkcase.fullname" $ | quote }}
  namespace: {{ $.Release.Namespace | quote }}
spec:
  selector:
    matchLabels: {{- include "arkcase.labels.matchLabels" $ | nindent 6 }}
  maxUnavailable: {{ $maxFailed }}
---
{{- end }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullname | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels.service" $ | nindent 4 }}
    {{- with ($.Values.labels).common }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with ($.Values.annotations).common }}
  annotations: {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  # For this particular component we only support 2 nodes in a cluster - primary + backup
  replicas: {{ $cluster.enabled | ternary 2 1 }}
  selector: &labelSelector
    matchLabels: {{- include "arkcase.labels.matchLabels" $ | nindent 6 }}
  serviceName: {{ include "arkcase.service.headless" $ | quote }}
  updateStrategy:
    type: {{ $.Values.updateStrategy }}
    {{- if (eq "Recreate" $.Values.updateStrategy) }}
    rollingUpdate: null
    {{- else if $.Values.rollingUpdatePartition }}
    rollingUpdate:
      partition: {{ $.Values.rollingUpdatePartition }}
    {{- end }}
  podManagementPolicy: Parallel
  template:
    metadata:
      name: {{ $fullname | quote }}
      namespace: {{ $.Release.Namespace | quote }}
      labels: {{- include "arkcase.labels.service" $ | nindent 8 }}
        {{- with ($.Values.labels).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        # NB: Both these annotation values must be of type "string"
        prometheus.io/scrape: "true"
        prometheus.io/port: "9100"
        {{- with ($.Values.annotations).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      affinity:
        podAntiAffinity:
        {{- if $cluster.onePerHost }}
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              namespaces: [ {{ $.Release.Namespace | quote }} ]
              labelSelector:
                <<: *labelSelector
        {{- else }}
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                namespaces: [ {{ $.Release.Namespace | quote }} ]
                labelSelector:
                  <<: *labelSelector
        {{- end }}
      {{- include "arkcase.image.pullSecrets" $ | nindent 6 }}
      {{- with $.Values.hostAliases }}
      hostAliases: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.schedulerName }}
      schedulerName: {{ $.Values.schedulerName | quote }}
      {{- end }}
      serviceAccountName: {{ include "arkcase.serviceAccountName" $ | quote }}
      securityContext: {{- include "arkcase.securityContext" $ | nindent 8 }}
      initContainers:
        - name: init-set-permissions
          {{- include "arkcase.image" (dict "ctx" $ "name" "setperm" "repository" "arkcase/setperm") | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            - name: JOBS
              value: |
                jobs:
                  # We know the ActiveMQ image uses user 998 (centos), 1998 (rocky)
                  - ownership: {{ coalesce ($.Values.persistence).ownership "1998:1998" | quote }}
                    permissions: "u=rwX,g=rX,o="
                    flags: [ "recurse", "noforced", "create", "changes" ]
                    targets: [ "/app/conf", "/app/data", "/app/logs" ]
          volumeMounts:
            - name: &confVol "conf"
              mountPath: &confPath "/app/conf"
            - name: &dataVol "data"
              mountPath: &dataPath "/app/data"
            - name: &logsVol "logs"
              mountPath: &logsPath "/app/logs"
        {{- include "arkcase.initDependencies.container" $ | nindent 8 }}
      containers:
        - name: artemis
          {{- include "arkcase.image" $ | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            {{- include "arkcase.acme.env" $ | nindent 12 }}
            - name: ARTEMIS_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: &secretName {{ $fullname | quote }}
                  key: ADMIN_PASSWORD
            - name: ARTEMIS_CLUSTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: *secretName
                  key: CLUSTER_PASSWORD
            - name: ARTEMIS_ENCRYPTION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: *secretName
                  key: ENCRYPTION_PASSWORD
            - name: JAVA_MEM_ARGS
              value: "-Xms2g -Xmx2g"
          {{- include "arkcase.subsystem.ports" $ | nindent 10 }}
          {{- with (include "arkcase.values" (dict "ctx" $ "base" "command") | fromYaml) }}
          command: {{ toJson .value }}
          {{- end }}
          resources: {{- include "arkcase.resources" $ | nindent 12 }}
          securityContext: {{- include "arkcase.securityContext" (dict "ctx" $ "container" "artemis") | nindent 12 }}
          volumeMounts:
            {{- include "arkcase.acme.volumeMount" $ | nindent 12 }}
            - name: *confVol
              mountPath: *confPath
            - name: *dataVol
              mountPath: *dataPath
            - name: *logsVol
              mountPath: *logsPath
            - name: &secretFiles "secret-files"
              mountPath: "/app/conf/artemis-users.properties"
              subPath: &artemisUsersProperties "artemis-users.properties"
              readOnly: true
            - name: *secretFiles
              mountPath: "/app/conf/artemis-roles.properties"
              subPath: &artemisRolesProperties "artemis-roles.properties"
              readOnly: true
            - name: *secretFiles
              mountPath: "/app/conf/broker.xml.template"
              subPath: &brokerXmlTemplate "broker.xml.template"
              readOnly: true
            - name: &configMap "config-map"
              mountPath: "/app/conf/bootstrap.xml"
              subPath: &bootstrapXml "bootstrap.xml"
              readOnly: true
            - name: *configMap
              mountPath: "/check-health"
              subPath: &checkHealth "check-health"
              readOnly: true
            - name: *configMap
              mountPath: "/app/conf/jolokia-access.xml"
              subPath: &jolokiaAccessXml "jolokia-access.xml"
              readOnly: true
            - name: *configMap
              mountPath: "/app/conf/log4j2.properties"
              subPath: &log4j2Properties "log4j2.properties"
              readOnly: true
            - name: *configMap
              mountPath: "/app/conf/login.config"
              subPath: &loginConfig "login.config"
              readOnly: true
            - name: *configMap
              mountPath: "/app/conf/management.xml"
              subPath: &managementXml "management.xml"
              readOnly: true
      volumes:
        {{- include "arkcase.acme.volume" $ | nindent 8 }}
        {{- include "arkcase.persistence.volume" (dict "ctx" $ "name" "data") | nindent 8 }}
        - name: *secretFiles
          secret:
            optional: false
            secretName: {{ printf "%s-files" $fullname | quote }}
            defaultMode: 0644
            items:
              - key: *artemisUsersProperties
                path: *artemisUsersProperties
              - key: *artemisRolesProperties
                path: *artemisRolesProperties
              - key: *brokerXmlTemplate
                path: *brokerXmlTemplate
        - name: *configMap
          configMap:
            optional: false
            name: {{ $fullname | quote }}
            defaultMode: 0644
            items:
              - key: *bootstrapXml
                path: *bootstrapXml
              - key: *checkHealth
                path: *checkHealth
                mode: 0755
              - key: *jolokiaAccessXml
                path: *jolokiaAccessXml
              - key: *log4j2Properties
                path: *log4j2Properties
              - key: *loginConfig
                path: *loginConfig
              - key: *managementXml
                path: *managementXml
      {{- with $.Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "conf") | nindent 4 }}
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "data") | nindent 4 }}
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "logs") | nindent 4 }}

  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "conf") | nindent 0 }}
  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "data") | nindent 0 }}
  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "logs") | nindent 0 }}
{{- end }}
