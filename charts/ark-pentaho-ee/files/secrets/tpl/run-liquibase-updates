#!/bin/bash

set -euo pipefail

timestamp() {
	/usr/bin/date -Isec -u
}

say() {
	echo -e "$(timestamp): ${@}"
}

err() {
	say "ERROR: ${@}" 1>&2
}

fail() {
	say "${@}"
	exit ${EXIT_CODE:-1}
}

[ -v BASE_DIR ] || BASE_DIR="/app"

[ -v LB_DIR ] || LB_DIR="${BASE_DIR}/lb"
cd "${LB_DIR}"

[ -v LOGS_DIR ] || LOGS_DIR="${BASE_DIR}/logs"
if [ -d "${LOGS_DIR}" ] ; then
	LOG_FILE="${LOGS_DIR}/liquibase.stdout.log"
	exec > >(/usr/bin/tee -a "${LOG_FILE}")
	exec 2>&1
	say "Logs redirected to [${LOG_FILE}]"
fi

{{-
$targets := (
  dict
    "create_quartz" "quartz"
    "pentaho_mart" "hibernate"
)
}}

# We do it like this so we don't enter it multiple times
export LIQUIBASE_COMMAND_DRIVER={{ include "arkcase.db.jdbc.driver" . | quote }}
[ -n "${LIQUIBASE_COMMAND_DRIVER}" ] || fail "No JDBC driver given, cannot continue"

# TODO: fetch the required passwords using more secure means ...
{{- range $changeLog, $db := $targets }}
say "Running changelog {{ $changeLog }} ..."
./liquibase update \
	--changelog-file={{ printf "changelog.%s.xml" $changeLog | quote }} \
	--url={{ include "arkcase.db.jdbc.url" (dict "ctx" $ "target" $db) | quote }} \
	--username={{ include "arkcase.db.jdbc.username" (dict "ctx" $ "target" $db) | quote }} \
	--password={{ include "arkcase.db.jdbc.password" (dict "ctx" $ "target" $db) | quote }}

{{- end }}
say "Changelogs complete."
