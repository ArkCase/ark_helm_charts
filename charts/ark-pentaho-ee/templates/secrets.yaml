{{- if (include "arkcase.subsystem.enabled" .) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "common.fullname" . | quote }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels" . | nindent 4 }}
    {{- with (.Values.labels).common }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    timestamp: {{ date "20060102150405" now | quote }}
    {{- with (.Values.annotations).common }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
type: Opaque
stringData: {{- (.Files.Glob "files/secrets/txt/*").AsConfig | nindent 2 }}

  adminUsername: {{ ((.Values.configuration).arkcase).adminUsername | default "admin" | quote }}
  adminPassword: {{ ((.Values.configuration).arkcase).adminPassword | default "password" | quote }}

  #
  # Add items that require template processing
  #
  dbconfig.json: |
    {
      "db"   : {{- (.Values.configuration).db   | mustToPrettyJson | nindent 8 }},
      "jdbc" : {{- (.Values.configuration).jdbc | mustToPrettyJson | nindent 8 }}
    }

  context.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <Context path="/pentaho" docbase="webapps/pentaho/">
      <Resource name="jdbc/acm3DataSource" auth="Container" type="javax.sql.DataSource"
                factory="org.pentaho.di.core.database.util.DecryptingDataSourceFactory"
                driverClassName="{{ include "arkcase.pentaho.jdbc.driver" . }}"
                initialSize="0"
                maxActive="20"
                maxIdle="5"
                maxWait="10000"
                minIdle="0"
                password="{{ include "arkcase.pentaho.jdbc.password" (dict "ctx" . "target" "acm3") }}"
                testOnBorrow="true"
                url="{{ include "arkcase.pentaho.jdbc.url" (dict "ctx" . "target" "acm3") }}"
                username="{{ include "arkcase.pentaho.jdbc.username" (dict "ctx" . "target" "acm3") }}"
                validationQuery="select 1"
                />
    
      <Resource name="jdbc/Hibernate" auth="Container" type="javax.sql.DataSource"
                factory="org.pentaho.di.core.database.util.DecryptingDataSourceFactory"
                defaultAutoCommit="true"
                driverClassName="{{ include "arkcase.pentaho.jdbc.driver" . }}"
                initialSize="0"
                jdbcInterceptors="ConnectionState"
                maxActive="20"
                maxIdle="5"
                maxWait="10000"
                minIdle="0"
                password="{{ include "arkcase.pentaho.jdbc.password" (dict "ctx" . "target" "hibernate") }}"
                testOnBorrow="true"
                url="{{ include "arkcase.pentaho.jdbc.url" (dict "ctx" . "target" "hibernate") }}"
                username="{{ include "arkcase.pentaho.jdbc.username" (dict "ctx" . "target" "hibernate") }}"
                validationQuery="select 1"
                />
    
      <Resource name="jdbc/Audit" auth="Container" type="javax.sql.DataSource"
                factory="org.pentaho.di.core.database.util.DecryptingDataSourceFactory"
                driverClassName="{{ include "arkcase.pentaho.jdbc.driver" . }}"
                initialSize="0"
                maxActive="20"
                maxIdle="5"
                maxWait="10000"
                minIdle="0"
                password="{{ include "arkcase.pentaho.jdbc.password" (dict "ctx" . "target" "audit") }}"
                testOnBorrow="true"
                url="{{ include "arkcase.pentaho.jdbc.url" (dict "ctx" . "target" "audit") }}"
                username="{{ include "arkcase.pentaho.jdbc.username" (dict "ctx" . "target" "audit") }}"
                validationQuery="select 1"
                />
    
      <Resource name="jdbc/Quartz" auth="Container" type="javax.sql.DataSource"
                factory="org.pentaho.di.core.database.util.DecryptingDataSourceFactory"
                driverClassName="{{ include "arkcase.pentaho.jdbc.driver" . }}"
                initialSize="0"
                maxActive="20"
                maxIdle="5"
                maxWait="10000"
                minIdle="0"
                password="{{ include "arkcase.pentaho.jdbc.password" (dict "ctx" . "target" "quartz") }}"
                testOnBorrow="true"
                url="{{ include "arkcase.pentaho.jdbc.url" (dict "ctx" . "target" "quartz") }}"
                username="{{ include "arkcase.pentaho.jdbc.username" (dict "ctx" . "target" "quartz") }}"
                validationQuery="select 1"
                />
    
      <Resource name="jdbc/PDI_Operations_Mart" auth="Container" type="javax.sql.DataSource"
                factory="org.pentaho.di.core.database.util.DecryptingDataSourceFactory"
                driverClassName="{{ include "arkcase.pentaho.jdbc.driver" . }}"
                initialSize="0"
                maxActive="20"
                maxIdle="5"
                maxWait="10000"
                minIdle="0"
                password="{{ include "arkcase.pentaho.jdbc.password" (dict "ctx" . "target" "pdiOperationsMart") }}"
                testOnBorrow="true"
                url="{{ include "arkcase.pentaho.jdbc.url" (dict "ctx" . "target" "pdiOperationsMart") }}"
                username="{{ include "arkcase.pentaho.jdbc.username" (dict "ctx" . "target" "pdiOperationsMart") }}"
                validationQuery="select 1"
                />
    
      <Resource name="jdbc/pentaho_operations_mart" auth="Container" type="javax.sql.DataSource"
                factory="org.pentaho.di.core.database.util.DecryptingDataSourceFactory"
                driverClassName="{{ include "arkcase.pentaho.jdbc.driver" . }}"
                initialSize="0"
                maxActive="20"
                maxIdle="5"
                maxWait="10000"
                minIdle="0"
                password="{{ include "arkcase.pentaho.jdbc.password" (dict "ctx" . "target" "pentahoOperationsMart") }}"
                testOnBorrow="true"
                url="{{ include "arkcase.pentaho.jdbc.url" (dict "ctx" . "target" "pentahoOperationsMart") }}"
                username="{{ include "arkcase.pentaho.jdbc.username" (dict "ctx" . "target" "pentahoOperationsMart") }}"
                validationQuery="select 1"
                />
    
      <Resource name="jdbc/live_logging_info" auth="Container" type="javax.sql.DataSource"
                factory="org.pentaho.di.core.database.util.DecryptingDataSourceFactory"
                driverClassName="{{ include "arkcase.pentaho.jdbc.driver" . }}"
                initialSize="0"
                maxActive="20"
                maxIdle="5"
                maxWait="10000"
                minIdle="0"
                password="{{ include "arkcase.pentaho.jdbc.password" (dict "ctx" . "target" "liveLogging") }}"
                testOnBorrow="true"
                url="{{ include "arkcase.pentaho.jdbc.url" (dict "ctx" . "target" "liveLogging") }}?searchpath=pentaho_dilogs"
                username="{{ include "arkcase.pentaho.jdbc.username" (dict "ctx" . "target" "liveLogging") }}"
                validationQuery="select 1"
                />
    
      <Resource name="jdbc/jackrabbit" auth="Container" type="javax.sql.DataSource"
                factory="org.pentaho.di.core.database.util.DecryptingDataSourceFactory"
                driverClassName="{{ include "arkcase.pentaho.jdbc.driver" . }}"
                initialSize="0"
                maxActive="20"
                maxIdle="5"
                maxWait="10000"
                minIdle="0"
                password="{{ include "arkcase.pentaho.jdbc.password" (dict "ctx" . "target" "jackrabbit") }}"
                testOnBorrow="true"
                url="{{ include "arkcase.pentaho.jdbc.url" (dict "ctx" . "target" "jackrabbit") }}"
                username="{{ include "arkcase.pentaho.jdbc.username" (dict "ctx" . "target" "jackrabbit") }}"
                validationQuery="select 1"
                />
    </Context>

  repository.xml: |
    <?xml version="1.0"?>
    <!DOCTYPE Repository
        PUBLIC "-//The Apache Software Foundation//DTD Jackrabbit 2.0//EN"
        "http://org.apache.jackrabbit.core.data.db.DbDataStore">
    <Repository>
      {{- include "arkcase.pentaho.jcr.fileSystem" (dict "ctx" . "prefix" "fs_repos_") | nindent 6 }}
    
      {{- include "arkcase.pentaho.jcr.dataStore" (dict "ctx" . "prefix" "ds_repos_") | nindent 6 }}
    
      <Security appName="Jackrabbit">
        <SecurityManager class="org.apache.jackrabbit.core.DefaultSecurityManager" workspaceName="security"/>
    
        <AccessManager class="org.apache.jackrabbit.core.security.DefaultAccessManager"/>
    
        <LoginModule class="org.pentaho.platform.repository2.unified.jcr.jackrabbit.security.SpringSecurityLoginModule">
          <param name="anonymousId" value="anonymous"/>
          <param name="adminId" value="pentahoRepoAdmin"/>
    
          <param name="principalProvider"
                 value="org.pentaho.platform.repository2.unified.jcr.jackrabbit.security.SpringSecurityPrincipalProvider"/>
          <param name="preAuthenticationTokens" value="ZchBOvP8q9FQ"/>
          <param name="trust_credentials_attribute" value="pre_authentication_token"/>
        </LoginModule>
      </Security>
    
      <Workspace name="${wsp.name}">
        {{- include "arkcase.pentaho.jcr.fileSystem" (dict "ctx" . "prefix" "fs_ws_") | nindent 8 }}
    
        {{- include "arkcase.pentaho.jcr.persistenceManager" (dict "ctx" . "prefix" "${wsp.name}_pm_ws_") | nindent 8 }}
    
        <SearchIndex class="org.apache.jackrabbit.core.query.lucene.SearchIndex">
          <param name="path" value="${wsp.home}/index"/>
          <param name="supportHighlighting" value="true"/>
        </SearchIndex>
    
        <WorkspaceSecurity>
          <AccessControlProvider class="org.apache.jackrabbit.core.security.authorization.acl.PentahoACLProvider"/>
        </WorkspaceSecurity>
      </Workspace>
    
      <Versioning rootPath="${rep.home}/version">
        {{- include "arkcase.pentaho.jcr.fileSystem" (dict "ctx" . "prefix" "fs_ver_") | nindent 8 }}
    
        {{- include "arkcase.pentaho.jcr.persistenceManager" (dict "ctx" . "prefix" "pm_ver_") | nindent 8 }}
      </Versioning>
    
      <Cluster id="node1">
        <Journal class="org.apache.jackrabbit.core.journal.MemoryJournal"/>
      </Cluster>
    </Repository>

  # TODO: Populate these from .Values, or from inherited .Values crap (maybe even templates?)
  applicationContext-security-ldap.properties: |
    adminUser=CN=450.arkcase-admin,OU=Dev, OU=Users,OU=ArkCase Techlogix,OU=Clients,DC=appdev,DC=armedia,DC=com
    adminRole=CN=450.ARKCASE_ADMINISTRATOR,OU=Dev, OU=Groups,OU=ArkCase Techlogix,OU=Clients,DC=appdev,DC=armedia,DC=com
    providerType=ldapCustomConfiguration

    contextSource.providerUrl=ldaps://ldap.appdev.armedia.com:636
    contextSource.userDn=CN=svc.ark.tlx.ldap,OU=Service,OU=ArkCase Techlogix,OU=Clients,DC=appdev,DC=armedia,DC=com
    contextSource.password=x9eBLMITdUQfeacKzpbn

    userSearch.searchBase=OU=Dev, OU=Users,OU=ArkCase Techlogix,OU=Clients,DC=appdev,DC=armedia,DC=com
    userSearch.searchFilter=(sAMAccountName={0})

    allAuthoritiesSearch.searchBase=OU=Dev, OU=Groups,OU=ArkCase Techlogix,OU=Clients,DC=appdev,DC=armedia,DC=com
    allAuthoritiesSearch.roleAttribute=cn
    allAuthoritiesSearch.searchFilter=(objectClass=group)

    allUsernamesSearch.searchBase=OU=Dev, OU=Users,OU=ArkCase Techlogix,OU=Clients,DC=appdev,DC=armedia,DC=com
    allUsernamesSearch.usernameAttribute=sAMAccountName
    allUsernamesSearch.searchFilter=(objectClass=user)

    populator.groupSearchBase=OU=Dev, OU=Groups,OU=ArkCase Techlogix,OU=Clients,DC=appdev,DC=armedia,DC=com
    populator.convertToUpperCase=false
    populator.groupRoleAttribute=cn
    populator.groupSearchFilter=(member={0})
    populator.rolePrefix=
    populator.searchSubtree=true

data: {{- (.Files.Glob "files/secrets/bin/*").AsSecrets | nindent 2 }}

{{- end }}
