{{- if (include "arkcase.subsystem.enabled" .) }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "common.fullname" . | quote }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels" . | nindent 4 }}
    {{- with .Values.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.annotations }}
  annotations: {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not (.Values.autoscaling).enabled }}
  replicas: {{ .Values.replicaCount | default 1 }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
  serviceName: {{ include "common.fullname" . | quote }}
  updateStrategy:
    type: {{ .Values.updateStrategy }}
    {{- if (eq "Recreate" .Values.updateStrategy) }}
    rollingUpdate: null
    {{- else if .Values.rollingUpdatePartition }}
    rollingUpdate:
      partition: {{ .Values.rollingUpdatePartition }}
    {{- end }}
  template:
    metadata:
      name: {{ include "common.name" . | quote }}
      namespace: {{ .Release.Namespace | quote }}
      labels: {{- include "common.labels" . | nindent 8 }}
        {{- with .Values.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        # NB: Both these annotation values must be of type "string"
        prometheus.io/scrape: "true"
        prometheus.io/port: "9100"
        timestamp: {{ date "20060102150405" now | quote }}
        {{- with .Values.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.hostAliases }}
      hostAliases: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName | quote }}
      {{- end }}
      serviceAccountName: {{ include "common.serviceAccountName" . }}
      {{- with (.Values.securityContext).template }}
      securityContext: {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        # - name: arkcase-extension
        #   image: alpine/git
        #   volumeMounts:
        #     - name: persistent-data
        #       mountPath: /data
        #   command:
        #     - git
        #     - clone 
        #     - https://github.com/ArkCase/.arkcase.git
        #     -  /data
        - name: arkcase-extension
          image: amazon/aws-cli
          volumeMounts:
            - name: persistent-data
              mountPath: /data
          command:
            - aws
            - s3 
            - sync
            # TODO: This needs to be configurable
            # TODO: How is the AWS access/auth/authz configured?
            - "s3://arkcase-config/latest/"
            - "/data"
        # - name: config-checkout
        #   image: bitnami/git
        #   volumeMounts:
        #     - name: persistent-data
        #       mountPath: /data/.arkcase
        #   command: ["/bin/sh","-c"]
        #   args: ["cd /data/.arkcase && git checkout main"]
      containers:
        - name: cloudconfig
          securityContext: {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ include "arkcase.tools.image" . | quote }}
          imagePullPolicy: {{ include "arkcase.tools.imagePullPolicy" . | quote }}
          env: {{- include "arkcase.tools.baseEnv" . | nindent 12}}
            - name: ark_extension_path
              value: "/data/.arkcase"
          envFrom:
            - secretRef:
                name: {{ include "common.fullname" . | quote }}
          {{- include "arkcase.subsystem.ports" . | nindent 10 }}
          {{- if .Values.command }}
          command: {{- .Values.command | toYaml | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: application-config
              mountPath: "/app/application.yml"
              subPath: application.yml
              readOnly: true
            - name: persistent-data
              mountPath: "/data/.arkcase"
            - name: server-config
              mountPath: "/data/.arkcase/acm/acm-config-server-repo/arkcase-server.yaml"
              subPath: arkcase-server.yaml
      volumes:
        - name: application-config
          configMap:
            name: {{ include "ark-cloudconfig.fullname" . }}
            items:
              - key: application.yml
                path: application.yml
        - name: server-config
          configMap:
            name: arkcase-server-config
            items:
              - key: arkcase-server.yaml
                path: arkcase-server.yaml
            defaultMode: 0777
        - name: persistent-data
          persistentVolumeClaim:
            claimName: {{ .Values.global.arkcaseExtension.persistence.claimName }}
{{- end }}
