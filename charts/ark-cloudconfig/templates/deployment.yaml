apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ark-cloudconfig.fullname" . }}
  labels:
    {{- include "ark-cloudconfig.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "ark-cloudconfig.selectorLabels" . | nindent 6 }}
  template:
    metadata:
     labels:
        {{- include "ark-cloudconfig.selectorLabels" . | nindent 8 }}
     annotations:
        timestamp: "{{ date "20060102150405" .Release.Time }}"
    spec:
      hostAliases: 
      - ip: "3.108.193.246"
        hostnames:
        - "arkcase-ce.local"  
      serviceAccountName: "s3-sa" #Name of the SA we â€˜re using
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        # - name: arkcase-extension
        #   image: alpine/git
        #   volumeMounts:
        #     - name: persistent-data
        #       mountPath: /data
        #   command:
        #     - git
        #     - clone 
        #     - https://github.com/ArkCase/.arkcase.git
        #     -  /data
        - name: arkcase-extension
          image: amazon/aws-cli
          volumeMounts:
            - name: persistent-data
              mountPath: /data
          command:
            - aws
            - s3 
            - sync
            - "s3://arkcase-config/latest/"
            - "/data"
        # - name: config-checkout
        #   image: bitnami/git
        #   volumeMounts:
        #     - name: persistent-data
        #       mountPath: /data/.arkcase
        #   command: ["/bin/sh","-c"]
        #   args: ["cd /data/.arkcase && git checkout main"]
      containers:
        - name: {{ include "ark-cloudconfig.fullname" . | quote}}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          ports:
          - containerPort: {{ .Values.port }}
            name: http
            protocol: TCP
          # {{- if .Values.livenessProbe.enabled }}
          # livenessProbe:
          #   httpGet:
          #     path: {{ .Values.livenessProbe.path }}
          #     port: {{ .Values.port }}
          #   initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          #   periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          #   timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          #   successThreshold: {{ .Values.livenessProbe.successThreshold }}
          #   failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          # {{- end }}
          env:
          - name: ark_extension_path
            value: "/data/.arkcase"
          envFrom:
            - secretRef:
                name: {{ include "ark-cloudconfig.fullname" . }}-secrets
          volumeMounts:
            - name: application-config
              mountPath: "/app/application.yml"
              subPath: application.yml
              readOnly: true
            - name: persistent-data
              mountPath: "/data/.arkcase"
            - name: server-config
              mountPath: "/data/.arkcase/acm/acm-config-server-repo/arkcase-server.yaml"
              subPath: arkcase-server.yaml
      volumes:
        - name: application-config
          configMap:
            name: {{ include "ark-cloudconfig.fullname" . }}
            items:
              - key: application.yml
                path: application.yml
        - name: server-config
          configMap:
            name: arkcase-server-config
            items:
              - key: arkcase-server.yaml
                path: arkcase-server.yaml
            defaultMode: 0777
        - name: persistent-data
          persistentVolumeClaim:
            claimName: {{ .Values.global.arkcaseExtension.persistence.claimName }}

      