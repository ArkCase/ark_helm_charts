# Default values for ark-cloudconfig.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This can be set to "false" by parent charts. If not defined, it will be taken as true
#enabled: true

#
# This should group all application-specific configurations
#
configuration:

initDependencies:
  enabled: false
  mode: all
  template:
    mode: any
    initialDelay: 10
    delay: 5
    attempts: 12
  dependencies:
    messaging:
      ports:
        - 61616

# Please leave the `replicaCount` to 1 for the time being. Clustering is not
# supported yet.
replicaCount: 1

platform: ""
image:
  registry: "345280441424.dkr.ecr.ap-south-1.amazonaws.com"
  repository: "ark_cloudconfig"
  # Overrides the image tag whose default is the chart appVersion.
  tag: "2021.03.11"
  # If required, for tweaking setperm
  # setperm:
  #   registry: "alternate-registry"
  #   repository: "alternate-image"
  #   tag: "alternate-tag"
  pullPolicy: IfNotPresent

imagePullSecrets:
  - name: aws-arkcase-pull

# You generally shouldn't mess with these. These exist to support some name-generation templates
nameOverride: ""
fullnameOverride: ""

# Custom annotations to apply throughout
annotations:

# Custom labels to apply throughout
labels:

updateStrategy: RollingUpdate
rollingUpdatePartition: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations:
  # Annotations to add to the service account
  labels:
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

securityContext:
  template:
    # You must specify an `fsGroup` to allow ActiveMQ write access to mounted
    # volumes (as long as ActiveMQ runs as a non-root user, which should be the
    # case). Any random number will do.
    fsGroup: &fsGroup 1997
    fsGroupChangePolicy: OnRootMismatch
  cloudconfig:
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: &runAsUser 1997
    runAsGroup: *fsGroup
resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 1
  #   memory: 1Gi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

#autoscaling:
  #enabled: false
  #minReplicas: 1
  #maxReplicas: 100
  #targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector:

tolerations:

affinity:

# Can only include at most one of claim: or data:, not both. Can include none,
# but this will result in a "default" volume being created
persistence:
  enabled: true

# Use this when not using other persistent volumes, to point to the root location
# where the directories need to be created
  localPath: "/opt/app/arkcase"

#
# There is 1 volumes supported: data
#
  data:
# Use this instance of localPath when you want a specific directory for this volume
    # localPath: "/opt/app/arkcase/config"
# The "volume" should match the contents of PersistenceVolume.spec
#    volume:
#      storageClassName: "manual"
#      persistentVolumeReclaimPolicy: Retain
#      accessModes:
#        - "ReadWriteOnce"
#      capacity:
#        storage: "10Gi"
#      hostPath:
#        path: /tmp/samba/data
#
    claim:
# "name" is the name of an existing volume claim to be re-used, can't be used if "claim" is present
#      name: "name-of-the-claim-to-consume"
# "spec" should match the contents of PersistenceVolumeClaim.spec, can't be used if "name" is present
#      spec: 
#        storageClassName: ""
#        volumeName: the-volume-to-claim
#        accessModes:
#          - "ReadWriteOnce"
#        resources:
#          limits: ""
#          requests: ""
#        selector:
#          matchExpressions:
#            - values:
#                - ""
#                - ""
#                - ""
#                ...
#              operator: "In"|"NotIn"|"Exists"|"DoesNotExist"
#              key: "labelKey"
#            - values:
#                - ""
#                - ""
#                - ""
#                ...
#              operator: "In"|"NotIn"|"Exists"|"DoesNotExist"
#              key: "labelKey"
#          matchLabels: "....."

service:
  #external: "192.168.3.54"
  ports:
    - name: http
      protocol: TCP
      port: &servicePort 9999

##
## Configure extra options for containers' liveness and readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
## @param service.probes.enabled Enable liveness and readiness probes
## @param service.probes.spec.initialDelaySeconds Initial delay seconds for liveness and readiness probes
## @param service.probes.spec.periodSeconds Period seconds for liveness and readiness probes
## @param service.probes.spec.timeoutSeconds Timeout seconds for liveness and readiness probes
## @param service.probes.spec.failureThreshold Failure threshold for liveness and readiness probes
## @param service.probes.spec.successThreshold Success threshold for liveness and readiness probes
##
  probes:
    enabled: true
    spec:
      httpGet:
        path: "/actuator/health"
        port: *servicePort
      initialDelaySeconds: 10
      periodSeconds: 5
      timeoutSeconds: 5
      failureThreshold: 12
      successThreshold: 1
