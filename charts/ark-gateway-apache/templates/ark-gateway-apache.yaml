{{- if (include "arkcase.subsystem.enabled" .) }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: &commonFullName {{ include "arkcase.fullname" . | quote }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" . | nindent 4 }}
    {{- with (.Values.labels).common }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with (.Values.annotations).common }}
  annotations: {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not (.Values.autoscaling).enabled }}
  replicas: {{ .Values.replicaCount | default 1 }}
  {{- end }}
  selector:
    matchLabels: {{- include "arkcase.labels.matchLabels" . | nindent 6 }}
  serviceName: {{ include "arkcase.fullname" . | quote }}
  updateStrategy:
    type: {{ .Values.updateStrategy }}
    {{- if (eq "Recreate" .Values.updateStrategy) }}
    rollingUpdate: null
    {{- else if .Values.rollingUpdatePartition }}
    rollingUpdate:
      partition: {{ .Values.rollingUpdatePartition }}
    {{- end }}
  template:
    metadata:
      name: {{ include "common.name" . | quote }}
      namespace: {{ .Release.Namespace | quote }}
      labels: {{- include "arkcase.labels" . | nindent 8 }}
        {{- with (.Values.labels).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        # NB: Both these annotation values must be of type "string"
        prometheus.io/scrape: "true"
        prometheus.io/port: "9100"
        {{- with (.Values.annotations).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.hostAliases }}
      hostAliases: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName | quote }}
      {{- end }}
      serviceAccountName: {{ include "common.serviceAccountName" . }}
      {{- with (.Values.securityContext).template }}
      securityContext: {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        {{- include "arkcase.initDependencies.container" . | nindent 8 }}
      containers:
        - name: apache
          {{- with (.Values.securityContext).apache }}
          securityContext: {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ include "arkcase.tools.image" . | quote }}
          imagePullPolicy: {{ include "arkcase.tools.imagePullPolicy" . | quote }}
          env: {{- include "arkcase.tools.baseEnv" . | nindent 12 }}
          {{- include "arkcase.subsystem.ports" . | nindent 10 }}
          {{- if .Values.command }}
          command: {{- .Values.command | toYaml | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if (.Values.configuration).customDocumentRoot }}
            - name: "www"
              mountPath: "/var/www"
            {{- end }}
            - name: "logs"
              mountPath: "/var/log/apache2"
            - name: "modules"
              mountPath: "/modules"
            - name: "conf"
              mountPath: "/conf"
            - name: "config-yaml"
              mountPath: "/conf/config.yaml"
              subPath: &configYaml "config.yaml"
              readOnly: true
            {{- with (.Values.configuration).ssl }}
            {{- if and .cert .key }}
            - name: "ssl-crt-pem"
              mountPath: "/conf/crt.pem"
              subPath: &crtPem "crt.pem"
              readOnly: true
            - name: "ssl-key-pem"
              mountPath: "/conf/key.pem"
              subPath: &keyPem "key.pem"
              readOnly: true
            {{- end }}
            {{- if .ca }}
            - name: "ssl-ca-pem"
              mountPath: "/conf/ca.pem"
              subPath: &caPem "ca.pem"
              readOnly: true
            {{- end }}
            {{- end }}
      volumes:
        {{- if (.Values.configuration).customDocumentRoot }}
        {{- include "arkcase.persistence.volume" (dict "name" "www" "ctx" $) | nindent 8 }}
        {{- end }}
        {{- include "arkcase.persistence.volume" (dict "name" "logs" "ctx" $) | nindent 8 }}
        {{- include "arkcase.persistence.volume" (dict "name" "modules" "ctx" $) | nindent 8 }}
        {{- include "arkcase.persistence.volume" (dict "name" "conf" "ctx" $) | nindent 8 }}
        - name: "config-yaml"
          configMap:
            name: *commonFullName
            items:
              - key: *configYaml
                path: *configYaml
        {{- with (.Values.configuration).ssl }}
        {{- if and .cert .key }}
        - name: "ssl-crt-pem"
          secret:
            secretName: *commonFullName
            items:
              - key: "crt.pem"
                path: *crtPem
        - name: "ssl-key-pem"
          secret:
            secretName: *commonFullName
            items:
              - key: "key.pem"
                path: *keyPem
        {{- end }}
        {{- if .ca }}
        - name: "ssl-ca-pem"
          secret:
            secretName: *commonFullName
            items:
              - key: "ca.pem"
                path: *caPem
        {{- end }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}

{{- if (include "arkcase.persistence.enabled" .) }}
{{- if (.Values.configuration).customDocumentRoot }}
{{ include "arkcase.persistence.declareObjects" (dict "ctx" $ "name" "www") | indent 0 }}
{{- end }}
{{ include "arkcase.persistence.declareObjects" (dict "ctx" $ "name" "logs") | indent 0 }}
{{ include "arkcase.persistence.declareObjects" (dict "ctx" $ "name" "modules") | indent 0 }}
{{ include "arkcase.persistence.declareObjects" (dict "ctx" $ "name" "conf") | indent 0 }}
{{- end }}

{{- end }}
