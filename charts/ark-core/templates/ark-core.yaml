{{- if (include "arkcase.subsystem.enabled" $) }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "arkcase.fullname" $ | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "arkcase.labels" $ | nindent 4 }}
    {{- with ($.Values.labels).common }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with ($.Values.annotations).common }}
  annotations: {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not ($.Values.autoscaling).enabled }}
  replicas: {{ $.Values.replicaCount | default 1 }}
  {{- end }}
  selector:
    matchLabels: {{- include "arkcase.labels.matchLabels" $ | nindent 6 }}
  serviceName: {{ include "arkcase.name" $ | quote }}
  updateStrategy:
    type: {{ $.Values.updateStrategy }}
    {{- if (eq "Recreate" $.Values.updateStrategy) }}
    rollingUpdate: null
    {{- else if $.Values.rollingUpdatePartition }}
    rollingUpdate:
      partition: {{ $.Values.rollingUpdatePartition }}
    {{- end }}
  template:
    metadata:
      name: {{ include "arkcase.fullname" $ | quote }}
      namespace: {{ $.Release.Namespace | quote }}
      labels: {{- include "arkcase.labels" $ | nindent 8 }}
        {{- with ($.Values.labels).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        # NB: Both these annotation values must be of type "string"
        prometheus.io/scrape: "true"
        prometheus.io/port: "9100"
        timestamp: {{ date "20060102150405" now | quote }}
        {{- with ($.Values.annotations).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- include "arkcase.image.pullSecrets" $ | nindent 6 }}
      {{- with $.Values.hostAliases }}
      hostAliases: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.schedulerName }}
      schedulerName: {{ $.Values.schedulerName | quote }}
      {{- end }}
      serviceAccountName: {{ include "common.serviceAccountName" $ }}
      {{- with ($.Values.securityContext).template }}
      securityContext: {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: initialize-configuration
          {{- include "arkcase.image" . | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            - name: REALM_FIX
              value: {{ printf "arkcase.org=%s" (($.Values.configuration).ldap).domain | quote }}
          volumeMounts:
            - name: "conf"
              mountPath: "/app/conf"
            - name: "war"
              mountPath: "/app/war"
        - name: set-permissions
          {{- include "arkcase.image" (dict "ctx" $ "name" "setperm" "repository" "arkcase/setperm") | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            - name: JOBS
              value: |
                jobs:
                  # We know the Cloudconfig image uses user 997i (centos) , 1997 (rocky)
                  # TODO: Make this autodetected via the securityContext
                  - ownership: "1997:1997"
                    permissions: "u=rwX,g=rX,o="
                    flags: [ "recurse", "noforced", "create", "changes" ]
                    targets: [ "/app/home", "/app/conf", "/app/war", "/app/logs" ]
          volumeMounts:
            - name: &initVolume "home"
              mountPath: &initDir "/app/init"
            - name: &homeVolume "home"
              mountPath: &homeDir "/app/home"
            - name: &confVolume "conf"
              mountPath: &confDir "/app/conf"
            - name: &warVolume "war"
              mountPath: &warDir "/app/war"
            - name: &logsVolume "logs"
              mountPath: &logsDir "/app/logs"
        {{- include "arkcase.initDependencies.container" (dict "ctx" $ "name" "init-dependencies") | nindent 8 }}
      containers:
        - name: arkcase
          {{- with ($.Values.securityContext).arkcase }}
          securityContext: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- include "arkcase.image" (dict "ctx" $ "name" "arkcase" "repository" "arkcase/core") | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            - name: INIT_DIR
              value: *initDir
            - name: HOME_DIR
              value: *homeDir
            - name: CONF_DIR
              value: *confDir
            - name: LOGS_DIR
              value: *logsDir
            {{- with (($.Values.configuration).arkcase).env }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
            - name: LD_LIBRARY_PATH
              value: "/app/home/.arkcase/libraries"
            - name: CATALINA_OPTS
              # For Java 8, these percentages must be given as doubles. The JVM may
              # choke if the ".0" isn't provided at the end
              value: >-
                -XX:MinRAMPercentage=50.0
                -XX:MaxRAMPercentage=80.0
                -Dacm.configurationserver.propertyfile=/app/home/.arkcase/acm/conf.yml
                -Dconfiguration.client.spring.path=spring
                -Dspring.profiles.active=ldap
                -Duser.home=/app/home
              {{- if ($.Values.debug).enabled }}
                {{- $debugSuspend := "n" }}
                {{- if ($.Values.debug).suspend }}
                  {{- $debugSuspend = "y" }}
                {{- end }}
                {{- $debugPort := 8888 }}
                {{- if ($.Values.debug).port }}
                  {{- $debugPort = (($.Values.debug).port | int) }}
                {{- end }}
                -Xdebug
                -Xrunjdwp:transport=dt_socket,server=y,suspend={{ $debugSuspend }},address=0.0.0.0:{{ $debugPort }}
              {{- end }}
          {{- include "arkcase.subsystem.ports" ($.Values.service).arkcase | nindent 10 }}
          {{- with ($.Values.command).arkcase }}
          command: {{ toJson $ }}
          {{- end }}
          {{- with ($.Values.resources).arkcase }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with ($.Values.securityContext).arkcase }}
          securityContext: {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: *initVolume
              mountPath: *initDir
            - name: *homeVolume
              mountPath: *homeDir
            - name: *confVolume
              mountPath: "/app/home/.arkcase"
            - name: *warVolume
              mountPath: "/app/tomcat/webapps/arkcase"
            - name: &configMap "config-map"
              mountPath: "/app/home/.arkcase/acm/acm-config-server-repo/spring/quartz.properties"
              subPath: &quartzProperties "quartz.properties"
              readOnly: true
            - name: *configMap
              mountPath: "/app/home/.arkcase/acm/log4j2.xml"
              subPath: &log4j2Xml "log4j2.xml"
              readOnly: true
            - name: *configMap
              mountPath: "/app/home/.arkcase/acm/spring/proxy-config/spring-config-proxy.xml"
              subPath: &springConfigProxyXml "spring-config-proxy.xml"
              readOnly: true
            - name: &secrets "secrets"
              mountPath: "/app/home/.arkcase/acm/acm-config-server-repo/application.yaml"
              subPath: &applicationYaml "application.yaml"
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/acm-config-server-repo/arkcase-k8s.yaml"
              subPath: &arkcaseK8sYaml "arkcase-k8s.yaml"
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/acm-config-server-repo/arkcase-activemq.yaml"
              subPath: &arkcaseActivemqYaml "arkcase-activemq.yaml"
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/acm-config-server-repo/ldap/ldap.yaml"
              subPath: &ldapYaml "ldap.yaml"
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/cmis/camel-config-alfresco-cmis.properties"
              subPath: &camelConfigAlfrescoCmisProperties "camel-config-alfresco-cmis.properties"
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/cmis/camel-config-opencmis-cmis.properties"
              subPath: &camelConfigOpenCmisCmisProperties "camel-config-opencmis-cmis.properties"
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/conf.yml"
              subPath: &confYaml "conf.yml"
              readOnly: true
            - name: *secrets
              mountPath: "/app/home/.arkcase/acm/licenses/pdfnet_sdk_license.txt"
              subPath: &pdfnetSdkLicenseTxt "pdfnet_sdk_license.txt"
              readOnly: true
            - name: *logsVolume
              mountPath: *logsDir
        - name: cloudconfig
          {{- with ($.Values.securityContext).cloudconfig }}
          securityContext: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- include "arkcase.image" (dict "ctx" $ "name" "cloudconfig" "repository" "arkcase/cloudconfig") | nindent 10 }}
          env: {{- include "arkcase.tools.baseEnv" $ | nindent 12 }}
            {{- with (($.Values.configuration).cloudconfig).env }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
            - name: DATA_DIR
              value: *confDir
            - name: JAVA_TOOL_OPTIONS
              value: >-
                -XX:MinRAMPercentage=50
                -XX:MaxRAMPercentage=80
          {{- include "arkcase.subsystem.ports" ($.Values.service).cloudconfig | nindent 10 }}
          {{- with ($.Values.command).cloudconfig }}
          command: {{ toJson . }}
          {{- end }}
          {{- with ($.Values.resources).cloudconfig }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with ($.Values.securityContext).cloudconfig }}
          securityContext: {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: *confVolume
              mountPath: *confDir
              subPath: "acm/acm-config-server-repo"
            - name: *configMap
              mountPath: "/app/conf/spring/quartz.properties"
              subPath: *quartzProperties
              readOnly: true
            - name: *secrets
              mountPath: "/app/conf/application.yaml"
              subPath: *applicationYaml
              readOnly: true
            - name: *secrets
              mountPath: "/app/conf/arkcase-activemq.yaml"
              subPath: *arkcaseActivemqYaml
              readOnly: true
            - name: *secrets
              mountPath: "/app/conf/arkcase-k8s.yaml"
              subPath: *arkcaseK8sYaml
              readOnly: true
            - name: *secrets
              mountPath: "/app/conf/ldap/ldap.yaml"
              subPath: *ldapYaml
              readOnly: true
      volumes:
        - name: *secrets
          secret:
            optional: false
            secretName: {{ include "arkcase.fullname" $ | quote }}
            defaultMode: 0444
            items:
              - key: *applicationYaml
                path: *applicationYaml
              - key: *arkcaseK8sYaml
                path: *arkcaseK8sYaml
              - key: *ldapYaml
                path: *ldapYaml
              - key: *camelConfigAlfrescoCmisProperties
                path: *camelConfigAlfrescoCmisProperties
              - key: *camelConfigOpenCmisCmisProperties
                path: *camelConfigOpenCmisCmisProperties
              - key: *arkcaseActivemqYaml
                path: *arkcaseActivemqYaml
              - key: *confYaml
                path: *confYaml
              - key: *pdfnetSdkLicenseTxt
                path: *pdfnetSdkLicenseTxt
        - name: *configMap
          configMap:
            optional: false
            name: {{ include "arkcase.fullname" $ | quote }}
            defaultMode: 0444
            items:
              - key: *quartzProperties
                path: *quartzProperties
              - key: *springConfigProxyXml
                path: *springConfigProxyXml
              - key: *log4j2Xml
                path: *log4j2Xml
        {{- include "arkcase.persistence.volume" (dict "ctx" $ "name" "init") | nindent 8 }}
        {{- include "arkcase.persistence.volume" (dict "ctx" $ "name" "home") | nindent 8 }}
        {{- include "arkcase.persistence.volume" (dict "ctx" $ "name" "conf") | nindent 8 }}
        {{- include "arkcase.persistence.volume" (dict "ctx" $ "name" "war" ) | nindent 8 }}
        {{- include "arkcase.persistence.volume" (dict "ctx" $ "name" "logs") | nindent 8 }}
  volumeClaimTemplates:
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "init") | nindent 4 }}
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "home") | nindent 4 }}
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "conf") | nindent 4 }}
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "war" ) | nindent 4 }}
    {{- include "arkcase.persistence.volumeClaimTemplate" (dict "ctx" $ "name" "logs") | nindent 4 }}

  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "init") | nindent 0 }}
  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "home") | nindent 0 }}
  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "conf") | nindent 0 }}
  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "war" ) | nindent 0 }}
  {{- include "arkcase.persistence.declareResources" (dict "ctx" $ "volume" "logs") | nindent 0 }}

{{- end }}
