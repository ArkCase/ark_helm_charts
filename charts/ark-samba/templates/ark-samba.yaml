{{- if or .Values.enabled (not (hasKey .Values "enabled")) }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "common.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "common.fullname" . }}
  updateStrategy:
    type: {{ .Values.updateStrategy }}
    {{- if (eq "Recreate" .Values.updateStrategy) }}
    rollingUpdate: null
    {{- else if .Values.rollingUpdatePartition }}
    rollingUpdate:
      partition: {{ .Values.rollingUpdatePartition }}
    {{- end }}
  template:
    metadata:
      annotations:
        {{- if (include "common.createConfigmap" .) }}
        checksum/configuration: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.service.ports.metrics }}
        # NB: Both these annotation values must be of type "string"
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.service.ports.metrics.port | quote }}
        {{- end }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "common.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName | quote }}
      {{- end }}
      serviceAccountName: {{ include "common.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: samba
          securityContext:
            {{- toYaml .Values.securityContext.samba | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DOMAIN
              value: {{ .Values.domain.name | quote }}
            - name: DOMAINPASS
              valueFrom:
                secretKeyRef:
                  name: mysamba-ark-samba
                  key: DOMAIN_PASSWORD
            - name: JOIN
              value: "false"
            #- name: JOINSITE
            #  value: ""
            - name: INSECURELDAP
              value: "false"
            - name: MULTISITE
              value: "false"
            - name: NOCOMPLEXITY
              value: "true"
          ports:
            - name: ldaps
              protocol: TCP
              containerPort: 636
          readinessProbe:
            exec:
              command: [ "/test-ready.sh" ]
            {{- include "common.tplvalues.render" (dict "value" .Values.service.ports.ldaps.readinessProbe "context" $) | nindent 12 }}
          livenessProbe:
            exec:
              command: [ "/test-live.sh" ]
            {{- include "common.tplvalues.render" (dict "value" .Values.service.ports.ldaps.livenessProbe "context" $) | nindent 12 }}
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: "data"
              mountPath: "/var/lib/samba"
            - name: "conf"
              mountPath: "/config"
            - name: "logs"
              mountPath: "/var/log/samba"
            - name: "secrets"
              mountPath: "/app/conf"
              readOnly: true
      volumes:
        - name: "data"
          {{- if (include "common.persistence.isEnabled" .) }}
          persistentVolumeClaim:
            {{- if (((.Values.persistence).data).claim).name }}
            claimName: {{ .Values.persistence.data.claim.name | quote }}
            {{- else }}
            claimName: {{ template "common.fullname" . }}-data
            {{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: "conf"
          {{- if (include "common.persistence.isEnabled" .) }}
          persistentVolumeClaim:
            {{- if (((.Values.persistence).conf).claim).name }}
            claimName: {{ .Values.persistence.conf.claim.name | quote }}
            {{- else }}
            claimName: {{ template "common.fullname" . }}-conf
            {{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: "logs"
          {{- if (include "common.persistence.isEnabled" .) }}
          persistentVolumeClaim:
            {{- if (((.Values.persistence).logs).claim).name }}
            claimName: {{ .Values.persistence.logs.claim.name | quote }}
            {{- else }}
            claimName: {{ template "common.fullname" . }}-logs
            {{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: secrets
          secret:
            secretName: {{ include "common.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
