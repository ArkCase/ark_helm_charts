{{- if (include "arkcase.subsystem.enabled" .) }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "common.fullname" . | quote }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels" . | nindent 4 }}
    {{- with (.Values.labels).common }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with (.Values.annotations).common }}
  annotations: {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not (.Values.autoscaling).enabled }}
  replicas: {{ .Values.replicaCount | default 1 }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
  serviceName: {{ include "common.fullname" . | quote }}
  updateStrategy:
    type: {{ .Values.updateStrategy }}
    {{- if (eq "Recreate" .Values.updateStrategy) }}
    rollingUpdate: null
    {{- else if .Values.rollingUpdatePartition }}
    rollingUpdate:
      partition: {{ .Values.rollingUpdatePartition }}
    {{- end }}
  template:
    metadata:
      name: {{ include "common.name" . | quote }}
      namespace: {{ .Release.Namespace | quote }}
      labels: {{- include "common.labels" . | nindent 8 }}
        {{- with (.Values.labels).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        # NB: Both these annotation values must be of type "string"
        prometheus.io/scrape: "true"
        prometheus.io/port: "9100"
        {{- with (.Values.annotations).common }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.hostAliases }}
      hostAliases: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName | quote }}
      {{- end }}
      serviceAccountName: {{ include "common.serviceAccountName" . }}
      {{- with (.Values.securityContext).template }}
      securityContext: {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        {{- if (include "arkcase.samba.step" .) }}
        - name: set-permissions
          image: {{ include "arkcase.tools.subimage" (dict "ctx" . "name" "setperm" "image" "ark_setperm") | quote }}
          env: {{- include "arkcase.tools.baseEnv" . | nindent 12 }}
            - name: JOBS
              value: |
                jobs:
                  # We know the Step image uses user 1000
                  - ownership: {{ coalesce (.Values.persistence).ownership "1000:1000" | quote }}
                    permissions: "u=rwX,g=rX,o="
                    flags: [ "recurse", "noforced", "create", "changes" ]
                    targets: [ "/step" ]
          volumeMounts:
            - name: &stepVolume "step"
              mountPath: "/step"
        {{- end }}
        {{- include "arkcase.initDependencies.container" . | nindent 8 }}
      containers:
        - name: samba
          {{- with (.Values.securityContext).samba }}
          securityContext: {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ include "arkcase.tools.image" . | quote }}
          imagePullPolicy: {{ include "arkcase.tools.imagePullPolicy" . | quote }}
          env: {{- include "arkcase.tools.baseEnv" . | nindent 12 }}
            - name: DOMAIN
              value: {{ .Values.configuration.domain.name | quote }}
            - name: DOMAINPASS
              valueFrom:
                secretKeyRef:
                  name: &secretName {{ include "common.fullname" . | quote }}
                  key: DOMAIN_PASSWORD
            - name: JOIN
              value: "false"
            #- name: JOINSITE
            #  value: ""
            - name: INSECURELDAP
              value: "false"
            - name: MULTISITE
              value: "false"
            - name: NOCOMPLEXITY
              value: "true"
            - name: LDAP_SEED_FILE
              value: "/app/secrets/seeds.yaml"
            - name: SERVICE_NAME
              value: {{ include "arkcase.subsystem.service.name" . | quote }}
          {{- if (include "arkcase.samba.step" .) }}
            - name: STEP_URL
              value: "https://localhost:9000"
            - name: STEP_PASSWORD_FILE
              value: "/app/secrets/step.password"
          {{- end }}
          {{- include "arkcase.subsystem.ports" . | nindent 10 }}
          {{- if .Values.command }}
          command: {{- .Values.command | toYaml | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: "init"
              mountPath: "/app/init"
            - name: "conf"
              mountPath: "/app/conf"
            - name: "data"
              mountPath: "/var/lib/samba"
            - name: "logs"
              mountPath: "/var/log/samba"
            - name: &secrets "secrets"
              mountPath: "/app/secrets"
              readOnly: true
            - name: &configMap "configmap"
              mountPath: "/app/init/init.d/000-init-seeds"
              subPath: &initSeeds "init-seeds"
              readOnly: true
          {{- if (include "arkcase.samba.step" .) }}
        - name: step
          image: {{ include "arkcase.tools.subimage" (dict "ctx" . "name" "step" "image" "smallstep/step-ca") | quote }}
          imagePullPolicy: {{ include "arkcase.tools.imagePullPolicy" . | quote }}
          env: {{- include "arkcase.tools.baseEnv" . | nindent 12 }}
            - name: DOCKER_STEPCA_INIT_NAME
              value: "ArkCase Samba"
            - name: DOCKER_STEPCA_INIT_DNS_NAMES
              value: "localhost"
            - name: DOCKER_STEPCA_INIT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: *secretName
                  key: "step.password"
          # ports:
          #   - name: https
          #     protocol: TCP
          #     containerPort: 9000
          volumeMounts:
            - name: *stepVolume
              mountPath: "/home/step"
            - name: *configMap
              mountPath: "/entrypoint.sh"
              subPath: &stepEntrypointSh "step-entrypoint.sh"
              readOnly: true
          {{- end }}
      volumes:
        {{- include "arkcase.persistence.volume" (dict "name" "init" "ctx" $) | nindent 8 }}
        {{- include "arkcase.persistence.volume" (dict "name" "conf" "ctx" $) | nindent 8 }}
        {{- include "arkcase.persistence.volume" (dict "name" "data" "ctx" $) | nindent 8 }}
        {{- include "arkcase.persistence.volume" (dict "name" "logs" "ctx" $) | nindent 8 }}
        {{- if (include "arkcase.samba.step" .) }}
        {{- include "arkcase.persistence.volume" (dict "name" "step" "ctx" $) | nindent 8 }}
        {{- end }}
        - name: *secrets
          secret:
            optional: false
            secretName: *secretName
            defaultMode: 0444
        - name: *configMap
          configMap:
            optional: false
            name: {{ include "common.fullname" . | quote }}
            defaultMode: 0444
            items:
              - key: *initSeeds
                path: *initSeeds
                mode: 0555
              - key: *stepEntrypointSh
                path: *stepEntrypointSh
                mode: 0555
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}

{{- if (include "arkcase.persistence.enabled" .) }}
{{ include "arkcase.persistence.declareObjects" (dict "ctx" $ "name" "init") | indent 0 }}
{{ include "arkcase.persistence.declareObjects" (dict "ctx" $ "name" "conf") | indent 0 }}
{{ include "arkcase.persistence.declareObjects" (dict "ctx" $ "name" "data") | indent 0 }}
{{ include "arkcase.persistence.declareObjects" (dict "ctx" $ "name" "logs") | indent 0 }}
{{- if (include "arkcase.samba.step" .) }}
{{ include "arkcase.persistence.declareObjects" (dict "ctx" $ "name" "step") | indent 0 }}
{{- end }}
{{- end }}

{{- end }}
