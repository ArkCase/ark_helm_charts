# Default values for ark-samba.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# This can be set to "false" by parent charts. If not defined, it will be taken as true
#enabled: true

global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

image:
  repository: "ark_samba"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

annotations:

imagePullSecrets:
  - name: aws-arkcase-pull

nameOverride: ""
fullnameOverride: ""

domain:
  name: "arkcase.test"
  password: "RaL@a5eio:heC3"

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations:
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

updateStrategy: RollingUpdate
rollingUpdatePartition: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  samba:
    privileged: true
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

ldap:
  externalHost:
    enabled: false

metrics:
  enabled: true
  annotations: {}

service:
  annotations:
  type: NodePort
  ports:
    metrics:
      name: metrics
      protocol: TCP
      port: 9100
      targetPort: 9100
    ldaps:
      name: ldaps
      protocol: TCP
      port: 636
      targetPort: 636
      readinessProbe:
        initialDelaySeconds: 30
        periodSeconds: 10
        failureThreshold: 5
        timeoutSeconds: 5
      livenessProbe:
        initialDelaySeconds: 30
        periodSeconds: 10
        failureThreshold: 5
        timeoutSeconds: 5

# Can only include at most one of claim: or data:, not both. Can include none,
# but this will result in a "default" volume being created
persistence:
  enabled: true

# Use this when not using other persistent volumes, to point to the root location
# where the directories need to be created
  localPath: "/opt/app/arkcase"

#
# There are 3 volumes supported: data, conf, and logs
#
  data:
# The "volume" should match the contents of PersistenceVolume.spec
#    volume:
#      storageClassName: "manual"
#      persistentVolumeReclaimPolicy: Retain
#      accessModes:
#        - "ReadWriteOnce"
#      capacity:
#        storage: "10Gi"
#      hostPath:
#        path: /tmp/samba/data
#
    claim:
# "name" is the name of an existing volume claim to be re-used, can't be used if "claim" is present
#      name: "name-of-the-claim-to-consume"
# "spec" should match the contents of PersistenceVolumeClaim.spec, can't be used if "name" is present
#      spec: 
#        storageClassName: ""
#        volumeName: the-volume-to-claim
#        accessModes:
#          - "ReadWriteOnce"
#        resources:
#          limits: ""
#          requests: ""
#        selector:
#          matchExpressions:
#            - values:
#                - ""
#                - ""
#                - ""
#                ...
#              operator: "In"|"NotIn"|"Exists"|"DoesNotExist"
#              key: "labelKey"
#            - values:
#                - ""
#                - ""
#                - ""
#                ...
#              operator: "In"|"NotIn"|"Exists"|"DoesNotExist"
#              key: "labelKey"
#          matchLabels: "....."
  conf:
# The "volume" should match the contents of PersistenceVolume.spec
#    volume:
#      storageClassName: "manual"
#      persistentVolumeReclaimPolicy: Retain
#      accessModes:
#        - "ReadWriteOnce"
#      capacity:
#        storage: "10Gi"
#      hostPath:
#        path: /tmp/samba/conf
#
#    claim:
# "name" is the name of an existing volume claim to be re-used, can't be used if "claim" is present
#      name: "name-of-the-claim-to-consume"
# "spec" should match the contents of PersistenceVolumeClaim.spec, can't be used if "name" is present
#      spec: 
#        storageClassName: ""
#        volumeName: the-volume-to-claim
#        accessModes:
#          - "ReadWriteOnce"
#        resources:
#          limits: ""
#          requests: ""
#        selector:
#          matchExpressions:
#            - values:
#                - ""
#                - ""
#                - ""
#                ...
#              operator: "In"|"NotIn"|"Exists"|"DoesNotExist"
#              key: "labelKey"
#            - values:
#                - ""
#                - ""
#                - ""
#                ...
#              operator: "In"|"NotIn"|"Exists"|"DoesNotExist"
#              key: "labelKey"
#          matchLabels: "....."
  logs:
# The "volume" should match the contents of PersistenceVolume.spec
#    volume:
#      storageClassName: "manual"
#      persistentVolumeReclaimPolicy: Retain
#      accessModes:
#        - "ReadWriteOnce"
#      capacity:
#        storage: "10Gi"
#      hostPath:
#        path: /tmp/samba/logs
#
#    claim:
# "name" is the name of an existing volume claim to be re-used, can't be used if "claim" is present
#      name: "name-of-the-claim-to-consume"
# "spec" should match the contents of PersistenceVolumeClaim.spec, can't be used if "name" is present
#      spec: 
#        storageClassName: ""
#        volumeName: the-volume-to-claim
#        accessModes:
#          - "ReadWriteOnce"
#        resources:
#          limits: ""
#          requests: ""
#        selector:
#          matchExpressions:
#            - values:
#                - ""
#                - ""
#                - ""
#                ...
#              operator: "In"|"NotIn"|"Exists"|"DoesNotExist"
#              key: "labelKey"
#            - values:
#                - ""
#                - ""
#                - ""
#                ...
#              operator: "In"|"NotIn"|"Exists"|"DoesNotExist"
#              key: "labelKey"
#          matchLabels: "....."

ingress: {}

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
