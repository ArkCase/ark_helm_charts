{{- if or .Values.enabled (not (hasKey .Values "enabled")) }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "common.fullname" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "common.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "common.fullname" . }}
  template:
    metadata:
      annotations:
        # NB: Both these annotation values must be of type "string"
        prometheus.io/scrape: "false"
        prometheus.io/port: "TODO"
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "common.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "common.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: snowbound
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: CATALINA_OPTS
              value: >-
                -Dsnowbound_host_port={{ required "You must provide a value for `snowbound_host_port`" .Values.snowbound_host_port }}
                -Darkcase_host_port={{ required "You must provide a value for `arkcase_host_port`" .Values.arkcase_host_port }}
          ports:
            - name: http
              protocol: TCP
              containerPort: 8080
#TODO
#          readinessProbe:
#            tcpSocket:
#              port: 8080
#            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
#            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
#            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
#            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
#          livenessProbe:
#            tcpSocket:
#              port: 8080
#            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
#            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
#            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
#            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: "/app/home/.snowbound-docs"
      volumes:
        - name: "data"
          {{- if (include "common.persistence.isEnabled" .) }}
          persistentVolumeClaim:
            {{- if (((.Values.persistence).data).claim).name }}
            claimName: {{ .Values.persistence.data.claim.name | quote }}
            {{- else }}
            claimName: {{ template "common.fullname" . }}-data
            {{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: data
        annotations:
          {{- range $key, $value := .Values.persistence.annotations }}
            {{ $key }}: {{ $value | quote }}
          {{- end }}
      spec:
        accessModes:
          {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        storageClassName: {{ .Values.persistence.storageClass | default "standard" }}
  {{- end }}

{{- if (include "common.persistence.isEnabled" .) }}

{{ include "common.persistence.validateVolumeConfig" ( dict "vol" ((.Values.persistence).data) "ctx" $ "name" "data" ) }}
{{- if not (((.Values.persistence).data).claim).name }}
{{- if not (((.Values.persistence).data).claim).spec }}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ template "common.fullname" . }}-data
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
{{- if (((.Values.persistence).data).annotations) }}
{{- with .Values.persistence.data.annotations  }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
{{- end }}
{{- if not (((.Values.persistence).data).volume) }}
spec:
  storageClassName: "manual"
  persistentVolumeReclaimPolicy: Retain
  accessModes:
    - "ReadWriteOnce"
  capacity:
    storage: "8Gi"
  hostPath:
    path: "{{ coalesce (.Values.persistence).localPath ((.Values.global).persistence).localPath "/opt/app/arkcase" }}/data/snowbound"
{{- else }}
spec: {{- include "common.tplvalues.render" (dict "value" (((.Values.persistence).data).volume) "context" $) | nindent 2 }}
{{- end }}
{{- end }}

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ template "common.fullname" . }}-data
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
{{- if (((.Values.persistence).data).claim).spec }}
spec: {{- include "common.tplvalues.render" (dict "value" (((.Values.persistence).data).claim.spec) "context" $) | nindent 2 }}
{{- else }}
spec:
  storageClassName: "manual"
  volumeName: {{ template "common.fullname" . }}-data
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
{{- end }}
{{- end }}

{{- end }}
{{- end }}
