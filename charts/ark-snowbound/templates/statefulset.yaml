apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "ark-snowbound.fullname" . }}
  labels:
    {{- include "ark-snowbound.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "ark-snowbound.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "ark-snowbound.fullname" . }}
  template:
    metadata:
      annotations:
        # NB: Both these annotation values must be of type "string"
        prometheus.io/scrape: "false"
        prometheus.io/port: "TODO"
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "ark-snowbound.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ark-snowbound.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          #env:
          ports:
            - name: http
              protocol: TCP
              containerPort: 8080
#          readinessProbe:
#            tcpSocket:
#              port: 8080
#            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
#            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
#            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
#            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
#          livenessProbe:
#            tcpSocket:
#              port: 8080
#            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
#            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
#            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
#            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: docs
              mountPath: {{ .Values.persistence.mountPath }}
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
      volumes:
        - name: docs
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: {{ include "ark-snowbound.fullname" . }}
      spec:
        accessModes:
          {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        storageClassName: {{ .Values.persistence.storageClassName | default "standard" }}
  {{- end }}
