#
#
#
hostname: &hostname "application.arkcase.test"
# backendName: &backendName "iad032-1san01.appdev.armedia.com"
adminUsername: &arkcaseAdminUsername "arkcase-admin"
adminPassword: &arkcaseAdminPassword "AcMd3v$AcMd3v$"

#
# This should group all application-specific configurations
#
configuration:

  # This *should* propagate downward via the map references, below
  ldap: &ldapConfig
    domain: &ldapDomain "arkcase.test"
    url: "ldaps://ldap:636"
    baseDn: &baseDn "dc=arkcase,dc=test"
    bind:
      dn: "cn=arkcase-admin,cn=Users,dc=arkcase,dc=test"
      password: *arkcaseAdminPassword
    admin:
      dn: "cn=arkcase-admin"
      role: "cn=ARKCASE_ADMINISTRATOR"
    search:
      base: *baseDn
      users:
        base: "cn=Users"
        attribute: "sAMAccountName"
        filter: "(&(objectClass=user)(sAMAccountName={0}))"
        allFilter: "(objectClass=user)"
        prefix: ""
      groups:
        base: "cn=Users"
        attribute: "cn"
        filter: "(&(objectClass=group)(cn={0}))"
        allFilter: "(objectClass=group)"
        membership: "(&(objectClass=group)(member={0}))"
        ignoreCase: "false"
        subtree: "true"
        rolePrefix: ""
        prefix: ""

  ingress:
    enabled: false
    className: &ingressClass "haproxy"
    # service:
    #   name: "gateway"
    #   port: 80
    # annotations:
    #   kubernetes.io/ingress.class: *ingressClass
    # labels:
    #   kubernetes.io/ingress.class: *ingressClass
    # Enable this for TLS support at the ingress controller level
    # tls:
      # crt: |-
        # MIIFPjCCBCagAwIBAgIBEzANBgkqhkiG9w0BAQsFADCBtzELMAkGA1UEBhMCQ1Ix
        # ETAPBgNVBAgTCFNhbiBKb3NlMRIwEAYDVQQHEwlTYW50YSBBbmExFzAVBgNVBAoT
        # DkVydWRpY2l0eSBTLkEuMRwwGgYDVQQLExNTZWN1cml0eSBPcGVyYXRpb25zMSMw
        # ...
        # uc3KmY3NvM2PcHdB5TAFj5s59d8bHwcVcDS4lXK2+bmYTimtpxusM+5/7VRUrKVE
        # +f79UJY235PUKs3XXZPEjiknHj4c83nHQ+leCvhUGcQxnj/hu0r3fNetwucCyokl
        # UWI=
      # key: |-
        # MIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDuVBpXmE3jx4Cy
        # BBWhsV3YQ8Er5B6iini4muyoRIxHX59wLIXmDFRAL1/s4MFegiCCXDVjuDNfwnqg
        # sUOXYLK5uO0/p13FJZa5nXJKJSuKFhOvlBe+SY+MgScd3JU7QjUwpo2qQctsY9VX
        # ...
        # 1gBqSd2OMnETFz/mOH098N98xubIVFT21Xiw7kxAEw7+wk+RdlV5jcjrarqCBqyK
        # SCf3y/YLFB6LvZUqUndIF5zu7M3iDZkmm9vH0II7ceScy9EPoneImyluOjqOWqCo
        # P5IEB0fxZC3kZQ6Jjm/c9/a5Kw==
      # ca: |-
        # MIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDuVBpXmE3jx4Cy
        # BBWhsV3YQ8Er5B6iini4muyoRIxHX59wLIXmDFRAL1/s4MFegiCCXDVjuDNfwnqg
        # sUOXYLK5uO0/p13FJZa5nXJKJSuKFhOvlBe+SY+MgScd3JU7QjUwpo2qQctsY9VX
        # ...
        # 1gBqSd2OMnETFz/mOH098N98xubIVFT21Xiw7kxAEw7+wk+RdlV5jcjrarqCBqyK
        # SCf3y/YLFB6LvZUqUndIF5zu7M3iDZkmm9vH0II7ceScy9EPoneImyluOjqOWqCo
        # P5IEB0fxZC3kZQ6Jjm/c9/a5Kw==

gateway:
  enabled: false
  configuration:
    proxies:

      # ArkCase Core
      ark-core:
        preserveHosts: true
        locations:
          - url: &coreUrl "http://core:8080/arkcase"
            path: "/arkcase"

      # ArkCase Cloud Configuration
      ark-config:
        preserveHosts: true
        locations:
          - url: &configUrl "http://core:9999/"
            path: "/config"
            html:
              enabled: true
              extended: true
              urlMap:
                - from: *configUrl
                  to: "/config/"
                - from: "/"
                  to: "/config/"

      # ActiveMQ
      ark-messaging:
        preserveHosts: true
        locations:
          - url: "http://messaging:8161/"
            path: "/messaging"
            html:
              enabled: true
              extended: true
              urlMap:
                - from: "http://messaging:8161/admin/"
                  to: "/messaging/admin/"
                - from: "/admin/"
                  to: "/messaging/admin/"
                - from: "http://messaging:8161/api/"
                  to: "/messaging/api/"
                - from: "/api/"
                  to: "/messaging/api/"

      # Solr
      ark-search:
        preserveHosts: true
        locations:
          - url: "http://search:8983/solr/"
            path: "/search"

      # Snowbound
      ark-viewer:
        preserveHosts: true
        locations:
          - url: &viewerUrl "http://viewer:8080/VirtualViewerJavaHTML5/"
            path: "/viewer"
            html:
              enabled: true
              extended: true
              urlMap:
                - from: *viewerUrl
                  to: "/viewer/"
                - from: "/VirtualViewerJavaHTML5/"
                  to: "/viewer/"

      # Pentaho
      ark-reports:
        preserveHosts: true
        locations:
          - url: &reportsUrl "http://reports:8080/pentaho/"
            path: "/pentaho"

initDependencies: &initDependencies
  # This template basically means that any of the given ports
  # will be accepted as sufficient, there will be a 10 second
  # delay before probing starts, and up to 12 probing attempts
  # will be undertaken with a 5 second pause between attempts,
  # with each attempt timing out after 5 seconds. That leads
  # to a theoretical maximum wait time of 2 minutes for startup
  template:
    mode: any
    initialDelay: 10
    delay: 5
    timeout: 5
    attempts: 12

messaging:
  service:
    # external: "www.activemq.com"
  persistence:
    ownership: "1998:1998"
  securityContext:
    activemq:
      runAsUser: 1998
      runAsGroup: 1998
  # image:
  #   tag: 5.16.2
  configuration:
    users:
      - name: &arkcaseMessagingUser "arkcase"
        password: &arkcaseMessagingPassword "Thoan-aeL[u>u7eC"
        groups: "admins"
        roles: "admin"
      - name: &cloudConfigMessagingUser "cloudconfig"
        password: &cloudConfigMessagingPassword "mie|Qu}ai8ahniu|"
        groups: "admins"
        roles: "admin"
      - name: &guestUser "guest"
        password: *guestUser

ldap:
  configuration:
    ldap:
      <<: *ldapConfig
    domain:
      name: *ldapDomain
      password: "RaL@a5eio:heC3"
  # service:
    # external: "ldap.appdev.armedia.com"

search:
  service:
    # external: ["192.168.3.33", "12.13.14.15"]

viewer:
  service:
    # external: www.viewer.com

rdbms:
  # command: [ "sleep", "infinity" ]
  dbinit:
    admin: "YieghuV!ahh0EoC1"
    users:
      arkcase: &arkcaseDbPassword "ho!aKaeyoh-zo1do"
      content: &contentDbPassword "eth3be.ox4phah!W"
      # pentaho: &pentahoDbPassword "faiv>a[gheeP3Cai"
      # jcr: &jcrDbPassword "ong>oo0Ocha~up^e"
      # quartz: &quartzDbPassword "lie't+ahra6aiShu"
    databases:
      arkcase: &arkcaseDb "arkcase"
      content: &contentDb "content"
      # pentaho: &pentahoDb "pentaho"
      # jcr: &jcrDb "jcr"
      # quartz: &quartzDb "quartz"

core:
  configuration:
    ldap:
      <<: *ldapConfig

  initDependencies:
    <<: *initDependencies
    enabled: true
    mode: all
    dependencies:
      search:
        ports:
          - 8983
      viewer:
        ports:
          - 8080
      rdbms:
        ports:
          - 1433
          - 1521
          - 3306
          - 5432
      messaging:
        ports:
          - 61613
          - 61614
          - 61616

reports:
  service:
    # external: "some-external-ip"
  configuration:
    arkcase:
       adminUsername: *arkcaseAdminUsername
       adminPassword: *arkcaseAdminPassword
    serverUrl: "http://reports:8080/pentaho/"
    jdbc:
      acm3:
        username: *arkcaseDb
        password: *arkcaseDbPassword
        url: "jdbc:postgresql://rdbms:5432/arkcase"
#     tomcat:
#       proxy:
#         name: *backendName
#         port: 443
    ldap:
      <<: *ldapConfig

  initDependencies:
    <<: *initDependencies
    enabled: true
    mode: all
    dependencies:
      rdbms:
        # By using the approach that any of these ports is
        # sufficient, we cover all our bases regarding the RDBMS
        # backend in use, be it MS-SQL (1433), Oracle (1521),
        # MySQL (3306), or PostgreSQL (5432)
        ports:
          - 1433
          - 1521
          - 3306
          - 5432

# Please leave the `replicaCount` to 1 for the time being. Clustering is not
# supported yet.
replicaCount: 1

platform: ""
image:
  registry: "207428623785.dkr.ecr.us-east-1.amazonaws.com"
  repository: "arkcase/nettest"
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"
  pullPolicy: IfNotPresent

command: [ "sleep", "infinity" ]

imagePullSecrets:
  - name: aws-arkcase-pull

# You generally shouldn't mess with these. These exist to support some name-generation templates
nameOverride: ""
fullnameOverride: ""

# Custom annotations to apply throughout
annotations:

# Custom labels to apply throughout
labels:

updateStrategy: RollingUpdate
rollingUpdatePartition: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations:
  # Annotations to add to the service account
  labels:
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

securityContext:
  template:
    # You must specify an `fsGroup` to allow ActiveMQ write access to mounted
    # volumes (as long as ActiveMQ runs as a non-root user, which should be the
    # case). Any random number will do.
    # fsGroup: 2000
    # fsGroupChangePolicy: OnRootMismatch
  nettest:
    # privileged: true
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

#autoscaling:
  #enabled: false
  #minReplicas: 1
  #maxReplicas: 100
  #targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector:

tolerations:

affinity:

# Can only include at most one of claim: or data:, not both. Can include none,
# but this will result in a "default" volume being created
persistence:
  enabled: false

# Use this when not using other persistent volumes, to point to the root location
# where the directories need to be created
  localPath: "/opt/app/arkcase"

#
# There are 3 volumes supported: data, conf, and logs
#
  data:
# Use this instance of localPath when you want a specific directory for this volume
#    localPath: "/....."
# The "volume" should match the contents of PersistenceVolume.spec
#    volume:
#      storageClassName: "manual"
#      persistentVolumeReclaimPolicy: Retain
#      accessModes:
#        - "ReadWriteOnce"
#      capacity:
#        storage: "10Gi"
#      hostPath:
#        path: /tmp/samba/data
#
#    claim:
# "name" is the name of an existing volume claim to be re-used, can't be used if "claim" is present
#      name: "name-of-the-claim-to-consume"
# "spec" should match the contents of PersistenceVolumeClaim.spec, can't be used if "name" is present
#      spec:
#        storageClassName: ""
#        volumeName: the-volume-to-claim
#        accessModes:
#          - "ReadWriteOnce"
#        resources:
#          limits: ""
#          requests: ""
#        selector:
#          matchExpressions:
#            - values:
#                - ""
#                - ""
#                - ""
#                ...
#              operator: "In"|"NotIn"|"Exists"|"DoesNotExist"
#              key: "labelKey"
#            - values:
#                - ""
#                - ""
#                - ""
#                ...
#              operator: "In"|"NotIn"|"Exists"|"DoesNotExist"
#              key: "labelKey"
#          matchLabels: "....."
