<?xml version="1.0" encoding="UTF-8"?>
<Context path="/pentaho" docbase="webapps/pentaho/">
  <Resource name="jdbc/acm3DataSource" auth="Container" type="javax.sql.DataSource"
            factory="org.pentaho.di.core.database.util.DecryptingDataSourceFactory"
            driverClassName="{{ include "arkcase.db.jdbc.driver" . }}"
            initialSize="0"
            maxActive="20"
            maxIdle="5"
            maxWait="10000"
            minIdle="0"
            password="{{ include "arkcase.db.jdbc.password" (dict "ctx" . "target" "acm3") }}"
            testOnBorrow="true"
            url="{{ include "arkcase.db.jdbc.url" (dict "ctx" . "target" "acm3") }}"
            username="{{ include "arkcase.db.jdbc.username" (dict "ctx" . "target" "acm3") }}"
            validationQuery="select 1"
            />

  <Resource name="jdbc/Hibernate" auth="Container" type="javax.sql.DataSource"
            factory="org.pentaho.di.core.database.util.DecryptingDataSourceFactory"
            defaultAutoCommit="true"
            driverClassName="{{ include "arkcase.db.jdbc.driver" . }}"
            initialSize="0"
            jdbcInterceptors="ConnectionState"
            maxActive="20"
            maxIdle="5"
            maxWait="10000"
            minIdle="0"
            password="{{ include "arkcase.db.jdbc.password" (dict "ctx" . "target" "hibernate") }}"
            testOnBorrow="true"
            url="{{ include "arkcase.db.jdbc.url" (dict "ctx" . "target" "hibernate") }}"
            username="{{ include "arkcase.db.jdbc.username" (dict "ctx" . "target" "hibernate") }}"
            validationQuery="select 1"
            />

  <Resource name="jdbc/Audit" auth="Container" type="javax.sql.DataSource"
            factory="org.pentaho.di.core.database.util.DecryptingDataSourceFactory"
            driverClassName="{{ include "arkcase.db.jdbc.driver" . }}"
            initialSize="0"
            maxActive="20"
            maxIdle="5"
            maxWait="10000"
            minIdle="0"
            password="{{ include "arkcase.db.jdbc.password" (dict "ctx" . "target" "audit") }}"
            testOnBorrow="true"
            url="{{ include "arkcase.db.jdbc.url" (dict "ctx" . "target" "audit") }}"
            username="{{ include "arkcase.db.jdbc.username" (dict "ctx" . "target" "audit") }}"
            validationQuery="select 1"
            />

  <Resource name="jdbc/Quartz" auth="Container" type="javax.sql.DataSource"
            factory="org.pentaho.di.core.database.util.DecryptingDataSourceFactory"
            driverClassName="{{ include "arkcase.db.jdbc.driver" . }}"
            initialSize="0"
            maxActive="20"
            maxIdle="5"
            maxWait="10000"
            minIdle="0"
            password="{{ include "arkcase.db.jdbc.password" (dict "ctx" . "target" "quartz") }}"
            testOnBorrow="true"
            url="{{ include "arkcase.db.jdbc.url" (dict "ctx" . "target" "quartz") }}"
            username="{{ include "arkcase.db.jdbc.username" (dict "ctx" . "target" "quartz") }}"
            validationQuery="select 1"
            />

  <Resource name="jdbc/PDI_Operations_Mart" auth="Container" type="javax.sql.DataSource"
            factory="org.pentaho.di.core.database.util.DecryptingDataSourceFactory"
            driverClassName="{{ include "arkcase.db.jdbc.driver" . }}"
            initialSize="0"
            maxActive="20"
            maxIdle="5"
            maxWait="10000"
            minIdle="0"
            password="{{ include "arkcase.db.jdbc.password" (dict "ctx" . "target" "pdiOperationsMart") }}"
            testOnBorrow="true"
            url="{{ include "arkcase.db.jdbc.url" (dict "ctx" . "target" "pdiOperationsMart") }}"
            username="{{ include "arkcase.db.jdbc.username" (dict "ctx" . "target" "pdiOperationsMart") }}"
            validationQuery="select 1"
            />

  <Resource name="jdbc/pentaho_operations_mart" auth="Container" type="javax.sql.DataSource"
            factory="org.pentaho.di.core.database.util.DecryptingDataSourceFactory"
            driverClassName="{{ include "arkcase.db.jdbc.driver" . }}"
            initialSize="0"
            maxActive="20"
            maxIdle="5"
            maxWait="10000"
            minIdle="0"
            password="{{ include "arkcase.db.jdbc.password" (dict "ctx" . "target" "pentahoOperationsMart") }}"
            testOnBorrow="true"
            url="{{ include "arkcase.db.jdbc.url" (dict "ctx" . "target" "pentahoOperationsMart") }}"
            username="{{ include "arkcase.db.jdbc.username" (dict "ctx" . "target" "pentahoOperationsMart") }}"
            validationQuery="select 1"
            />

  <Resource name="jdbc/live_logging_info" auth="Container" type="javax.sql.DataSource"
            factory="org.pentaho.di.core.database.util.DecryptingDataSourceFactory"
            driverClassName="{{ include "arkcase.db.jdbc.driver" . }}"
            initialSize="0"
            maxActive="20"
            maxIdle="5"
            maxWait="10000"
            minIdle="0"
            password="{{ include "arkcase.db.jdbc.password" (dict "ctx" . "target" "liveLogging") }}"
            testOnBorrow="true"
            url="{{ include "arkcase.db.jdbc.url" (dict "ctx" . "target" "liveLogging") }}?searchpath=pentaho_dilogs"
            username="{{ include "arkcase.db.jdbc.username" (dict "ctx" . "target" "liveLogging") }}"
            validationQuery="select 1"
            />

  <Resource name="jdbc/jackrabbit" auth="Container" type="javax.sql.DataSource"
            factory="org.pentaho.di.core.database.util.DecryptingDataSourceFactory"
            driverClassName="{{ include "arkcase.db.jdbc.driver" . }}"
            initialSize="0"
            maxActive="20"
            maxIdle="5"
            maxWait="10000"
            minIdle="0"
            password="{{ include "arkcase.db.jdbc.password" (dict "ctx" . "target" "jackrabbit") }}"
            testOnBorrow="true"
            url="{{ include "arkcase.db.jdbc.url" (dict "ctx" . "target" "jackrabbit") }}"
            username="{{ include "arkcase.db.jdbc.username" (dict "ctx" . "target" "jackrabbit") }}"
            validationQuery="select 1"
            />
</Context>
