# Default values for ark-activemq.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Please leave the `replicaCount` to 1 for the time being. Clustering is not
# supported yet.
replicaCount: 1

image:
  repository: "345280441424.dkr.ecr.ap-south-1.amazonaws.com/ark_activemq"
  pullPolicy: IfNotPresent
  tag: "20210716-45b2fb2"

imagePullSecrets:
  - name: aws-arkcase-pull

nameOverride: ""
fullnameOverride: ""

# Console username and password: Please set a secure password
adminUsername: admin
adminPassword: admin

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # Labels to add to the service account
  labels: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  # name: ""

# Custom annotations to apply throughout
annotations: {}

# Custom labels to apply throughout
labels: {}

podSecurityContext:
  # You must specify an `fsGroup` to allow ActiveMQ write access to mounted
  # volumes (as long as ActiveMQ runs as a non-root user, which should be the
  # case). Any random number will do.
  fsGroup: 23948

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true

resources:
  ## Example
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  limits:
  ## Example
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  requests:
# autoscaling:
#   enabled: false
#   minReplicas: 1
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80
#   # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

##
## Configure extra options for containers' liveness and readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
## @param probes.enabled Enable liveness and readiness probes
## @param probes.spec.initialDelaySeconds Initial delay seconds for liveness and readiness probes
## @param probes.spec.periodSeconds Period seconds for liveness and readiness probes
## @param probes.spec.timeoutSeconds Timeout seconds for liveness and readiness probes
## @param probes.spec.failureThreshold Failure threshold for liveness and readiness probes
## @param probes.spec.successThreshold Success threshold for liveness and readiness probes
##
probes:
  enabled: true
  spec:
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 2
    failureThreshold: 2
    successThreshold: 1

persistence:
  # If set to `false`, an `emptyDir` will be used instead and all other `persistence.*` parameters
  # are ignored.
  enabled: true

# Use this when not using other persistent volumes, to point to the root location
# where the directories need to be created
  localPath: "/opt/app/arkcase"

#
# There is 1 volume supported: data
#
  data:
# The "spec" should match the contents of PersistenceVolume.spec
    spec:
#      storageClassName: "manual"
#      persistentVolumeReclaimPolicy: Retain
#      accessModes:
#        - "ReadWriteOnce"
#      capacity:
#        storage: "10Gi"
#      hostPath:
#        path: /tmp/samba/data
#
    claim:
# "name" is the name of an existing volume claim to be re-used, can't be used if "claim" is present
#      name: "name-of-the-claim-to-consume"
# "spec" should match the contents of PersistenceVolumeClaim.spec, can't be used if "name" is present
#      spec: 
#        storageClassName: ""
#        volumeName: the-volume-to-claim
#        accessModes:
#          - "ReadWriteOnce"
#        resources:
#          limits: ""
#          requests: ""
#        selector:
#          matchExpressions:
#            - values:
#                - ""
#                - ""
#                - ""
#                ...
#              operator: "In"|"NotIn"|"Exists"|"DoesNotExist"
#              key: "labelKey"
#            - values:
#                - ""
#                - ""
#                - ""
#                ...
#              operator: "In"|"NotIn"|"Exists"|"DoesNotExist"
#              key: "labelKey"
#          matchLabels: "....."


# Limit, in GiB, of how big the KahaDB store can grow
maxStoreUsageGb: 50

# Limit, in GiB, of how much temporary storage ActiveMQ can use
maxTempUsageGb: 10
