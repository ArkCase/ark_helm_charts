# Default values for ark-activemq.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Please leave the `replicaCount` to 1 for the time being. Clustering is not
# supported yet.
replicaCount: 1

image:
  repository: 345280441424.dkr.ecr.ap-south-1.amazonaws.com/ark_activemq
  pullPolicy: IfNotPresent
  tag: 20210716-45b2fb2

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Console username and password: Please set a secure password
adminUsername: admin
adminPassword: admin

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  # You must specify an `fsGroup` to allow ActiveMQ write access to mounted
  # volumes (as long as ActiveMQ runs as a non-root user, which should be the
  # case). Any random number will do.
  fsGroup: 23948

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true

# Uncomment ports that you want ActiveMQ to open. You can also pass the ports
# you want to open as arguments to the `helm` program. Please note you need to
# open at least one of the following ports: amqp, mqtt, openwire, websocket or
# stomp.
ports:
  metrics: 5556
#  console: 8161
#  amqp: 5672
#  mqtt: 1883
#  openwire: 61616
#  websocket: 61614
#  stomp: 61613
serviceType: ClusterIP

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

readinessProbe:
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 2
  failureThreshold: 2

livenessProbe:
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 2
  failureThreshold: 2

persistence:
  # `persistence.enabled` enabled persistence for ActiveMQ
  #
  # This is done using a persistent volume claim. If set to `false`, an
  # `emptyDir` will be used instead and all other `persistence.*` parameters
  # are ignored.
  enabled: true

  # `persistence.existingClaim` uses an external PVC
  #
  # If set, the specified persistent volume claim will be used and this Helm
  # chart won't create a PVC.
  existingClaim:

  # `persistence.subPath` is the directory of the volume to mount from
  #
  # Leave empty to mount the root of the volume.
  subPath:

  # `persistence.storageClass` is the storage class for the new PVC
  #
  # If set to an empty string, the default provisionner will be used. If
  # `persistence.existingClaim is set, this parameter is ignored.
  storageClass: standard

  # `persistence.annotations` are the annotations for the new PVC
  #
  # If `persistence.existingClaim` is set, this parameter is ignored.
  annotations: {}

  # `persistence.accessModes` are the access modes for the new PVC
  #
  # If `persistence.existingClaim` is set, this parameter is ignored.
  accessModes: [ReadWriteOnce]

  # `persistence.size` is the size of the new PVC
  #
  # Use the standard Kubernetes notations to express the units; eg: "8Gi". If
  # `persistence.existingClaim` is set, this parameter is ignored.
  size: 8Gi

  # `persistence.mountPath` is the directory where the mount the persistent volume
  #
  # You should not modify this value unless you know what you are doing.
  mountPath: /app/data

# Limit, in GiB, of how big the KahaDB store can grow
maxStoreUsageGb: 50

# Limit, in GiB, of how much temporary storage ActiveMQ can use
maxTempUsageGb: 10
