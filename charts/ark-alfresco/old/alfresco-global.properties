# BEGIN ANSIBLE MANAGED BLOCK
# Alfresco 6+ uses ActiveMQ
messaging.broker.url=ssl://arkcase-ce.local:61616
# Set this property unless you have explicitly chosen to expose some repository APIs without authentication
solr.secureComms=https
synchronization.syncOnStartup=true
synchronization.syncWhenMissingPeopleLogIn=true
synchronization.autoCreatePeopleOnLogin=false
synchronization.import.cron=0 0/5 * * * ? *
csrf.filter.enabled=false
dir.root=/opt/app/arkcase/data/alfresco/alf_data
db.name=alfresco
db.username=alfresco
db.password=@rKc@3S!
db.driver=org.mariadb.jdbc.Driver
db.url=jdbc:mariadb://arkcase-ce.local:3306/alfresco?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&useSSL=true&requireSSL=true&enabledSslProtocolSuites=TLSv1.2&trustServerCertificate=false&serverSslCert=/etc/pki/tls/certs/arkcase-ce.local.crt
db.schema.update=true
db.pool.max=50
db.pool.validate.query=SELECT 1
alfresco.context=alfresco
alfresco.host=arkcase-ce.local
alfresco.port=7070
alfresco.protocol=https
share.context=share
share.host=arkcase-ce.local
share.port=7070
share.protocol=https
# audit app support
audit.enabled=true
# libreoffice, for file format conversions, per https://docs.alfresco.com/6.1/tasks/lo-install.html
jodconverter.enabled=true
jodconverter.officeHome=/usr/lib64/libreoffice
ooo.enabled=false
# imagemagick, for image manipulation, per https://docs.alfresco.com/6.1/tasks/imagemagick-config.html
img.root=/usr/lib64/ImageMagick-6.9.10
img.dyn=/usr/lib64
img.exe=/usr/bin/convert
img.coders=${img.root}/modules-Q16/coders
img.config=${img.root}/config
# PDF renderer, for thumbnails, per https://docs.alfresco.com/6.1/tasks/pdf-renderer-install.html
alfresco-pdf-renderer.root=/opt/app/arkcase/app/alfresco/alfresco-pdf-renderer
alfresco-pdf-renderer.exe=${alfresco-pdf-renderer.root}/alfresco-pdf-renderer
external.authentication.proxyUserName=
external.authentication.enabled=true
external.authentication.defaultAdministratorUserNames=
external.authentication.proxyHeader=X-Alfresco-Remote-User
synchronization.synchronizeChangesOnly=false
ldap.authentication.active=true
ldap.authentication.allowGuestLogin=false
ldap.authentication.java.naming.factory.initial=com.sun.jndi.ldap.LdapCtxFactory
ldap.authentication.java.naming.security.authentication=simple
ldap.synchronization.java.naming.security.authentication=simple
ldap.authentication.escapeCommasInBind=false
ldap.authentication.escapeCommasInUid=false
ldap.authentication.defaultAdministratorUserNames=
ldap.authentication.authenticateFTP=false
ldap.synchronization.active=true
ldap.synchronization.queryBatchSize=0
ldap.synchronization.attributeBatchSize=0
ldap.synchronization.modifyTimestampAttributeName=whenChanged
ldap.synchronization.userFirstNameAttributeName=givenName
ldap.synchronization.userLastNameAttributeName=sn
ldap.synchronization.userEmailAttributeName=mail
ldap.synchronization.userOrganizationalIdAttributeName=o
ldap.synchronization.defaultHomeFolderProvider=largeHomeFolderProvider
ldap.synchronization.groupIdAttributeName=cn
ldap.synchronization.groupDisplayNameAttributeName=displayName
ldap.synchronization.groupMemberAttributeName=member
ldap.synchronization.enableProgressEstimation=true
ldap.authentication.java.naming.read.timeout=0
#################################################################
# For Active Directory / Samba
authentication.chain=external1:external,ldap1:ldap-ad,alfrescoNtlm1:alfrescoNtlm
ldap.synchronization.groupQuery=objectClass\=group
ldap.synchronization.groupDifferentialQuery=(&(objectclass\=group)(!(whenChanged<\={0})))
ldap.synchronization.personQuery=objectClass\=user
ldap.synchronization.personDifferentialQuery=(&(objectClass\=user)(!(whenChanged<\={0})))
ldap.synchronization.timestampFormat=yyyyMMddHHmmss'.0Z'
ldap.synchronization.groupType=group
ldap.synchronization.personType=user
ldap.synchronization.userIdAttributeName=samAccountName
# remove unneeded Alfresco activity
system.usages.enabled=false
cifs.enabled=false
sync.mode=OFF
syncService.mode=OFF
activities.feed.notifier.enabled=false
sync.pullJob.enabled=false
sync.pushJob.enabled=false
alfresco.cluster.enabled=false
# Chemistry fixes
opencmis.context.override=true
opencmis.context.value=
opencmis.servletpath.override=true
opencmis.servletpath.value=
opencmis.server.override=true
opencmis.server.value=https://arkcase-ce.local/alfresco/api
# END ANSIBLE MANAGED BLOCK
###############################
## Common Alfresco Properties #
###############################

#
# Sample custom content and index data location
#
#dir.root=/srv/alfresco/alf_data
#dir.keystore=${dir.root}/keystore

#
# Sample database connection properties
#
#db.username=alfresco
#db.password=alfresco

#
# External locations
#-------------
#jodconverter.officeHome=/usr/lib64/libreoffice
#jodconverter.portNumbers=8101
#jodconverter.enabled=true
#img.root=./ImageMagick

#
# Windows specific environment variables (should not be set on unix) for ImageMagick
#
#img.coders=${img.root}/modules/coders
#img.config=${img.root}/config

#
# Property to control whether schema updates are performed automatically.
# Updates must be enabled during upgrades as, apart from the static upgrade scripts,
# there are also auto-generated update scripts that will need to be executed.  After
# upgrading to a new version, this can be disabled.
#
#db.schema.update=true

#
# MySQL connection
#
#db.driver=org.gjt.mm.mysql.Driver
#db.url=jdbc:mysql://localhost/alfresco?useUnicode=yes&characterEncoding=UTF-8

#
# Oracle connection
#
#db.driver=oracle.jdbc.OracleDriver
#db.url=jdbc:oracle:thin:@localhost:1521:alfresco

#
# SQLServer connection
# Requires SNAPSHOT isolation mode
# Enable TCP protocol on fixed port 1433
# Prepare the database with:
# ALTER DATABASE alfresco SET ALLOW_SNAPSHOT_ISOLATION ON; 
#
#db.driver=com.microsoft.sqlserver.jdbc.SQLServerDriver
#db.url=jdbc:sqlserver://${db.host}:${db.port};databaseName=${db.name};lockTimeout=1000;
#db.txn.isolation=4096

#
# PostgreSQL connection (requires postgresql-8.2-504.jdbc3.jar or equivalent)
#
#db.driver=org.postgresql.Driver
#db.url=jdbc:postgresql://localhost:5432/alfresco

#
# DB2 connection
#
#db.driver=com.ibm.db2.jcc.DB2Driver
#db.url=jdbc:db2://localhost:50000/alfresco:retrieveMessagesFromServerOnGetMessage=true;
#
# When schema is used which does not match DB2 username then currentSchema and hibernate.default_schema should be set
#db.url=jdbc:db2://localhost:50000/alfresco:retrieveMessagesFromServerOnGetMessage=true;currentSchema=${hibernate.default_schema};
#hibernate.default_schema=SAMPLE_SCHEMA

#
# Index Recovery Mode
#-------------
#index.recovery.mode=AUTO

#
# Outbound Email Configuration
#-------------
#mail.host=
#mail.port=25
#mail.username=anonymous
#mail.password=
#mail.encoding=UTF-8
#mail.from.default=alfresco@alfresco.org
#mail.smtp.auth=false

#
# Alfresco Email Service and Email Server
#-------------

# Enable/Disable the inbound email service.  The service could be used by processes other than
# the Email Server (e.g. direct RMI access) so this flag is independent of the Email Service.
#-------------
#email.inbound.enabled=true

# Email Server properties 
#-------------
#email.server.enabled=true
#email.server.port=25
#email.server.domain=alfresco.com
#email.inbound.unknownUser=anonymous

# A comma separated list of email REGEX patterns of allowed senders.
# If there are any values in the list then all sender email addresses
# must match. For example:
#   .*\@alfresco\.com, .*\@alfresco\.org
# Allow anyone:
#-------------
#email.server.allowed.senders=.*

#
# The default authentication chain
# To configure external authentication subsystems see:
# http://wiki.alfresco.com/wiki/Alfresco_Authentication_Subsystems
#-------------
#authentication.chain=alfrescoNtlm1:alfrescoNtlm

#
# URL Generation Parameters (The ${localname} token is replaced by the local server name)
#-------------
#alfresco.context=alfresco
#alfresco.host=${localname}
#alfresco.port=8080
#alfresco.protocol=http
#
#share.context=share
#share.host=${localname}
#share.port=8080
#share.protocol=http

#imap.server.enabled=true
#imap.server.port=143
#imap.server.host=localhost

# Default value of alfresco.rmi.services.host is 0.0.0.0 which means 'listen on all adapters'.
# This allows connections to JMX both remotely and locally.
#
alfresco.rmi.services.host=0.0.0.0

#
#
# Assign individual ports for each service for best performance 
# or run several services on the same port. You can even run everything on 50500 if needed.
#
# Select 0 to use a random unused port.
# 
#monitor.rmi.service.port=50508

#Smart Folders Config Properties

smart.folders.enabled=true
smart.folders.model=alfresco/model/smartfolder-model.xml
smart.folders.model.labels=alfresco/messages/smartfolder-model

#Smart reference config

#smart.reference.classpath.hash=${smart.folders.config.vanilla.processor.classpath}->1,${smart.folders.config.system.templates.classpath}->2

#Smart store config

#Company home relative download associations of smart entries 
#smart.download.associations.folder=${spaces.dictionary.childname}/${spaces.smartdownloads.childname}

#Generic virtualization methods config

#Vanilla JSON templates javascript processor classpath. A java script processor used to 
#covert JSON templates to internal smart folder definitions.

#smart.folders.config.vanilla.processor.classpath=/org/alfresco/repo/virtual/node/vanilla.js

#System virtualization method config

#System virtualization method aspect.
#smart.folders.config.system.aspect=smf:systemConfigSmartFolder
#System virtualization method aspect defined template location property.
#smart.folders.config.system.aspect.template.location.property=smf:system-template-location
#Classpath to be explored for *.json entries defining system templates.
#smart.folders.config.system.templates.classpath=/org/alfresco/repo/virtual/node
#A company home relative name or qname path location of repository system templates.
#smart.folders.config.system.templates.path=${spaces.dictionary.childname}/${spaces.smartfolders.childname}
#Content sub type of repository system templates.
#smart.folders.config.system.templates.template.type=smf:smartFolderTemplate

#Custom virtualization method config

#Custom virtualization method aspect.
#smart.folders.config.custom.aspect=smf:customConfigSmartFolder
#Custom virtualization method aspect template content association.
#smart.folders.config.custom.aspect.template.association=smf:custom-template-association


#Type virtualization method config

#A company home relative name or qname path location of the type mapped templates.
#smart.folders.config.type.templates.path=${spaces.dictionary.childname}/${spaces.smartfolders.childname}
#Type and aspect qname regular expression filter. 
#smart.folders.config.type.templates.qname.filter=none