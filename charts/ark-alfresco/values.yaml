# Default values for ark-core.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This can be set to "false" by parent charts. If not defined, it will be taken as true
#enabled: true

#
# This should group all application-specific configurations
#
configuration:

  db:
    dialect: "postgres"
    hostname: "rdbms"
    port: 5432
    database: "alfresco"
    username: "alfresco"
    password: "alfresco"

  # TODO: This must be read from *somewhere* and provided to us
  ldap:
    domain: "appdev.armedia.com"
    url: "ldaps://ldap.appdev.armedia.com:636"
    baseDn: &baseDn "OU=ArkCase Techlogix,OU=Clients,DC=appdev,DC=armedia,DC=com"
    bind:
      dn: "CN=svc.ark.tlx.ldap,OU=Service,OU=ArkCase Techlogix,OU=Clients,DC=appdev,DC=armedia,DC=com"
      password: "x9eBLMITdUQfeacKzpbn"
    admin:
      dn: "CN=450.arkcase-admin"
      role: "CN=450.ARKCASE_ADMINISTRATOR"
    search:
      base: *baseDn
      users:
        base: "OU=Dev, OU=Users"
        attribute: "sAMAccountName"
        filter: "(&(objectClass=user)(sAMAccountName={0}))"
        allFilter: "(objectClass=user)"
      groups:
        base: "OU=Dev, OU=Groups"
        attribute: "cn"
        filter: "(&(objectClass=group)(cn={0}))"
        allFilter: "(objectClass=group)"
        membership: "(&(objectClass=group)(member={0}))"
        ignoreCase: "false"
        subtree: "true"
        rolePrefix: ""

command:
  # TODO: This command is intended for debugging purposes *ONLY*
  # content: [ "sleep", "infinity" ]

initDependencies:
  enabled: true
  mode: all
  template:
    # Any of the required ports are enough to succeed
    mode: any
    initialDelay: 10
    delay: 5
    attempts: 12
  dependencies:
    rdbms:
      ports:
        # In case of SQLServer
        - 1443
        # In case of Oracle
        - 1521
        # In case of MySQL/MariaDB
        - 3306
        # In case of PostgreSQL
        - 5432

# Please leave the `replicaCount` to 1 for the time being. Clustering is not
# supported yet.
replicaCount: 1

platform: ""
image:
  registry: "207428623785.dkr.ecr.us-east-1.amazonaws.com"
  # Overrides the image tag whose default is the chart appVersion.
  # If required, for tweaking setperm
  # setperm:
  #   registry: "alternate-registry"
  #   repository: "alternate-image"
  #   tag: "alternate-tag"
  pullPolicy: IfNotPresent
  activemq:
    repository: "ark_alfresco_activemq"
    tag: "5.17.1"
  content:
    repository: "ark_alfresco_ee_content"
    # repository: "ark_alfresco_ce_content"
    # tag: "7.3.1"
  share:
    repository: "ark_alfresco_ee_share"
    # repository: "ark_alfresco_ce_share"
    # tag: "7.3.1"
  shared-file-store:
    repository: "ark_alfresco_ee_fileshare"
    tag: "2.0.0"
  transform-router:
    repository: "ark_alfresco_ee_transform_router"
    tag: "2.0.0"
  search:
    repository: "ark_alfresco_search"
    tag: "2.0.5"
  transform-core-aio:
    repository: "ark_alfresco_transform_core"
    tag: "3.0.0"

imagePullSecrets:
  - name: aws-arkcase-pull

# You generally shouldn't mess with these. These exist to support some name-generation templates
nameOverride: ""
fullnameOverride: ""

# Custom annotations to apply throughout
annotations:

# Custom labels to apply throughout
labels:

updateStrategy: RollingUpdate
rollingUpdatePartition: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations:
  # Annotations to add to the service account
  labels:
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

securityContext:
  template:
    # You must specify an `fsGroup` to allow ActiveMQ write access to mounted
    # volumes (as long as ActiveMQ runs as a non-root user, which should be the
    # case). Any random number will do.
    fsGroup: &fsGroup 1997
    fsGroupChangePolicy: OnRootMismatch
  config:
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: &runAsUser 1997
    # runAsGroup: *fsGroup
  arkcase:
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: &runAsUser 1997
    # runAsGroup: *fsGroup
resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 1
  #   memory: 1Gi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

#autoscaling:
  #enabled: false
  #minReplicas: 1
  #maxReplicas: 100
  #targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector:

tolerations:

affinity:

# Can only include at most one of claim: or data:, not both. Can include none,
# but this will result in a "default" volume being created
persistence:
  enabled: true

# Use this when not using other persistent volumes, to point to the root location
# where the directories need to be created
  localPath: "/opt/app/arkcase"

#
# There is 1 volumes supported: data
#
  data:
# Use this instance of localPath when you want a specific directory for this volume
    # localPath: "/opt/app/arkcase/config"
# The "volume" should match the contents of PersistenceVolume.spec
#     volume:
#       storageClassName: "manual"
#       persistentVolumeReclaimPolicy: Retain
#       accessModes:
#         - "ReadWriteOnce"
#       capacity:
#         storage: "10Gi"
#       hostPath:
#         path: /tmp/samba/data
#
#   claim:
# "name" is the name of an existing volume claim to be re-used, can't be used if "claim" is present
#     name: "name-of-the-claim-to-consume"
# "spec" should match the contents of PersistenceVolumeClaim.spec, can't be used if "name" is present
#     spec: 
#       storageClassName: ""
#       volumeName: the-volume-to-claim
#       accessModes:
#         - "ReadWriteOnce"
#       resources:
#         limits: ""
#         requests: ""
#       selector:
#         matchExpressions:
#           - values:
#               - ""
#               - ""
#               - ""
#               ...
#             operator: "In"|"NotIn"|"Exists"|"DoesNotExist"
#             key: "labelKey"
#           - values:
#               - ""
#               - ""
#               - ""
#               ...
#             operator: "In"|"NotIn"|"Exists"|"DoesNotExist"
#             key: "labelKey"
#         matchLabels: "....."

serviceTemplates: &serviceTemplate
  probes: &probesTemplate
    enabled: true
    spec: &probesSpecTemplate
      initialDelaySeconds: 5
      periodSeconds: 5
      timeoutSeconds: 1
      failureThreshold: 60
      successThreshold: 1

  ports: &ports {}

service:

  content:
    <<: *serviceTemplate
    ports:
      - name: "http"
        protocol: TCP
        port: 8080

  share:
    <<: *serviceTemplate
    ports:
      - name: "http"
        protocol: TCP
        port: 8080
  
  shared-file-store:
    <<: *serviceTemplate
    ports:
      - name: "http"
        protocol: TCP
        port: 8099
  
  activemq:
    <<: *serviceTemplate
    ports:
      - name: "amqp"
        protocol: TCP
        port: 5672
  
      - name: "console"
        protocol: TCP
        port: 8161
  
      - name: "stomp"
        protocol: TCP
        port: 61613
  
      - name: "openwire"
        protocol: TCP
        port: 61616
  
  search:
    <<: *serviceTemplate
    ports:
      - name: "http"
        protocol: TCP
        port: 8983
  
  transform-router:
    <<: *serviceTemplate
    ports:
      - name: "http"
        protocol: TCP
        port: 8095
  
  transform-core-aio:
    <<: *serviceTemplate
    ports:
      - name: "http"
        protocol: TCP
        port: 8090
